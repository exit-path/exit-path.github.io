{"version":3,"sources":["webpack://@exit-path/game/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://@exit-path/game/./node_modules/@babel/runtime/regenerator/index.js","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/ImageInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/SoundInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/character/styles.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/shapes.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/gradient.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/ShapeInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/MorphShapeInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/SpriteInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/FontInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/StaticTextInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/EditTextInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/AssetLibrary.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/ClassRegistry.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/FontRegistry.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/avm2/AVMObject.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/avm2/Runtime.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/avm2/XML.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/avm2/Class.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/character/EditText.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/character/Sprite.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/text/Container.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/text/layout.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/DisplayObject.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/DisplayObjectContainer.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/Graphics.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/InteractiveObject.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/MorphShape.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/MovieClip.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/Shape.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/Sprite.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/frame.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/Canvas.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/RenderContext.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/signal.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/GLState.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/Renderbuffer.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/Framebuffer.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/RenderPool.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/Atlas.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/CachedRender.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/Renderer.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/programs/render.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/Ticker.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/Stage.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/SimpleButton.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/BitmapData.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/Bitmap.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/display/Loader.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/Event.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/EventDispatcher.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/KeyboardEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/MouseEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/TimerEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/TextEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/ErrorEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/IOErrorEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/SecurityErrorEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/events/FocusEvent.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/filters/BitmapFilter.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/filter/BlurFilter.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/filters/BlurFilter.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/filters/DropShadowFilter.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/geom/ColorTransform.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/geom/Matrix.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/geom/Point.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/geom/Rectangle.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/geom/Transform.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/media/context.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/media/channels.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/media/SoundChannel.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/media/SoundTransform.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/media/Sound.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/media/SoundMixer.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/text/StaticText.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/text/TextFormat.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/text/TextFormatAlign.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/text/TextFieldType.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/text/TextField.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/ui/Keyboard.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/filters/GlowFilter.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/net/URLRequest.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/net/SharedObject.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/net/navigateToURL.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/utils/Timer.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/flash/utils/utils.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/index.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/audio.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/ButtonInstance.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/classes/__internal/character/filter.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/character/frame.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/math/color.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/math/matrix.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/math/rect.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/RenderObject.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/SceneNode.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/filter/DropShadowFilter.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/filter/programs.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/programs/blur.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/programs/shadow.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/Buffer.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/Uniform.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/Program.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/Texture.ts","webpack://@exit-path/game/./node_modules/@kiootic/swf-lib/src/internal/render2/gl/VertexArray.ts","webpack://@exit-path/game/./node_modules/gl-matrix/esm/common.js","webpack://@exit-path/game/./node_modules/gl-matrix/esm/mat2d.js","webpack://@exit-path/game/./node_modules/gl-matrix/esm/vec2.js","webpack://@exit-path/game/./node_modules/gl-matrix/esm/vec4.js","webpack://@exit-path/game/./node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ImageInstance","id","image","SoundInstance","audio","GradientMode","FillStyleKind","makeShapeRenderObject","contour","lib","vertices","Float32Array","map","v","indices","Uint16Array","minX","Infinity","minY","maxX","maxY","i","length","x","y","Math","min","max","bounds","rect","texture","color","uvMatrix","mat2d","fill","kind","SolidColor","LinearGradient","RadicalGradient","gradient","mode","points","ratio","join","gradientCache","get","canvas","document","createElement","width","height","ctx","getContext","lg","createLinearGradient","a","r","g","b","addColorStop","fillStyle","fillRect","makeGradientTexture","set","matrix","convertMatrix","ClippedBitmap","resolveImage","characterId","colors","Uint32Array","RenderObject","mat","offset","ShapeInstance","def","this","renderObjects","contours","c","container","__node","setRenderObjects","MorphShapeInstance","frames","Map","shape","frame","__ratio","console","warn","SpriteInstance","sprite","library","numFrames","prevFrameNum","thisFrameNum","effectiveActions","soundActions","setActions","frameNum","find","f","action","actions","push","ea","depth","child","__children","__depth","values","__soundContext","FontInstance","font","charMap","glyphs","glyph","renderObject","transform","char","layout","ascent","descent","leading","advances","StaticTextInstance","text","instances","resolveFont","fontId","index","size","object","staticText","EditTextInstance","fontHeight","leftMargin","rightMargin","indent","layoutBounds","textField","wordWrap","isWordWrap","multiline","isMultiline","type","isReadonly","TextFieldType","selectable","noSelect","__container","align","defaultTextFormat","TextFormatAlign","textColor","fontID","name","isHTML","htmlText","initialText","defaultFileSize","async","fetchData","url","progress","resp","fetch","Number","headers","reader","body","getReader","chunks","received","result","read","done","Uint8Array","chunk","loadManifest","manifest","progresses","keys","assets","reportProgress","loaded","allLoaded","allSize","l","s","dataURL","data","toString","bundle","JSON","parse","TextDecoder","decode","AssetLibrary","properties","Promise","all","Array","from","entries","images","charId","img","resolve","reject","report","Image","onload","onerror","e","onprogress","lengthComputable","total","src","sounds","buf","buffer","shapes","morphShape","morphShapes","instance","sprites","fonts","FontRegistry","staticTexts","editText","editTexts","button","buttons","ButtonInstance","className","linkages","classFn","ClassRegistry","Error","linkedClasses","linkCharacters","link","characters","defaultClassFactory","assign","__character","Sound","Shape","MorphShape","MovieClip","Sprite","StaticText","TextField","SimpleButton","classes","root","addPackage","pack","entryName","isItalic","isBold","classMethods","AVMObject","proto","Reflect","getPrototypeOf","methods","protoMethods","prototype","ownKeys","has","desc","getOwnPropertyDescriptor","delete","fn","bind","__preInit","Runtime","args","log","iface","__IMPL","XML","Class","Function","TextAlign","FrameActionKind","htmlParser","DOMParser","Container","node","segments","htmlRoot","parseFromString","documentElement","__text","__htmlText","textContent","parseHTML","innerHTML","walker","ownerDocument","createTreeWalker","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","currentSegment","format","__clone","segmentStack","beginElement","element","tagName","toLowerCase","bold","attributes","attr","test","parseInt","slice","italic","endElement","pop","nextNode","Text","Element","firstChild","nextSibling","parentNode","filter","wrap","lines","currentLine","resolveGlyph","advance","splitLines","resultBounds","resultObjects","line","lineResult","layoutLine","fontSize","placeholderGlyph","boundsX","boundsWidth","spacing","baseline","tmpVec2","charInit","DisplayObject","initChar","super","init","__clipDepth","__parent","__mask","__maskRefs","__filters","__setNode","visible","oldStage","stage","newStage","__displayListDirty","__onAddedToStage","__onRemovedFromStage","__setEventParent","parent","isMask","mask","markRenderDirty","filters","__filter","isEffective","cacheAsBitmap","transformLocal","markLayoutDirty","atan2","PI","delta","rotation","ensureLayout","abs","boundsLocal","scaleX","sign","scaleY","__globalToLocal","__mousePosition","out","pt","ensure","transformWorldInvert","point","local","__value","shapeFlag","hitTest","boundsWorld","dispatchEvent","DisplayObjectContainer","removeChild","setParent","children","splice","indexOf","beginIndex","endIndex","removedChildren","includes","__onRender","Graphics","__x","__y","__lineThickness","__lineColor","__bounds","__renderObjects","thickness","NaN","alpha","isNaN","floor","InteractiveObject","tabEnabled","tabIndex","__isPointerCursor","___ratio","constructor","applyTo","__lastFrame","__constructed","__frameScripts","__scriptFrame","currentFrame","isPlaying","__initFrame","newFrame","totalFrames","__constructionQueue","__runFrameScript","frameScript","frameId","frameNumber","label","__resolveFrame","__constructFrame","graphics","buttonMode","frameScriptQueue","enqueueFrameScript","script","runFrame","isRoot","__ensureDisplayList","o","__displayList","queue","scripts","Canvas","style","setProperty","window","devicePixelRatio","appendChild","cursor","clientX","clientY","getBoundingClientRect","left","top","colorMulIdentity","vec4","colorAddIdentity","RenderContext","viewport","renders","transformStack","allTransforms","view","colorMul","colorAdd","renderMask","useMask","renderBounds","render","paddings","opts","nodeTransform","baseViewMat","then","cache","dupTransform","viewMatrix","scale","vec2","translate","popTransform","Signal","listeners","handler","disabled","h","GLState","attrs","contextLost","resetRender","maxTextures","textureLimit","maxSamples","sampleLimit","clearColor","bindings","textureUnits","activeTexture","vertexArray","program","capacity","blendEquation","blendFuncs","gl","addEventListener","preventDefault","emit","reset","getParameter","MAX_TEXTURE_IMAGE_UNITS","MAX_SAMPLES","clear","unit","TEXTURE0","bindTexture","TEXTURE_2D","textures","tex","target","bindBuffer","va","bindVertexArray","renderbuffer","bindRenderbuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","undefined","useProgram","red","green","blue","cap","enable","disable","modeRGB","modeAlpha","blendEquationSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","blendFuncSeparate","Renderbuffer","state","onContextLost","unsubscribe","onResetRender","glFormat","DEPTH_COMPONENT16","RGBA8","RGB8","rb","createRenderbuffer","RENDERBUFFER","renderbufferStorageMultisample","renderbufferStorage","subscribe","deleteRenderbuffer","Framebuffer","colorAttachment","fb","createFramebuffer","Texture","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","deleteFramebuffer","RenderPool","texturePool","renderbufferPool","items","insertAt","Date","item","threshold","toBeDeleted","Atlas","rowHeight","CachedRender","pool","returned","returnTexture","indexLimit","atlasSize","tmpRect","renderTextureSize","n","ceil","Renderer","textureMap","renderPool","textureReturnBox","renderbufferReturnBox","indexData","attributeData","ArrayBuffer","vertexLimit","Buffer","attrFloat","attrUint","renderVertexArray","VertexArray","components","stride","normalized","integer","backgroundColor","glState","premultipliedAlpha","antialias","renderProgram","Program","_","Int32Array","defaultFramebuffer","renderNode","setClearColor","COLOR_BUFFER_BIT","isContextLost","blitFramebuffer","NEAREST","logicalWidth","logicalHeight","clearFb","projectionMat","returnRenderbuffer","cleanLRU","caches","classifyRenders","resolved","renderCaches","renderTextures","renderFilters","atlas","atlasContext","atlasItems","flush","texItem","takeTexture","rbItem","takeRenderbuffer","renderView","pushTransform","atlasBounds","add","renderContext","cacheTexture","tmpFramebuffer","filterInputs","apply","outBounds","filterGroups","group","groupFilter","input","inBounds","objects","setViewport","returnRbs","returnTexs","masks","token","maskRenders","maskTextures","maskGroups","overlapped","nextID","maskTex","maskID","maskFb","doRenderObjects","idRenders","maskToken","BLEND","setBlendEquation","FUNC_ADD","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","projA","projB","projC","projD","projTX","projTY","numVertex","numIndex","update","boundUnits","bindTextures","uniform","drawElements","TRIANGLES","UNSIGNED_SHORT","objectNumVertex","objectNumIndex","loadTexture","textureIndex","maskTextureIndex","fillMode","maskMode","roundVertex","base","viewA","viewB","viewC","viewD","viewTX","viewTY","uvA","uvB","uvC","uvD","uvTX","uvTY","colorMulR","colorMulG","colorMulB","colorMulA","colorAddR","colorAddG","colorAddB","colorAddA","vx","vy","samples","round","Ticker","fps","onFrame","onRender","channel","MessageChannel","lastTimestamp","needRender","_onFrame","error","_onRender","timestamp","last","targetMS","port2","postMessage","animationHandle","requestAnimationFrame","port1","onmessage","end","cancelAnimationFrame","Stage","__mouseOn","__mouseTrackTarget","focus","__quality","__onFrame","__withContext","__doRender","__renderer","renderFrame","blitFrame","sourceEvent","__canvas","resolveCoords","__hitTestObject","dispatchMouseEvent","event","MouseEvent","buttonDown","localX","localY","stageX","stageY","keyCode","Keyboard","code","KeyboardEvent","Event","__ticker","begin","bytesTotal","bytesLoaded","location","href","resetRenderState","p","__current","hitSelf","hit","j","__state","B","trackAsMenu","useHandCursor","newState","isMouseDown","hitTestPoint","oldState","buttonState","instantiateState","stateTransition","__states","upState","overState","downState","BitmapData","transparent","fillColor","__root","SceneNode","__needRender","__needPixel","__pixels","__target","Rectangle","source","colorTransform","blendMode","sourceNode","clone","colorTransformLocalMul","__mul","colorTransformLocalAdd","__add","trx","__render","__rect","addPatch","patch","invertY","pixels","readPixels","RGBA","UNSIGNED_BYTE","pixel","sourceBitmapData","sourceRect","destPoint","dst","srcX","srcY","dstX","dstY","renderer","onRemoveFromStage","Bitmap","bitmapData","texWidth","texHeight","Loader","bubbles","cancelable","fields","field","ENTER_FRAME","ADDED_TO_STAGE","REMOVED_FROM_STAGE","SOUND_COMPLETE","DEACTIVATE","forBroadcast","Symbol","broadcastEvents","EventDispatcher","isCapturing","listener","useCapture","priority","useWeakReference","__broadcastDispatcher","oldListeners","newListeners","sort","removeEventListener","currentTarget","path","current","KEY_DOWN","KEY_UP","CLICK","MOUSE_DOWN","MOUSE_MOVE","MOUSE_OUT","MOUSE_OVER","MOUSE_UP","TimerEvent","TextEvent","ErrorEvent","IOErrorEvent","IO_ERROR","SecurityErrorEvent","SECURITY_ERROR","FocusEvent","BitmapFilter","outProjection","inTexScale","outTexScale","blurX","blurY","texA","texB","batchInput","radius","passes","blurProgram","numRect","front","back","passFront","passBack","texUnit","tmp","deltaX","deltaY","attrI","vertex","inTexCoords","outTexCoords","inBoundsMin","inBoundsMax","outBoundsMin","outBoundsMax","BlurFilter","quality","DropShadowFilter","strength","angle","distance","knockout","hideObject","inner","ColorTransform","redMul","greenMul","blueMul","alphaMul","redAdd","greenAdd","blueAdd","alphaAdd","Matrix","d","tx","ty","dx","dy","sx","sy","u","sin","cos","Point","__empty","Transform","__matrix","__colorTransform","SoundContext","soundChannels","info","syncNoMultiple","syncStop","stop","sound","instantiateCharacter","playTime","loops","inPoint","sampleRate","loopCount","play","channels","Set","SoundChannel","soundTransform","startTime","isStopped","__audioNode","__volumeNode","connect","__soundTransform","__source","__updateSoundTransform","currentTime","__beginTime","__duration","duration","loop","loopStart","start","onended","disconnect","gain","setValueAtTime","volume","SoundTransform","__volume","SoundMixer","TextFormat","DYNAMIC","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","A","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","SEMICOLON","EQUAL","COMMA","MINUS","PERIOD","SLASH","BACKQUOTE","LEFTBRACKET","BACKSLASH","RIGHTBRACKET","QUOTE","ALTERNATE","BACKSPACE","CAPS_LOCK","COMMAND","CONTROL","DELETE","DOWN","END","ENTER","ESCAPE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","HOME","INSERT","LEFT","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","PAGE_DOWN","PAGE_UP","RIGHT","SHIFT","SPACE","TAB","UP","RED","GREEN","YELLOW","BLUE","CHANNEL_UP","CHANNEL_DOWN","RECORD","PLAY","PAUSE","STOP","FAST_FORWARD","REWIND","SKIP_FORWARD","SKIP_BACKWARD","NEXT","PREVIOUS","LIVE","LAST","MENU","INFO","GUIDE","EXIT","BACK","AUDIO","SUBTITLE","DVR","VOD","INPUT","SETUP","HELP","MASTER_SHELL","SEARCH","codeMap","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","Semicolon","Equal","Comma","Minus","Period","Slash","Backquote","BracketLeft","Backslash","BracketRight","Quote","AltLeft","AltRight","Backspace","CapsLock","ControlLeft","ControlRight","Delete","ArrowDown","End","Enter","Escape","Home","Insert","ArrowLeft","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadMultiply","NumpadSubtract","PageDown","PageUp","ArrowRight","ShiftLeft","ShiftRight","Space","Tab","ArrowUp","GlowFilter","URLRequest","SharedObject","localStorage","stringify","navigateToURL","request","open","Timer","delay","repeatCount","getTimer","getDefinitionByName","Audio","AudioContext","globalVolumeNode","createGain","destination","ButtonState","Up","Over","Down","HitTest","stateContainer","inState","record","up","over","down","moveCharacter","version","hitTestState","to","overUpToIdle","idleToOverUp","overUpToOverDown","soundInfo","FilterID","executeActionPlaceObject","character","findIndex","oldCharacter","removeChildAt","setupCharacter","addChildAt","executeActionRemoveObject","executeActionStartSound","syncSound","clipDepth","Blur","DropShadow","updateFrameMasks","clips","clip","preMultiplyAlpha","decomposeColorVec","multiplyColorTransform","outMul","outAdd","parentMul","parentAdd","childMul","childAdd","projection","epsilon","create","of","fromValues","copy","equals","intersects","contains","factor","t","vec","ax","ay","bx","by","norm","sqrt","normal","exact","numTriangles","cx","cy","d1","d2","d3","hasPositive","subInput","doMerge","vertexI","indexI","outV","subarray","inV","Flags","roundTwips","tmpRect1","tmpRect2","tmpMat2d1","tmpMat2d2","flags","DirtyAll","boundsIntrinsic","cachedRender","transformRender","transformWorld","DirtyRender","dirtyTransform","DirtyBounds","DirtyChildTransform","nodes","DirtyTransform","updated","renderDirty","dirtyParent","dirtyNode","needChildrenBounds","IsRoot","intrinsicBounds","renderRecursive","doRender","return","doRenderMask","doRenderFilter","viewMat","onRenderTexture","nextFilter","shift","renderFilter","renderCache","renderTexture","doRenderContent","worldPt","some","nodeMap","clonedChild","texUnits","programBlurCache","programBlur","blurRadius","kernelWidth","prog","unshift","toFixed","blurFragmentShader","programShadow","maxRect","attrData","binding","usage","createBuffer","bufferData","bufferSubData","toTypedArray","cls","array","isArray","arrayEquals","oldArray","newArray","Uniform","typeDef","FLOAT","setter","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","newValue","vertexShader","fragmentShader","uniforms","createShader","VERTEX_SHADER","shaderSource","trim","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","createTexture","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","HTMLElement","texImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","deleteTexture","WHITE","indexBuffer","createVertexArray","glType","vertexAttribIPointer","vertexAttribPointer","enableVertexAttribArray","EPSILON","ARRAY_TYPE","random","hypot","arguments","identity","invert","aa","ab","ac","ad","atx","aty","det","multiply","a0","a1","a2","a3","a4","a5","b0","b1","b2","b3","b4","b5","rotate","rad","v0","v1","fromTranslation","exactEquals","transformMat2d","m","p0","p1","sinC","cosC","mul","z","w","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","reverse","skipTempReset","prev","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode"],"mappings":"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","file":"550.787b1f2c.js","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","module.exports = require(\"regenerator-runtime\");\n","import { CharacterInstance } from \"./CharacterInstance\";\n\nexport class ImageInstance implements CharacterInstance {\n  constructor(readonly id: number, readonly image: HTMLImageElement) {}\n}\n","import { CharacterInstance } from \"./CharacterInstance\";\n\nexport class SoundInstance implements CharacterInstance {\n  constructor(readonly id: number, readonly audio: AudioBuffer) {}\n}\n","import { Matrix } from \"./primitives\";\n\nexport enum GradientMode {\n  Pad = 0,\n}\n\nexport interface Gradient {\n  mode: GradientMode;\n  points: [number, number][];\n}\n\nexport enum FillStyleKind {\n  SolidColor = 0,\n  LinearGradient = 1,\n  RadicalGradient = 2,\n  ClippedBitmap = 3,\n}\n\nexport type FillStyle =\n  | FillStyleSolidColor\n  | FillStyleGradient\n  | FillStyleBitmap;\n\nexport interface FillStyleSolidColor {\n  kind: FillStyleKind.SolidColor;\n  color: number;\n}\n\nexport interface FillStyleGradient {\n  kind: FillStyleKind.LinearGradient | FillStyleKind.RadicalGradient;\n  matrix: Matrix;\n  gradient: Gradient;\n}\n\nexport interface FillStyleBitmap {\n  kind: FillStyleKind.ClippedBitmap;\n  matrix: Matrix;\n  characterId: number;\n}\n","import { mat2d } from \"gl-matrix\";\nimport { RenderObject } from \"../render2/RenderObject\";\nimport type { AssetLibrary } from \"../../classes/__internal/AssetLibrary\";\nimport { ShapeContour } from \"../../classes/__internal/character/Shape\";\nimport { FillStyleKind } from \"../../classes/__internal/character/styles\";\nimport { makeGradientTexture, gradientKey } from \"./gradient\";\nimport { rect } from \"../math/rect\";\nimport { preMultiplyAlpha } from \"../math/color\";\n\nexport function makeShapeRenderObject(\n  contour: ShapeContour,\n  lib: AssetLibrary\n): RenderObject {\n  const vertices = new Float32Array(contour.vertices).map((v) => v / 20);\n  const indices = new Uint16Array(contour.indices);\n\n  let minX = Infinity,\n    minY = Infinity,\n    maxX = -Infinity,\n    maxY = -Infinity;\n  for (let i = 0; i < contour.vertices.length; i += 2) {\n    const x = vertices[i + 0];\n    const y = vertices[i + 1];\n\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n  const bounds = rect.fromValues(minX, minY, maxX - minX, maxY - minY);\n\n  let texture = null;\n  let color: number = 0xffffffff;\n  const uvMatrix = mat2d.identity(mat2d.create());\n  switch (contour.fill.kind) {\n    case FillStyleKind.SolidColor:\n      color = preMultiplyAlpha(contour.fill.color);\n      break;\n\n    case FillStyleKind.LinearGradient:\n    case FillStyleKind.RadicalGradient:\n      const key = gradientKey(contour.fill.gradient);\n      texture = lib.gradientCache.get(key);\n      if (!texture) {\n        texture = makeGradientTexture(contour.fill.gradient);\n        lib.gradientCache.set(key, texture);\n      }\n\n      mat2d.set(uvMatrix, ...contour.fill.matrix);\n      convertMatrix(uvMatrix, 32768, 32768, 0.5);\n      break;\n\n    case FillStyleKind.ClippedBitmap:\n      texture = lib.resolveImage(contour.fill.characterId);\n\n      mat2d.set(uvMatrix, ...contour.fill.matrix);\n      convertMatrix(uvMatrix, texture.width, texture.height, 0);\n      break;\n  }\n\n  const colors = new Uint32Array(vertices.length / 2);\n  colors.fill(color);\n\n  return new RenderObject(\n    \"shape\",\n    vertices,\n    colors,\n    indices,\n    uvMatrix,\n    texture,\n    contour.fill.kind,\n    bounds\n  );\n}\n\n// https://github.com/ruffle-rs/ruffle/blob/09ca11f788ef5c5efa45a40d96e3cbe5be9e940b/render/common_tess/src/lib.rs#L344\nfunction convertMatrix(\n  mat: mat2d,\n  width: number,\n  height: number,\n  offset: number\n) {\n  mat2d.invert(mat, mat);\n  mat2d.scale(mat, mat, [20 / width, 20 / height]);\n  mat[4] = mat[4] / width + offset;\n  mat[5] = mat[5] / height + offset;\n}\n","import { Gradient } from \"../../classes/__internal/character/styles\";\n\nexport function gradientKey(gradient: Gradient) {\n  return `${gradient.mode};${gradient.points\n    .map(([ratio, color]) => `${ratio}:${color}`)\n    .join(\";\")}`;\n}\n\nexport function makeGradientTexture(gradient: Gradient): HTMLCanvasElement {\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = 256;\n  canvas.height = 256;\n\n  const ctx = canvas.getContext(\"2d\")!;\n\n  const lg = ctx.createLinearGradient(0, 0, canvas.width, 0);\n  for (const [ratio, color] of gradient.points) {\n    const a = (color >>> 24) & 0xff;\n    const r = (color >>> 16) & 0xff;\n    const g = (color >>> 8) & 0xff;\n    const b = (color >>> 0) & 0xff;\n    lg.addColorStop(ratio / 255, `rgba(${r}, ${g}, ${b}, ${a / 255})`);\n  }\n\n  ctx.fillStyle = lg;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  return canvas;\n}\n","import { Shape } from \"../../classes/flash/display/Shape\";\nimport type { AssetLibrary } from \"../../classes/__internal/AssetLibrary\";\nimport { ShapeCharacter } from \"../../classes/__internal/character/Shape\";\nimport { CharacterInstance } from \"./CharacterInstance\";\nimport { makeShapeRenderObject } from \"./shapes\";\nimport { RenderObject } from \"../render2/RenderObject\";\nimport { rect } from \"../math/rect\";\n\nexport class ShapeInstance implements CharacterInstance {\n  readonly renderObjects: RenderObject[];\n  readonly bounds: rect;\n\n  constructor(readonly id: number, def: ShapeCharacter, lib: AssetLibrary) {\n    this.renderObjects = def.contours.map((c) => makeShapeRenderObject(c, lib));\n    this.bounds = rect.create();\n    for (const def of this.renderObjects) {\n      rect.union(this.bounds, this.bounds, def.bounds);\n    }\n  }\n\n  applyTo(container: Shape) {\n    container.__node.setRenderObjects(this.renderObjects, this.bounds);\n  }\n}\n","import { MorphShape } from \"../../classes/flash/display/MorphShape\";\nimport type { AssetLibrary } from \"../../classes/__internal/AssetLibrary\";\nimport { MorphShapeCharacter } from \"../../classes/__internal/character/MorphShape\";\nimport { CharacterInstance } from \"./CharacterInstance\";\nimport { makeShapeRenderObject } from \"./shapes\";\nimport { RenderObject } from \"../render2/RenderObject\";\nimport { rect } from \"../math/rect\";\n\ninterface MorphShapeFrame {\n  renderObjects: RenderObject[];\n  bounds: rect;\n}\n\nexport class MorphShapeInstance implements CharacterInstance {\n  readonly frames = new Map<number, MorphShapeFrame>();\n\n  constructor(\n    readonly id: number,\n    def: MorphShapeCharacter,\n    lib: AssetLibrary\n  ) {\n    for (const [ratio, shape] of def.frames) {\n      const renderObjects = shape.contours.map((c) =>\n        makeShapeRenderObject(c, lib)\n      );\n      const bounds = rect.create();\n      for (const def of renderObjects) {\n        rect.union(bounds, bounds, def.bounds);\n      }\n      this.frames.set(ratio, { renderObjects, bounds });\n    }\n  }\n\n  applyTo(container: MorphShape) {\n    const frame = this.frames.get(container.__ratio);\n    if (!frame) {\n      console.warn(\n        `no ratio frame #${container.__ratio} for morph shape #${this.id}`\n      );\n      return;\n    }\n\n    container.__node.setRenderObjects(frame.renderObjects, frame.bounds);\n  }\n}\n","import { Sprite } from \"../../classes/flash/display/Sprite\";\nimport {\n  SpriteCharacter,\n  SpriteFrame,\n  FrameActionKind,\n  FrameAction,\n  FrameActionStartSound,\n} from \"../../classes/__internal/character/Sprite\";\nimport type { AssetLibrary } from \"../../classes/__internal\";\nimport { CharacterInstance } from \"./CharacterInstance\";\nimport {\n  executeActionPlaceObject,\n  executeActionRemoveObject,\n  updateFrameMasks,\n  executeActionStartSound,\n} from \"./frame\";\n\nexport class SpriteInstance implements CharacterInstance {\n  readonly numFrames: number;\n  readonly frames: SpriteFrame[];\n\n  constructor(\n    readonly id: number,\n    sprite: SpriteCharacter,\n    readonly library: AssetLibrary\n  ) {\n    this.numFrames = sprite.numFrames;\n    this.frames = sprite.frames;\n  }\n\n  applyTo(sprite: Sprite, prevFrameNum: number, thisFrameNum: number) {\n    const effectiveActions = new Map<number, FrameAction>();\n    const soundActions: FrameActionStartSound[] = [];\n    const setActions = (frameNum: number) => {\n      const frame = this.frames.find((f) => f.frame === frameNum);\n      if (!frame) {\n        return;\n      }\n\n      soundActions.length = 0;\n      for (const action of frame.actions) {\n        if (action.kind === FrameActionKind.StartSound) {\n          soundActions.push(action);\n          continue;\n        }\n\n        const ea = effectiveActions.get(action.depth);\n        if (!ea || ea.kind !== action.kind) {\n          effectiveActions.set(action.depth, action);\n        } else if (ea.kind === FrameActionKind.PlaceObject) {\n          effectiveActions.set(action.depth, {\n            ...ea,\n            ...action,\n          });\n        }\n      }\n    };\n\n    if (thisFrameNum >= prevFrameNum) {\n      for (let i = prevFrameNum; i <= thisFrameNum; i++) {\n        setActions(i);\n      }\n    } else {\n      // Reset timeline on frame 1\n      for (const child of sprite.__children) {\n        if (child.__depth >= 0) {\n          effectiveActions.set(child.__depth, {\n            kind: FrameActionKind.RemoveObject,\n            depth: child.__depth,\n          });\n        }\n      }\n      for (let i = 1; i <= thisFrameNum; i++) {\n        setActions(i);\n      }\n    }\n\n    for (const action of effectiveActions.values()) {\n      switch (action.kind) {\n        case FrameActionKind.PlaceObject:\n          executeActionPlaceObject(this.library, sprite, action);\n          break;\n        case FrameActionKind.RemoveObject:\n          executeActionRemoveObject(sprite, action);\n          break;\n      }\n    }\n\n    for (const action of soundActions) {\n      executeActionStartSound(this.library, sprite.__soundContext, action);\n    }\n\n    updateFrameMasks(sprite);\n  }\n}\n","import { mat2d } from \"gl-matrix\";\nimport { makeShapeRenderObject } from \"./shapes\";\nimport { CharacterInstance } from \"./CharacterInstance\";\nimport { FontCharacter, FontLayout } from \"../../classes/__internal/character\";\nimport type { AssetLibrary } from \"../../classes/__internal\";\nimport { RenderObject } from \"../render2/RenderObject\";\n\nexport interface FontGlyph {\n  renderObjects: RenderObject[];\n}\n\nexport class FontInstance implements CharacterInstance {\n  readonly glyphs: FontGlyph[];\n  readonly charMap = new Map<string, number>();\n  readonly layout?: FontLayout;\n\n  constructor(\n    readonly id: number,\n    readonly font: FontCharacter,\n    lib: AssetLibrary\n  ) {\n    this.glyphs = font.glyphs.map((glyph) => {\n      const renderObjects = glyph.shape.contours.map((c) =>\n        makeShapeRenderObject(c, lib)\n      );\n      return {\n        renderObjects: RenderObject.merge(\n          \"text\",\n          renderObjects.map((renderObject) => ({\n            renderObject,\n            transform: mat2d.identity(mat2d.create()),\n          }))\n        ),\n      };\n    });\n    for (let i = 0; i < font.glyphs.length; i++) {\n      const char = font.glyphs[i].char;\n      if (char) {\n        this.charMap.set(char, i);\n      }\n    }\n\n    this.layout = font.layout && {\n      ascent: font.layout.ascent / 20 / 1024,\n      descent: font.layout.descent / 20 / 1024,\n      leading: font.layout.ascent / 20 / 1024,\n      advances: font.layout.advances.map((v) => v / 20 / 1024),\n    };\n  }\n}\n","import { mat2d, vec2, vec4 } from \"gl-matrix\";\nimport { StaticText } from \"../../classes/flash/text/StaticText\";\nimport { CharacterInstance } from \"./CharacterInstance\";\nimport { StaticTextCharacter } from \"../../classes/__internal/character\";\nimport { AssetLibrary } from \"../../classes/__internal\";\nimport { RenderObject } from \"../render2/RenderObject\";\nimport { rect } from \"../math/rect\";\nimport { preMultiplyAlpha } from \"../math/color\";\n\nexport class StaticTextInstance implements CharacterInstance {\n  readonly renderObjects: RenderObject[] = [];\n  readonly bounds: rect;\n\n  constructor(\n    readonly id: number,\n    text: StaticTextCharacter,\n    lib: AssetLibrary\n  ) {\n    this.bounds = rect.scale(\n      rect.create(),\n      rect.fromValues(...text.bounds),\n      1 / 20\n    );\n\n    const matrix = mat2d.fromValues(...text.matrix);\n    matrix[4] /= 20;\n    matrix[5] /= 20;\n\n    interface GlyphInstance {\n      renderObject: RenderObject;\n      color: number;\n      transform: mat2d;\n    }\n\n    const instances: GlyphInstance[] = [];\n    for (const g of text.glyphs) {\n      const font = lib.resolveFont(g.fontId);\n      const glyph = font.glyphs[g.index];\n\n      const transform = mat2d.create();\n      mat2d.translate(transform, matrix, [g.x / 20, g.y / 20]);\n      mat2d.scale(transform, transform, [\n        g.size / 1024 / 20,\n        g.size / 1024 / 20,\n      ]);\n\n      const color = preMultiplyAlpha(g.color);\n\n      for (const object of glyph.renderObjects) {\n        instances.push({\n          renderObject: object,\n          color,\n          transform,\n        });\n      }\n    }\n\n    this.renderObjects = RenderObject.merge(\"text\", instances);\n  }\n\n  applyTo(staticText: StaticText) {\n    staticText.__node.setRenderObjects(this.renderObjects, this.bounds);\n  }\n}\n","import { EditTextCharacter } from \"../../classes/__internal/character\";\nimport { TextField } from \"../../classes/flash/text/TextField\";\nimport { rect } from \"../math/rect\";\nimport { CharacterInstance } from \"./CharacterInstance\";\nimport { TextFieldType, TextFormatAlign } from \"../../classes/flash/text\";\nimport { AssetLibrary } from \"../../classes/__internal\";\n\nexport class EditTextInstance implements CharacterInstance {\n  readonly def: EditTextCharacter;\n  readonly layoutBounds: rect;\n\n  constructor(\n    readonly id: number,\n    text: EditTextCharacter,\n    readonly lib: AssetLibrary\n  ) {\n    this.def = {\n      ...text,\n      fontHeight: text.fontHeight && text.fontHeight / 20,\n      leftMargin: text.leftMargin && text.leftMargin / 20,\n      rightMargin: text.rightMargin && text.rightMargin / 20,\n      indent: text.indent && text.indent / 20,\n      leading: text.leading && text.leading / 20,\n    };\n    this.layoutBounds = rect.scale(\n      rect.create(),\n      rect.fromValues(...text.bounds),\n      1 / 20\n    );\n  }\n\n  applyTo(textField: TextField) {\n    textField.wordWrap = this.def.isWordWrap;\n    textField.multiline = this.def.isMultiline;\n    textField.type = this.def.isReadonly\n      ? TextFieldType.DYNAMIC\n      : TextFieldType.INPUT;\n    textField.selectable = !this.def.noSelect;\n    rect.copy(textField.__container.layoutBounds, this.layoutBounds);\n\n    switch (this.def.align) {\n      case 0:\n        textField.defaultTextFormat.align = TextFormatAlign.LEFT;\n        break;\n      case 1:\n        textField.defaultTextFormat.align = TextFormatAlign.RIGHT;\n        break;\n      case 2:\n        textField.defaultTextFormat.align = TextFormatAlign.CENTER;\n        break;\n      case 3:\n        textField.defaultTextFormat.align = TextFormatAlign.JUSTIFY;\n        break;\n    }\n    if (this.def.textColor != null) {\n      textField.defaultTextFormat.color = this.def.textColor;\n    }\n    if (this.def.fontID != null) {\n      textField.defaultTextFormat.font = this.lib.resolveFont(\n        this.def.fontID\n      ).font.name;\n    }\n    if (this.def.fontHeight != null) {\n      textField.defaultTextFormat.size = this.def.fontHeight;\n    }\n    if (this.def.leading != null) {\n      textField.defaultTextFormat.leading = this.def.leading;\n    }\n\n    if (this.def.isHTML) {\n      textField.htmlText = this.def.initialText ?? \"\";\n    } else {\n      textField.text = this.def.initialText ?? \"\";\n    }\n  }\n}\n","import { Shape } from \"../flash/display/Shape\";\nimport { MorphShape } from \"../flash/display/MorphShape\";\nimport { Sprite } from \"../flash/display/Sprite\";\nimport { MovieClip } from \"../flash/display/MovieClip\";\nimport { StaticText } from \"../flash/text/StaticText\";\nimport { TextField } from \"../flash/text\";\nimport { Sound } from \"../flash/media\";\nimport { ImageInstance } from \"../../internal/character/ImageInstance\";\nimport { SoundInstance } from \"../../internal/character/SoundInstance\";\nimport { ShapeInstance } from \"../../internal/character/ShapeInstance\";\nimport { MorphShapeInstance } from \"../../internal/character/MorphShapeInstance\";\nimport { SpriteInstance } from \"../../internal/character/SpriteInstance\";\nimport { FontInstance } from \"../../internal/character/FontInstance\";\nimport { StaticTextInstance } from \"../../internal/character/StaticTextInstance\";\nimport { EditTextInstance } from \"../../internal/character/EditTextInstance\";\nimport { ButtonInstance } from \"../../internal/character/ButtonInstance\";\nimport { AssetBundle } from \"./AssetBundle\";\nimport { FontRegistry } from \"./FontRegistry\";\nimport { SimpleButton } from \"../flash/display\";\nimport { ClassRegistry } from \"./ClassRegistry\";\nimport { Audio } from \"../../internal/audio\";\nimport { Manifest } from \"./Manifest\";\nimport { Properties } from \"./Properties\";\n\nconst defaultFileSize = 50000;\n\nasync function fetchData(\n  url: string,\n  progress: (loaded: number, size: number) => void\n): Promise<Uint8Array> {\n  progress(0, defaultFileSize);\n\n  const resp = await fetch(url);\n  const size = Number(resp.headers.get(\"Content-Length\"));\n  const reader = resp.body!.getReader();\n\n  const chunks: Uint8Array[] = [];\n  let received = 0;\n  while (true) {\n    const result = await reader.read();\n\n    if (result.done) {\n      break;\n    }\n\n    chunks.push(result.value);\n    received += result.value.length;\n    if (size) {\n      progress(received, size);\n    }\n  }\n\n  const result = new Uint8Array(received);\n  let i = 0;\n  for (const chunk of chunks) {\n    result.set(chunk, i);\n    i += chunk.length;\n  }\n\n  progress(received, received);\n  return result;\n}\n\nexport async function loadManifest(\n  manifest: Manifest,\n  progress?: (value: number) => void\n): Promise<AssetLibrary> {\n  const progresses = new Map<string, [number, number]>();\n  for (const id of Object.keys(manifest.assets)) {\n    progresses.set(id, [0, defaultFileSize]);\n  }\n  const reportProgress = (id: string) => (loaded: number, size: number) => {\n    progresses.set(id, [loaded, size]);\n    let allLoaded = 0;\n    let allSize = 0;\n    for (const [l, s] of progresses.values()) {\n      allLoaded += l;\n      allSize += s;\n    }\n    progress?.(allLoaded / allSize);\n  };\n\n  const dataURL = manifest.assets[manifest.data];\n  const data = await fetchData(\n    dataURL.toString(),\n    reportProgress(manifest.data)\n  );\n  const bundle: AssetBundle = JSON.parse(new TextDecoder().decode(data));\n\n  const library = new AssetLibrary(manifest.properties);\n\n  await Promise.all([\n    ...Array.from(Object.entries(bundle.images)).map(\n      async ([charId, { id }]) => {\n        const img = await new Promise<HTMLImageElement>((resolve, reject) => {\n          const report = reportProgress(id);\n          report(0, defaultFileSize);\n          let loaded = 0;\n\n          const img = new Image();\n          img.onload = () => {\n            report(loaded, loaded);\n            resolve(img);\n          };\n          img.onerror = (e) => reject(e);\n          img.onprogress = (e) => {\n            loaded = e.loaded;\n            if (e.lengthComputable) {\n              report(loaded, e.total);\n            }\n          };\n          img.src = manifest.assets[id].toString();\n        });\n        library.images.set(\n          Number(charId),\n          new ImageInstance(Number(charId), img)\n        );\n      }\n    ),\n    ...Array.from(Object.entries(bundle.sounds)).map(\n      async ([charId, { id }]) => {\n        const data = await fetchData(\n          manifest.assets[id].toString(),\n          reportProgress(id)\n        );\n        const buf = await Audio.decodeAudioData(data.buffer);\n        library.sounds.set(\n          Number(charId),\n          new SoundInstance(Number(charId), buf)\n        );\n      }\n    ),\n  ]);\n\n  for (const [id, shape] of Object.entries(bundle.shapes)) {\n    const charId = Number(id);\n    library.shapes.set(charId, new ShapeInstance(charId, shape, library));\n  }\n\n  for (const [id, morphShape] of Object.entries(bundle.morphShapes)) {\n    const charId = Number(id);\n    const instance = new MorphShapeInstance(charId, morphShape, library);\n    library.morphShapes.set(charId, instance);\n  }\n\n  for (const [id, sprite] of Object.entries(bundle.sprites)) {\n    const charId = Number(id);\n    library.sprites.set(charId, new SpriteInstance(charId, sprite, library));\n  }\n\n  for (const [id, font] of Object.entries(bundle.fonts)) {\n    const charId = Number(id);\n    const instance = new FontInstance(charId, font, library);\n    library.fonts.set(charId, instance);\n    FontRegistry.instance.registerFont(instance);\n  }\n\n  for (const [id, staticText] of Object.entries(bundle.staticTexts)) {\n    const charId = Number(id);\n    const instance = new StaticTextInstance(charId, staticText, library);\n    library.staticTexts.set(charId, instance);\n  }\n\n  for (const [id, editText] of Object.entries(bundle.editTexts)) {\n    const charId = Number(id);\n    const instance = new EditTextInstance(charId, editText, library);\n    library.editTexts.set(charId, instance);\n  }\n\n  for (const [id, button] of Object.entries(bundle.buttons)) {\n    const charId = Number(id);\n    const instance = new ButtonInstance(charId, button, library);\n    library.buttons.set(charId, instance);\n  }\n\n  for (const [id, className] of Object.entries(bundle.linkages)) {\n    const classFn = ClassRegistry.instance.classes.get(className);\n    if (!classFn) {\n      throw new Error(`Linked class ${className} not found`);\n    }\n    const charId = Number(id);\n    library.linkedClasses.set(charId, classFn);\n  }\n\n  library.linkCharacters();\n  return library;\n}\n\nexport class AssetLibrary {\n  readonly images = new Map<number, ImageInstance>();\n  readonly sounds = new Map<number, SoundInstance>();\n  readonly shapes = new Map<number, ShapeInstance>();\n  readonly morphShapes = new Map<number, MorphShapeInstance>();\n  readonly sprites = new Map<number, SpriteInstance>();\n  readonly fonts = new Map<number, FontInstance>();\n  readonly staticTexts = new Map<number, StaticTextInstance>();\n  readonly editTexts = new Map<number, EditTextInstance>();\n  readonly buttons = new Map<number, ButtonInstance>();\n  readonly linkedClasses = new Map<number, Function>();\n\n  readonly gradientCache = new Map<string, HTMLCanvasElement>();\n\n  constructor(readonly properties: Properties) {}\n\n  resolveImage(id: number): HTMLImageElement {\n    const instance = this.images.get(id);\n    if (!instance) {\n      throw new Error(`Image character #${id} not found`);\n    }\n\n    return instance.image;\n  }\n\n  resolveFont(id: number): FontInstance {\n    const instance = this.fonts.get(id);\n    if (!instance) {\n      throw new Error(`Font character #${id} not found`);\n    }\n\n    return instance;\n  }\n\n  linkCharacters() {\n    type Class = new () => object;\n    const link = <T>(\n      characters: Map<number, T>,\n      defaultClassFactory: (char: T) => Class\n    ) => {\n      for (const [id, char] of characters) {\n        let classFn = this.linkedClasses.get(id);\n        if (!classFn) {\n          const className = `Character${id}`;\n          classFn = class extends defaultClassFactory(char) {};\n          Object.defineProperty(classFn, \"name\", { value: className });\n          this.linkedClasses.set(id, classFn);\n        }\n        Object.assign(classFn, { __character: char });\n      }\n    };\n\n    link(this.sounds, () => Sound);\n    link(this.shapes, () => Shape);\n    link(this.morphShapes, () => MorphShape);\n    link(this.sprites, (s) => (s.numFrames > 1 ? MovieClip : Sprite));\n    link(this.staticTexts, () => StaticText);\n    link(this.editTexts, () => TextField);\n    link(this.buttons, () => SimpleButton);\n  }\n\n  instantiateCharacter<T>(id: number): T {\n    const classFn = this.linkedClasses.get(id) as new () => T;\n    if (!classFn) {\n      throw new Error(`Character ${id} not found`);\n    }\n\n    return new classFn();\n  }\n}\n","export class ClassRegistry {\n  static readonly instance = new ClassRegistry();\n\n  readonly classes = new Map<string, Function>();\n\n  private constructor() {}\n\n  addClassRoot(root: object) {\n    const addPackage = (name: string, pack: object) => {\n      for (const [key, value] of Object.entries(pack)) {\n        const entryName = name === \"\" ? key : `${name}.${key}`;\n        if (typeof value === \"function\") {\n          this.classes.set(entryName, value);\n        } else if (typeof value === \"object\") {\n          addPackage(entryName, value);\n        }\n      }\n    };\n    addPackage(\"\", root);\n  }\n}\n","import { FontInstance } from \"../../internal/character/FontInstance\";\n\nexport class FontRegistry {\n  static readonly instance = new FontRegistry();\n\n  readonly fonts = new Map<string, FontInstance[]>();\n\n  private constructor() {}\n\n  registerFont(font: FontInstance) {\n    const instances = this.fonts.get(font.font.name) || [];\n    instances.push(font);\n    this.fonts.set(font.font.name, instances);\n  }\n\n  resolve(\n    name: string,\n    isItalic: boolean,\n    isBold: boolean\n  ): FontInstance | null {\n    const instances = this.fonts.get(name) || [];\n\n    for (const instance of instances) {\n      if (\n        instance.font.isItalic === isItalic &&\n        instance.font.isBold === isBold\n      ) {\n        return instance;\n      }\n    }\n    return null;\n  }\n}\n","const classMethods = new Map<unknown, [string, Function][]>();\n\nexport class AVMObject {\n  constructor() {\n    let proto: any = Reflect.getPrototypeOf(this);\n    let methods = classMethods.get(proto);\n    if (!methods) {\n      const protoMethods = new Map<string, Function>();\n      while (proto && proto !== AVMObject.prototype) {\n        for (const key of Reflect.ownKeys(proto)) {\n          if (protoMethods.has(key as string)) {\n            continue;\n          }\n          const desc = Reflect.getOwnPropertyDescriptor(proto, key);\n          if (desc && typeof desc.value === \"function\") {\n            protoMethods.set(key as string, desc.value);\n          }\n        }\n        proto = Reflect.getPrototypeOf(proto);\n      }\n      protoMethods.delete(\"constructor\");\n      methods = Array.from(protoMethods.entries());\n      classMethods.set(Reflect.getPrototypeOf(this), methods);\n    }\n\n    for (const [name, fn] of methods) {\n      (this as any)[name] = fn.bind(this);\n    }\n\n    this.__preInit();\n  }\n\n  __preInit() {}\n}\n","interface InterfaceClass<T> {\n  readonly __IMPL: symbol;\n  readonly prototype: T;\n}\n\nexport class Runtime {\n  static trace(...args: any[]) {\n    console.log(...args);\n  }\n\n  static uint(value: any): number {\n    return (value | 0) >>> 0;\n  }\n\n  static int(value: any): number {\n    return value | 0;\n  }\n\n  static isInterface<T>(value: any, iface: InterfaceClass<T>): value is T {\n    return iface.__IMPL in value;\n  }\n}\n","export class XML {}\n","export const Class = Function;\nexport type Class = Function;\n","import { Rect } from \"./primitives\";\n\nexport enum TextAlign {\n  Left = 0,\n  Right = 1,\n  Center = 2,\n  Justify = 3,\n}\n\nexport interface EditTextCharacter {\n  bounds: Rect;\n\n  isWordWrap: boolean;\n  isMultiline: boolean;\n  isPassword: boolean;\n  isReadonly: boolean;\n  isAutoSize: boolean;\n  noSelect: boolean;\n  border: boolean;\n  wasStatic: boolean;\n  isHTML: boolean;\n  useOutlines: boolean;\n\n  fontID?: number;\n  fontHeight?: number;\n  textColor?: number;\n  maxLength?: number;\n  align?: TextAlign;\n  leftMargin?: number;\n  rightMargin?: number;\n  indent?: number;\n  leading?: number;\n  variableName?: string;\n  initialText?: string;\n}\n","import { Matrix, ColorTransform } from \"./primitives\";\nimport { Filter } from \"./filter\";\nimport { SoundInfo } from \"./Sound\";\n\nexport interface SpriteCharacter {\n  numFrames: number;\n  frames: SpriteFrame[];\n}\n\nexport interface SpriteFrame {\n  frame: number;\n  label?: string;\n  actions: FrameAction[];\n}\n\nexport type FrameAction =\n  | FrameActionPlaceObject\n  | FrameActionRemoveObject\n  | FrameActionStartSound;\n\nexport enum FrameActionKind {\n  PlaceObject = 0,\n  RemoveObject = 1,\n  StartSound = 2,\n}\n\nexport interface FrameActionPlaceObject {\n  kind: FrameActionKind.PlaceObject;\n  depth: number;\n  version: 1 | 2 | 3;\n  moveCharacter: boolean;\n  characterId?: number;\n\n  matrix?: Matrix;\n  colorTransform?: ColorTransform;\n  ratio?: number;\n  name?: string;\n  clipDepth?: number;\n\n  filters?: Filter[];\n  blendMode?: number;\n  cacheAsBitmap?: boolean;\n  visible?: boolean;\n}\n\nexport interface FrameActionRemoveObject {\n  kind: FrameActionKind.RemoveObject;\n  depth: number;\n}\n\nexport interface FrameActionStartSound {\n  kind: FrameActionKind.StartSound;\n  characterId: number;\n  soundInfo: SoundInfo;\n}\n","import { TextFormat } from \"../../flash/text/TextFormat\";\nimport { TextFormatAlign } from \"../../flash/text\";\nimport { TextSegment } from \"./TextSegment\";\nimport { layout } from \"./layout\";\nimport { rect } from \"../../../internal/math/rect\";\nimport { SceneNode } from \"../../../internal/render2/SceneNode\";\n\nconst htmlParser = new DOMParser();\n\nexport class Container {\n  segments: TextSegment[] = [];\n\n  readonly htmlRoot = htmlParser.parseFromString(\"<root />\", \"text/xml\")\n    .documentElement;\n\n  defaultTextFormat = new TextFormat();\n\n  wordWrap = false;\n\n  multiline = false;\n\n  readonly layoutBounds = rect.create();\n\n  constructor(readonly node: SceneNode) {}\n\n  private __text = \"\";\n\n  get text() {\n    return this.__text;\n  }\n  set text(value) {\n    if (this.__text !== value) {\n      this.htmlRoot.textContent = value;\n      this.parseHTML();\n    }\n  }\n\n  private __htmlText = \"\";\n\n  get htmlText() {\n    return this.__htmlText;\n  }\n  set htmlText(value) {\n    if (this.__htmlText !== value) {\n      try {\n        this.htmlRoot.innerHTML = value;\n      } catch {}\n      this.parseHTML();\n    }\n  }\n\n  parseHTML() {\n    const walker = this.htmlRoot.ownerDocument.createTreeWalker(\n      this.htmlRoot,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT\n    );\n\n    let currentSegment: TextSegment = {\n      format: this.defaultTextFormat.__clone(),\n      text: \"\",\n    };\n    const segmentStack = [currentSegment];\n    const segments: TextSegment[] = [];\n\n    const beginElement = (element: Element) => {\n      const format = currentSegment.format.__clone();\n      let text = \"\";\n      switch (element.tagName.toLowerCase()) {\n        case \"b\":\n          format.bold = true;\n          break;\n        case \"br\":\n          text = \"\\n\";\n          break;\n        case \"font\":\n          for (let i = 0; i < element.attributes.length; i++) {\n            const attr = element.attributes[i];\n            switch (attr.name.toLowerCase()) {\n              case \"color\":\n                if (/^#[0-9a-fA-F]{6}$/.test(attr.value)) {\n                  format.color = parseInt(attr.value.slice(1), 16) + 0xff000000;\n                }\n                break;\n              case \"face\":\n                format.font = attr.value;\n                break;\n              case \"size\":\n                if (/^\\d+$/.test(attr.value)) {\n                  format.size = Number(attr.value);\n                }\n                break;\n            }\n          }\n          break;\n        case \"i\":\n          format.italic = true;\n          break;\n        case \"p\":\n          for (let i = 0; i < element.attributes.length; i++) {\n            const attr = element.attributes[i];\n            switch (attr.name.toLowerCase()) {\n              case \"align\":\n                switch (attr.value) {\n                  case \"left\":\n                    format.align = TextFormatAlign.LEFT;\n                    break;\n                  case \"right\":\n                    format.align = TextFormatAlign.RIGHT;\n                    break;\n                  case \"justify\":\n                    format.align = TextFormatAlign.JUSTIFY;\n                    break;\n                  case \"center\":\n                    format.align = TextFormatAlign.CENTER;\n                    break;\n                }\n                break;\n            }\n            break;\n          }\n          break;\n      }\n\n      currentSegment = { format, text };\n      segmentStack.push(currentSegment);\n      segments.push(currentSegment);\n    };\n\n    const endElement = (element: Element) => {\n      segmentStack.pop();\n      currentSegment = segmentStack[segmentStack.length - 1];\n    };\n\n    const onText = (text: Text) => {\n      currentSegment.text += text.textContent;\n    };\n\n    let node: Node | null = walker.root;\n    while (node) {\n      if (node instanceof Text) {\n        onText(node);\n      } else if (node instanceof Element) {\n        beginElement(node);\n      }\n\n      let nextNode: Node | null;\n      if ((nextNode = walker.firstChild())) {\n        node = nextNode;\n        continue;\n      } else if ((nextNode = walker.nextSibling())) {\n        node = nextNode;\n        continue;\n      }\n\n      while ((nextNode = walker.parentNode())) {\n        if (nextNode instanceof Element) {\n          endElement(nextNode);\n        }\n        if ((nextNode = walker.nextSibling())) {\n          break;\n        }\n      }\n      if (!nextNode && node instanceof Element) {\n        endElement(node);\n      }\n      node = nextNode;\n    }\n\n    this.segments = segments.filter((s) => s.text.length > 0);\n    this.__text = this.htmlRoot.textContent ?? \"\";\n    this.__htmlText = this.htmlRoot.innerHTML;\n    this.layout();\n  }\n\n  layout() {\n    const result = layout(\n      this.segments,\n      this.layoutBounds,\n      this.wordWrap,\n      this.multiline\n    );\n    this.node.setRenderObjects(result.renderObjects, this.layoutBounds);\n  }\n}\n","import { vec2, mat2d } from \"gl-matrix\";\nimport { TextFormat, TextFormatAlign } from \"../../flash/text\";\nimport { RenderObject } from \"../../../internal/render2/RenderObject\";\nimport { preMultiplyAlpha } from \"../../../internal/math/color\";\nimport { rect } from \"../../../internal/math/rect\";\nimport { FontRegistry } from \"../FontRegistry\";\nimport { TextSegment } from \"./TextSegment\";\n\nexport interface LayoutResult {\n  bounds: rect;\n  renderObjects: RenderObject[];\n}\n\ninterface Glyph {\n  renderObjects: RenderObject[];\n  color: number;\n  align: TextFormatAlign;\n  size: number;\n  leading: number;\n  advance: number;\n  ascent: number;\n  descent: number;\n}\n\ninterface Line {\n  glyphs: Glyph[];\n  width: number;\n}\n\nexport function layout(\n  segments: TextSegment[],\n  bounds: rect,\n  wrap: boolean,\n  multiline: boolean\n): LayoutResult {\n  const lines = splitLines(segments, bounds, wrap, multiline);\n\n  const resultBounds = rect.create();\n  const resultObjects: RenderObject[] = [];\n  let y = 0;\n  for (const line of lines) {\n    const lineResult = layoutLine(line, y, bounds);\n    resultObjects.push(...lineResult.renderObjects);\n    rect.union(resultBounds, resultBounds, lineResult.bounds);\n    y += lineResult.bounds[3];\n  }\n\n  return { bounds: resultBounds, renderObjects: resultObjects };\n}\n\nfunction fontSize(format: TextFormat) {\n  // http://www.moock.org/blog/archives/000284.html\n  return Math.min(127, format.size);\n}\n\nfunction placeholderGlyph(format: TextFormat): Glyph {\n  return {\n    renderObjects: [],\n    color: format.color,\n    align: format.align,\n    size: fontSize(format),\n    leading: format.leading,\n    advance: fontSize(format),\n    ascent: fontSize(format),\n    descent: 0,\n  };\n}\n\nfunction resolveGlyph(format: TextFormat, char: string): Glyph {\n  const font = FontRegistry.instance.resolve(\n    format.font,\n    format.italic,\n    format.bold\n  );\n  if (!font) {\n    return placeholderGlyph(format);\n  }\n  const index = font.charMap.get(char);\n  if (index == null) {\n    return placeholderGlyph(format);\n  }\n\n  return {\n    renderObjects: font.glyphs[index].renderObjects,\n    color: format.color,\n    align: format.align,\n    size: fontSize(format),\n    leading: format.leading,\n    advance: (font.layout?.advances[index] ?? 0) * fontSize(format),\n    ascent: font.layout?.ascent ?? 0,\n    descent: font.layout?.descent ?? 0,\n  };\n}\n\nfunction splitLines(\n  segments: TextSegment[],\n  bounds: rect,\n  wrap: boolean,\n  multiline: boolean\n): Line[] {\n  let currentLine: Line = { glyphs: [], width: 0 };\n  const lines = [currentLine];\n\n  for (const { format, text } of segments) {\n    for (const char of text) {\n      if (multiline && char === \"\\n\") {\n        currentLine = { glyphs: [], width: 0 };\n        lines.push(currentLine);\n        continue;\n      }\n\n      const glyph = resolveGlyph(format, char);\n      const advance = glyph.advance;\n      if (wrap && currentLine.width + advance > bounds[2]) {\n        currentLine = { glyphs: [], width: 0 };\n        lines.push(currentLine);\n      }\n      currentLine.glyphs.push(glyph);\n      currentLine.width += advance;\n    }\n  }\n  return lines;\n}\n\nfunction layoutLine(line: Line, y: number, bounds: rect): LayoutResult {\n  if (line.glyphs.length === 0) {\n    return { bounds: rect.create(), renderObjects: [] };\n  }\n\n  const boundsX = bounds[0] + 2;\n  const boundsWidth = bounds[2] - 4;\n\n  const alignment = line.glyphs[0].align;\n  let spacing: number, x: number;\n  switch (alignment) {\n    case TextFormatAlign.RIGHT:\n      spacing = 0;\n      x = boundsX + boundsWidth - line.width;\n      break;\n    case TextFormatAlign.CENTER:\n      spacing = 0;\n      x = boundsX + (boundsWidth - line.width) / 2;\n      break;\n    case TextFormatAlign.JUSTIFY:\n      spacing =\n        line.glyphs.length > 0\n          ? boundsX + (boundsWidth - line.width) / (line.glyphs.length - 1)\n          : 0;\n      x = 0;\n      break;\n    default:\n      spacing = 0;\n      x = boundsX;\n      break;\n  }\n\n  interface GlyphInstance {\n    renderObject: RenderObject;\n    color: number;\n    transform: mat2d;\n  }\n\n  const instances: GlyphInstance[] = [];\n\n  let baseline = 0;\n  let leading = 0;\n  for (const glyph of line.glyphs) {\n    baseline = Math.max(baseline, glyph.ascent * glyph.size);\n  }\n  for (const glyph of line.glyphs) {\n    leading = Math.max(\n      leading,\n      baseline + glyph.descent * glyph.size + glyph.leading\n    );\n  }\n\n  const v = vec2.create();\n  for (const g of line.glyphs) {\n    const transform = mat2d.create();\n    mat2d.fromTranslation(transform, [x, y + baseline]);\n    mat2d.scale(transform, transform, [g.size / 1024, g.size / 1024]);\n\n    const color = preMultiplyAlpha(g.color);\n\n    for (const renderObject of g.renderObjects) {\n      instances.push({\n        renderObject,\n        color,\n        transform,\n      });\n    }\n    x += g.advance + spacing;\n  }\n\n  return {\n    bounds: rect.fromValues(0, y, x, y + leading),\n    renderObjects: RenderObject.merge(\"text\", instances),\n  };\n}\n","import { mat2d, vec2 } from \"gl-matrix\";\nimport { CharacterInstance } from \"../../../internal/character/CharacterInstance\";\nimport { rect } from \"../../../internal/math/rect\";\nimport type { DisplayObjectContainer } from \"./DisplayObjectContainer\";\nimport type { Stage } from \"./Stage\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { Event } from \"../events/Event\";\nimport { Transform } from \"../geom/Transform\";\nimport { Point } from \"../geom/Point\";\nimport { BitmapFilter } from \"../filters/BitmapFilter\";\nimport { SceneNode, roundTwips } from \"../../../internal/render2/SceneNode\";\n\nconst tmpRect = rect.create();\nconst tmpVec2 = vec2.create();\n\ninterface CharacterInit<T> {\n  fn: (char: T) => void;\n}\nlet charInit: CharacterInit<any> | null = null;\n\nexport class DisplayObject extends EventDispatcher {\n  private __parent!: DisplayObjectContainer | null;\n  __character!: CharacterInstance | null;\n  __depth!: number;\n  __clipDepth!: number;\n  transform!: Transform;\n  name!: string;\n  private __mask!: DisplayObject | null;\n  private __maskRefs!: number;\n  private __filters!: BitmapFilter[];\n\n  __node!: SceneNode;\n\n  static __initChar<T>(fn: () => T, init: (char: T) => void): T {\n    charInit = { fn: init };\n    return fn();\n  }\n\n  // @ts-ignore\n  constructor() {\n    const initChar = charInit;\n    charInit = null;\n    super();\n    initChar?.fn(this);\n  }\n\n  __preInit() {\n    this.__character = null;\n    this.__depth = -1;\n    this.__clipDepth = -1;\n    this.__parent = null;\n    this.name = \"\";\n    this.__mask = null;\n    this.__maskRefs = 0;\n    this.__filters = [];\n\n    this.__node = new SceneNode(this);\n    this.transform = new Transform();\n    this.transform.__setNode(this.__node);\n    super.__preInit();\n  }\n\n  get visible() {\n    return this.__node.visible;\n  }\n  set visible(value) {\n    this.__node.visible = value;\n  }\n\n  get parent() {\n    return this.__parent;\n  }\n  set parent(value) {\n    const oldStage = this.stage;\n    this.__parent = value;\n    const newStage = this.stage;\n\n    if (newStage !== oldStage) {\n      if (newStage) {\n        newStage.__displayListDirty = true;\n        this.__onAddedToStage(newStage);\n      } else if (oldStage) {\n        this.__onRemovedFromStage(oldStage);\n      }\n    }\n    this.__setEventParent(this.parent);\n  }\n\n  get stage(): Stage | null {\n    return this.parent?.stage ?? null;\n  }\n\n  get mask() {\n    return this.__mask;\n  }\n\n  set mask(value) {\n    if (this.__mask) {\n      this.__mask.__maskRefs--;\n      this.__mask.__node.isMask = this.__mask.__maskRefs > 0;\n    }\n\n    this.__mask = value;\n    this.__node.mask = value?.__node ?? null;\n    this.__node.markRenderDirty();\n\n    if (this.__mask) {\n      this.__mask.__maskRefs++;\n      this.__mask.__node.isMask = this.__mask.__maskRefs > 0;\n    }\n  }\n\n  get filters() {\n    return this.__filters;\n  }\n\n  set filters(value) {\n    this.__filters = value;\n    this.__node.filters = value\n      .map((f) => f.__filter)\n      .filter((f) => f.filter.isEffective(f));\n    this.__node.markRenderDirty();\n  }\n\n  get cacheAsBitmap() {\n    return this.__node.cacheAsBitmap || this.__node.filters.length > 0;\n  }\n  set cacheAsBitmap(value) {\n    this.__node.cacheAsBitmap = value;\n  }\n\n  get x(): number {\n    return this.__node.transformLocal[4];\n  }\n  set x(value: number) {\n    value = roundTwips(value);\n    if (this.__node.transformLocal[4] !== value) {\n      this.__node.transformLocal[4] = value;\n      this.__node.markLayoutDirty();\n    }\n  }\n\n  get y(): number {\n    return this.__node.transformLocal[5];\n  }\n  set y(value: number) {\n    value = roundTwips(value);\n    if (this.__node.transformLocal[5] !== value) {\n      this.__node.transformLocal[5] = value;\n      this.__node.markLayoutDirty();\n    }\n  }\n\n  get scaleX(): number {\n    return this.__node.transformLocal[0];\n  }\n  set scaleX(value: number) {\n    if (this.__node.transformLocal[0] !== value) {\n      this.__node.transformLocal[0] = value;\n      this.__node.markLayoutDirty();\n    }\n  }\n\n  get scaleY(): number {\n    return this.__node.transformLocal[3];\n  }\n  set scaleY(value: number) {\n    if (this.__node.transformLocal[3] !== value) {\n      this.__node.transformLocal[3] = value;\n      this.__node.markLayoutDirty();\n    }\n  }\n\n  get rotation(): number {\n    const angle = Math.atan2(\n      this.__node.transformLocal[1],\n      this.__node.transformLocal[3]\n    );\n    return (angle * 180) / Math.PI;\n  }\n  set rotation(value: number) {\n    const rotation = this.rotation;\n    const delta = ((value - rotation) / 180) * Math.PI;\n    if (delta !== 0) {\n      mat2d.rotate(\n        this.__node.transformLocal,\n        this.__node.transformLocal,\n        delta\n      );\n      this.__node.markLayoutDirty();\n    }\n  }\n\n  get width(): number {\n    this.__node.ensureLayout();\n    return Math.abs(this.__node.boundsLocal[2] * this.__node.transformLocal[0]);\n  }\n  set width(value: number) {\n    this.__node.ensureLayout();\n    let scaleX =\n      this.__node.boundsLocal[2] === 0 ? 1 : value / this.__node.boundsLocal[2];\n    if (this.__node.transformLocal[0] !== 0) {\n      scaleX *= Math.sign(this.__node.transformLocal[0]);\n    }\n    if (this.__node.transformLocal[0] !== scaleX) {\n      this.__node.transformLocal[0] = scaleX;\n      this.__node.markLayoutDirty();\n    }\n  }\n\n  get height(): number {\n    this.__node.ensureLayout();\n    return this.__node.boundsLocal[3] * this.__node.transformLocal[3];\n  }\n  set height(value: number) {\n    this.__node.ensureLayout();\n    let scaleY =\n      this.__node.boundsLocal[3] === 0 ? 1 : value / this.__node.boundsLocal[3];\n    if (this.__node.transformLocal[3] !== 0) {\n      scaleY *= Math.sign(this.__node.transformLocal[3]);\n    }\n    if (this.__node.transformLocal[3] !== scaleY) {\n      this.__node.transformLocal[3] = scaleY;\n      this.__node.markLayoutDirty();\n    }\n  }\n\n  get mouseX(): number {\n    const stage = this.stage;\n    if (!stage) {\n      return 0;\n    }\n    this.__globalToLocal(tmpVec2, stage.__mousePosition, true);\n    return tmpVec2[0];\n  }\n\n  get mouseY(): number {\n    const stage = this.stage;\n    if (!stage) {\n      return 0;\n    }\n    this.__globalToLocal(tmpVec2, stage.__mousePosition, true);\n    return tmpVec2[1];\n  }\n\n  __globalToLocal(out: vec2, pt: vec2, ensure: boolean) {\n    if (ensure) {\n      this.__node.ensureLayout();\n    }\n    vec2.transformMat2d(out, pt, this.__node.transformWorldInvert);\n  }\n\n  globalToLocal(point: Point): Point {\n    const local = new Point();\n    this.__globalToLocal(local.__value, point.__value, true);\n    return local;\n  }\n\n  hitTestPoint(x: number, y: number, shapeFlag = false): boolean {\n    if (!this.visible) {\n      return false;\n    }\n    this.__node.ensureLayout();\n    vec2.set(tmpVec2, x, y);\n    return this.__node.hitTest(tmpVec2, shapeFlag);\n  }\n\n  hitTestObject(obj: DisplayObject): boolean {\n    this.__node.ensureLayout();\n    obj.__node.ensureLayout();\n    return rect.intersects(obj.__node.boundsWorld, this.__node.boundsWorld);\n  }\n\n  __initFrame(stage: Stage) {}\n\n  __onRender() {}\n\n  __onAddedToStage(stage: Stage) {\n    this.dispatchEvent(new Event(Event.ADDED_TO_STAGE, false, false));\n  }\n\n  __onRemovedFromStage(stage: Stage) {\n    this.dispatchEvent(new Event(Event.REMOVED_FROM_STAGE, false, false));\n  }\n}\n","import { DisplayObject } from \"./DisplayObject\";\nimport { InteractiveObject } from \"./InteractiveObject\";\nimport { Stage } from \"./Stage\";\n\nexport class DisplayObjectContainer extends InteractiveObject {\n  __children!: DisplayObject[];\n\n  __preInit() {\n    this.__children = [];\n    super.__preInit();\n  }\n\n  get numChildren(): number {\n    return this.__children.length;\n  }\n\n  addChild(child: DisplayObject) {\n    child.parent?.removeChild(child);\n\n    this.__children.push(child);\n    child.parent = this;\n    child.__node.setParent(this.__node, this.__node.children.length);\n    return child;\n  }\n\n  addChildAt(child: DisplayObject, index: number) {\n    child.parent?.removeChild(child);\n\n    this.__children.splice(index, 0, child);\n    child.parent = this;\n    child.__node.setParent(this.__node, index);\n    return child;\n  }\n\n  getChildByName(name: string) {\n    return this.__children.find((c) => c.name === name) ?? null;\n  }\n\n  getChildAt(index: number) {\n    return this.__children[index] ?? null;\n  }\n\n  removeChild(child: DisplayObject) {\n    const i = this.__children.indexOf(child);\n    if (i < 0) {\n      return null;\n    }\n    this.__children.splice(i, 1);\n    child.parent = null;\n    child.__node.setParent(null, 0);\n    return child;\n  }\n\n  removeChildAt(index: number) {\n    const child = this.__children.splice(index, 1)[0] ?? null;\n    if (child) {\n      child.parent = null;\n      child.__node.setParent(null, 0);\n    }\n    return child;\n  }\n\n  removeChildren(beginIndex = 0, endIndex = this.__children.length) {\n    const removedChildren = this.__children.splice(\n      beginIndex,\n      endIndex - beginIndex\n    );\n    for (const child of removedChildren) {\n      child.parent = null;\n      child.__node.setParent(null, 0);\n    }\n  }\n\n  contains(child: DisplayObject) {\n    return this.__children.includes(child);\n  }\n\n  __onAddedToStage(stage: Stage) {\n    for (const child of this.__children) {\n      child.__onAddedToStage(stage);\n    }\n    super.__onAddedToStage(stage);\n  }\n\n  __onRemovedFromStage(stage: Stage) {\n    super.__onRemovedFromStage(stage);\n    for (const child of this.__children) {\n      child.__onRemovedFromStage(stage);\n    }\n  }\n\n  __onRender() {\n    super.__onRender();\n    for (const child of this.__children) {\n      child.__onRender();\n    }\n  }\n}\n","import { AVMObject } from \"../../__internal/avm2/AVMObject\";\nimport { SceneNode } from \"../../../internal/render2/SceneNode\";\nimport { preMultiplyAlpha } from \"../../../internal/math/color\";\nimport { RenderObject } from \"../../../internal/render2/RenderObject\";\nimport { rect } from \"../../../internal/math/rect\";\n\nexport class Graphics extends AVMObject {\n  private __x = 0;\n  private __y = 0;\n  private __lineThickness = -1;\n  private __lineColor = 0xff000000;\n  private readonly __bounds = rect.create();\n  private readonly __renderObjects: RenderObject[] = [];\n\n  constructor(readonly __node: SceneNode) {\n    super();\n  }\n\n  clear() {\n    this.__x = 0;\n    this.__y = 0;\n    this.__lineThickness = -1;\n    this.__lineColor = 0xff000000;\n    rect.clear(this.__bounds);\n    this.__renderObjects.length = 0;\n    this.__node.setRenderObjects([], this.__bounds);\n  }\n\n  lineStyle(thickness = NaN, color = 0, alpha = 1.0) {\n    this.__lineThickness = isNaN(thickness) ? -1 : thickness;\n    this.__lineColor = preMultiplyAlpha(\n      color + Math.floor(alpha * 0xff) * 0x1000000\n    );\n  }\n\n  moveTo(x: number, y: number) {\n    this.__x = x;\n    this.__y = y;\n  }\n\n  lineTo(x: number, y: number) {\n    const line = RenderObject.line(\n      this.__x,\n      this.__y,\n      x,\n      y,\n      this.__lineThickness,\n      this.__lineColor\n    );\n    this.__renderObjects.push(line);\n    rect.union(this.__bounds, this.__bounds, line.bounds);\n    this.__node.setRenderObjects(this.__renderObjects.slice(), this.__bounds);\n\n    this.__x = x;\n    this.__y = y;\n  }\n}\n","import { DisplayObject } from \"./DisplayObject\";\n\nexport abstract class InteractiveObject extends DisplayObject {\n  constructor() {\n    super();\n  }\n\n  get __isPointerCursor(): boolean {\n    return this.parent ? this.parent.__isPointerCursor : false;\n  }\n\n  tabEnabled = false;\n\n  tabIndex = -1;\n}\n","import { DisplayObject } from \"./DisplayObject\";\nimport { MorphShapeInstance } from \"../../../internal/character/MorphShapeInstance\";\n\nexport class MorphShape extends DisplayObject {\n  static __character?: MorphShapeInstance;\n\n  declare __character: MorphShapeInstance | null;\n\n  constructor() {\n    super();\n\n    this.__character =\n      (this.constructor as typeof MorphShape).__character ?? null;\n    this.__character?.applyTo(this);\n  }\n\n  private ___ratio = 0;\n\n  get __ratio() {\n    return this.___ratio;\n  }\n\n  set __ratio(value) {\n    this.___ratio = value;\n    this.__character?.applyTo(this);\n  }\n}\n","import { Sprite } from \"./Sprite\";\nimport { runFrame, enqueueFrameScript } from \"./frame\";\nimport { Stage } from \"./Stage\";\n\nexport type MovieClipT<T> = MovieClip & T;\n\nexport class MovieClip extends Sprite {\n  __lastFrame = 1;\n  __constructed = false;\n  __frameScripts = new Map<number, () => void>();\n  __scriptFrame = 0;\n\n  currentFrame = 1;\n\n  isPlaying = true;\n\n  constructor() {\n    super();\n  }\n\n  get totalFrames(): number {\n    return this.__character?.numFrames ?? 1;\n  }\n\n  __initFrame(stage: Stage) {\n    super.__initFrame(stage);\n\n    if (this.isPlaying && this.__constructed) {\n      let newFrame = this.currentFrame + 1;\n      if (newFrame > this.totalFrames || newFrame < 1) {\n        newFrame = 1;\n      }\n      if (this.currentFrame !== newFrame) {\n        this.currentFrame = newFrame;\n        stage.__constructionQueue.push(this);\n      }\n    } else if (!this.__constructed) {\n      stage.__constructionQueue.push(this);\n    }\n  }\n\n  __constructFrame() {\n    if (this.__lastFrame !== this.currentFrame) {\n      this.__character?.applyTo(this, this.__lastFrame, this.currentFrame);\n      this.__lastFrame = this.currentFrame;\n    }\n    this.__constructed = true;\n\n    if (this.__scriptFrame !== this.currentFrame) {\n      enqueueFrameScript(() => this.__runFrameScript());\n    }\n  }\n\n  __runFrameScript() {\n    if (this.__scriptFrame !== this.currentFrame) {\n      this.__scriptFrame = this.currentFrame;\n      const frameScript = this.__frameScripts.get(this.__scriptFrame);\n      frameScript?.();\n    }\n  }\n\n  addFrameScript(...args: unknown[]) {\n    for (let i = 0; i < args.length; i += 2) {\n      this.__frameScripts.set(\n        (args[i] as number) + 1,\n        args[i + 1] as () => void\n      );\n    }\n  }\n\n  __resolveFrame(frameId: unknown): number | null {\n    const frameNumber = Number(frameId);\n    if (!isNaN(frameNumber)) {\n      return frameNumber;\n    }\n    const frame = this.__character?.frames?.find((f) => f.label === frameId);\n    if (frame) {\n      return frame.frame;\n    }\n    return null;\n  }\n\n  gotoAndPlay(frame: unknown) {\n    const frameNumber = this.__resolveFrame(frame);\n    if (frameNumber) {\n      this.currentFrame = frameNumber;\n    }\n    this.isPlaying = true;\n\n    const stage = this.stage;\n    if (stage) {\n      stage.__constructionQueue.push(this);\n      runFrame(false, stage);\n    } else {\n      this.__constructFrame();\n      this.__runFrameScript();\n    }\n  }\n\n  gotoAndStop(frame: unknown) {\n    const frameNumber = this.__resolveFrame(frame);\n    if (frameNumber) {\n      this.currentFrame = frameNumber;\n    }\n    this.isPlaying = false;\n\n    const stage = this.stage;\n    if (stage) {\n      stage.__constructionQueue.push(this);\n      runFrame(false, stage);\n    } else {\n      this.__constructFrame();\n      this.__runFrameScript();\n    }\n  }\n\n  play() {\n    this.isPlaying = true;\n  }\n\n  stop() {\n    this.isPlaying = false;\n  }\n\n  __onAddedToStage(stage: Stage) {\n    super.__onAddedToStage(stage);\n    stage.__constructionQueue.push(this);\n  }\n}\n","import { DisplayObject } from \"./DisplayObject\";\nimport { ShapeInstance } from \"../../../internal/character/ShapeInstance\";\nimport { Graphics } from \"./Graphics\";\n\nexport class Shape extends DisplayObject {\n  static __character?: ShapeInstance;\n\n  declare __character: ShapeInstance | null;\n\n  readonly graphics: Graphics;\n\n  constructor() {\n    super();\n\n    this.graphics = new Graphics(this.__node);\n    this.__character = (this.constructor as typeof Shape).__character ?? null;\n    this.__character?.applyTo(this);\n  }\n}\n","import { DisplayObjectContainer } from \"./DisplayObjectContainer\";\nimport { SpriteInstance } from \"../../../internal/character/SpriteInstance\";\nimport { Graphics } from \"./Graphics\";\nimport { SoundContext } from \"../media/context\";\n\nexport class Sprite extends DisplayObjectContainer {\n  static __character?: SpriteInstance;\n\n  declare __character: SpriteInstance | null;\n\n  readonly graphics: Graphics;\n  __soundContext!: SoundContext;\n\n  constructor() {\n    super();\n\n    this.graphics = new Graphics(this.__node);\n  }\n\n  __preInit() {\n    super.__preInit();\n    this.__soundContext = new SoundContext();\n    this.__character = (this.constructor as typeof Sprite).__character ?? null;\n    this.__character?.applyTo(this, 1, 1);\n  }\n\n  buttonMode = false;\n\n  get __isPointerCursor() {\n    return this.buttonMode || super.__isPointerCursor;\n  }\n}\n","import type { Stage } from \"./Stage\";\nimport type { DisplayObject } from \"./DisplayObject\";\nimport type { MovieClip } from \"./MovieClip\";\nimport { Event } from \"../events/Event\";\nimport { __broadcastDispatcher } from \"../events/EventDispatcher\";\nimport { SceneNode } from \"../../../internal/render2/SceneNode\";\n\nconst frameScriptQueue: Array<() => void> = [];\n\nexport function enqueueFrameScript(script: () => void) {\n  frameScriptQueue.push(script);\n}\n\n// ref: https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/flash/display/DisplayObject.ts#L422\nexport function runFrame(isRoot: boolean, stage: Stage) {\n  if (isRoot) {\n    stage.__ensureDisplayList();\n    for (const o of stage.__displayList.slice()) {\n      o.__initFrame(stage);\n    }\n\n    __broadcastDispatcher.dispatchEvent(\n      new Event(Event.ENTER_FRAME, false, false)\n    );\n  }\n\n  while (stage.__constructionQueue.length > 0) {\n    const queue = stage.__constructionQueue.slice();\n    stage.__constructionQueue.length = 0;\n    for (const o of queue) {\n      o.__constructFrame();\n    }\n  }\n\n  const scripts = frameScriptQueue.slice();\n  frameScriptQueue.length = 0;\n  for (const script of scripts) {\n    script();\n  }\n}\n","import { vec2 } from \"gl-matrix\";\n\nexport class Canvas {\n  readonly container = document.createElement(\"div\");\n  readonly element = document.createElement(\"canvas\");\n  #cursor = \"\";\n\n  constructor(readonly width: number, readonly height: number) {\n    this.container.style.setProperty(\"width\", `${width}px`);\n    this.container.style.setProperty(\"height\", `${height}px`);\n    this.container.style.setProperty(\"position\", \"relative\");\n\n    this.element.tabIndex = 0;\n    this.element.style.setProperty(\"outline\", \"none\", \"important\");\n    this.element.style.setProperty(\"position\", \"absolute\");\n    this.element.style.setProperty(\"width\", `${width}px`);\n    this.element.style.setProperty(\"height\", `${height}px`);\n    this.element.width = width * window.devicePixelRatio;\n    this.element.height = height * window.devicePixelRatio;\n\n    this.container.appendChild(this.element);\n  }\n\n  get cursor(): string {\n    return this.#cursor;\n  }\n\n  set cursor(value: string) {\n    if (value !== this.#cursor) {\n      this.element.style.cursor = value;\n      this.#cursor = value;\n    }\n  }\n\n  resolveCoords(out: vec2, clientX: number, clientY: number) {\n    const rect = this.element.getBoundingClientRect();\n    out[0] = clientX - rect.left;\n    out[1] = clientY - rect.top;\n  }\n}\n","import { mat2d, vec4, vec2 } from \"gl-matrix\";\nimport { RenderObject } from \"./RenderObject\";\nimport { rect } from \"../math/rect\";\nimport { multiplyColorTransform } from \"../math/color\";\nimport { Texture } from \"./gl/Texture\";\nimport { FilterInstance } from \"./filter/Filter\";\nimport { CachedRender } from \"./CachedRender\";\n\nexport interface Transform {\n  view: mat2d;\n  colorMul: vec4;\n  colorAdd: vec4;\n  renderMask: unknown;\n  useMask: unknown[];\n}\n\nexport type DeferredRender =\n  | DeferredRenderObject\n  | DeferredRenderCache\n  | DeferredRenderTexture\n  | DeferredRenderFilter;\n\nexport interface DeferredRenderObject {\n  transform: Transform;\n  object: RenderObject;\n}\n\nexport interface DeferredRenderCache {\n  transform: Transform;\n  cache: {\n    texture: Texture;\n    bounds: rect;\n    view: mat2d;\n    then: (render: CachedRender) => void;\n  };\n}\n\nexport interface DeferredRenderTexture {\n  transform: Transform;\n  texture: {\n    bounds: rect;\n    paddings: vec2;\n    scale: vec2;\n    translate: vec2;\n    fn: (ctx: RenderContext) => void;\n    then: (ctx: RenderContext, texture: Texture, bounds: rect) => void;\n  };\n}\n\nexport interface DeferredRenderFilter {\n  transform: Transform;\n  filter: {\n    texture: Texture;\n    bounds: rect;\n    instance: FilterInstance;\n    then: (ctx: RenderContext, texture: Texture, bounds: rect) => void;\n  };\n}\n\nconst colorMulIdentity = vec4.fromValues(1, 1, 1, 1);\nconst colorAddIdentity = vec4.fromValues(0, 0, 0, 0);\n\nexport class RenderContext {\n  readonly viewport: rect | null;\n  readonly renders: DeferredRender[] = [];\n  readonly transformStack: Transform[] = [];\n  readonly allTransforms: Transform[] = [];\n\n  get transform(): Transform {\n    return this.transformStack[this.transformStack.length - 1];\n  }\n  set transform(transform: Transform) {\n    this.transformStack[this.transformStack.length - 1] = transform;\n  }\n\n  get bounds(): rect {\n    const bounds = rect.create();\n    const renderBounds = rect.create();\n    for (const render of this.renders) {\n      if (\"object\" in render) {\n        rect.apply(renderBounds, render.object.bounds, render.transform.view);\n      } else if (\"texture\" in render) {\n        rect.copy(renderBounds, render.texture.bounds);\n        renderBounds[0] -= render.texture.paddings[0];\n        renderBounds[1] -= render.texture.paddings[1];\n        renderBounds[2] += render.texture.paddings[0] * 2;\n        renderBounds[3] += render.texture.paddings[1] * 2;\n        rect.apply(renderBounds, renderBounds, render.transform.view);\n      } else if (\"filter\" in render) {\n        rect.apply(renderBounds, render.filter.bounds, render.transform.view);\n      }\n      rect.union(bounds, bounds, renderBounds);\n    }\n    return bounds;\n  }\n\n  constructor(viewport: rect | null) {\n    this.transformStack.push({\n      view: mat2d.identity(mat2d.create()),\n      colorMul: vec4.set(vec4.create(), 1, 1, 1, 1),\n      colorAdd: vec4.set(vec4.create(), 0, 0, 0, 0),\n      renderMask: null,\n      useMask: [],\n    });\n    this.allTransforms.push(this.transformStack[0]);\n    this.viewport = viewport;\n  }\n\n  pushTransform(\n    view: mat2d,\n    opts?: Partial<\n      Pick<Transform, \"colorAdd\" | \"colorMul\" | \"useMask\" | \"renderMask\">\n    >\n  ) {\n    const transform = this.transformStack[this.transformStack.length - 1];\n    const nodeTransform: Transform = {\n      view: mat2d.create(),\n      colorAdd: vec4.create(),\n      colorMul: vec4.create(),\n      renderMask: opts?.renderMask ?? transform.renderMask,\n      useMask: transform.useMask.slice(),\n    };\n    mat2d.multiply(nodeTransform.view, transform.view, view);\n    multiplyColorTransform(\n      nodeTransform.colorMul,\n      nodeTransform.colorAdd,\n      transform.colorMul,\n      transform.colorAdd,\n      opts?.colorMul ?? colorMulIdentity,\n      opts?.colorAdd ?? colorAddIdentity\n    );\n    if (opts?.useMask) {\n      nodeTransform.useMask.push(opts.useMask);\n    }\n    this.transformStack.push(nodeTransform);\n    this.allTransforms.push(nodeTransform);\n  }\n\n  dupTransform() {\n    const transform = this.transform;\n    const nodeTransform: Transform = {\n      view: mat2d.clone(transform.view),\n      colorAdd: vec4.clone(transform.colorAdd),\n      colorMul: vec4.clone(transform.colorMul),\n      renderMask: transform.renderMask,\n      useMask: transform.useMask.slice(),\n    };\n    this.transformStack.push(nodeTransform);\n    this.allTransforms.push(nodeTransform);\n  }\n\n  popTransform() {\n    this.transformStack.pop();\n  }\n\n  renderContext(ctx: RenderContext) {\n    const { view, colorMul, colorAdd } = this.transform;\n    for (const transform of ctx.allTransforms) {\n      mat2d.multiply(transform.view, view, transform.view);\n      multiplyColorTransform(\n        transform.colorMul,\n        transform.colorAdd,\n        colorMul,\n        colorAdd,\n        transform.colorMul,\n        transform.colorAdd\n      );\n      this.allTransforms.push(transform);\n    }\n    this.renders.push(...ctx.renders);\n  }\n\n  renderObject(object: RenderObject) {\n    this.renders.push({\n      transform: this.transform,\n      object,\n    });\n  }\n\n  renderCache(\n    texture: Texture,\n    bounds: rect,\n    baseViewMat: mat2d,\n    then: (render: CachedRender) => void\n  ) {\n    // Extract correct view matrix for rendering cached texture.\n    const view = mat2d.invert(mat2d.create(), baseViewMat);\n    mat2d.multiply(view, view, this.transform.view);\n    this.renders.push({\n      transform: this.transform,\n      cache: { view, texture, bounds, then },\n    });\n  }\n\n  renderTexture(\n    bounds: rect,\n    paddings: vec2,\n    fn: (ctx: RenderContext) => void,\n    then: (ctx: RenderContext, texture: Texture, bounds: rect) => void\n  ) {\n    this.dupTransform();\n\n    const viewMatrix = this.transform.view;\n    mat2d.translate(viewMatrix, viewMatrix, [bounds[0], bounds[1]]);\n\n    const scale = vec2.fromValues(\n      Math.abs(viewMatrix[0]),\n      Math.abs(viewMatrix[3])\n    );\n    if (scale[0] !== 0 && scale[1] !== 0) {\n      mat2d.scale(viewMatrix, viewMatrix, [1 / scale[0], 1 / scale[1]]);\n    }\n    mat2d.translate(viewMatrix, viewMatrix, [-paddings[0], -paddings[1]]);\n\n    const translate = vec2.fromValues(viewMatrix[4], viewMatrix[5]);\n    viewMatrix[4] = Math.floor(viewMatrix[4]);\n    viewMatrix[5] = Math.floor(viewMatrix[5]);\n\n    this.renders.push({\n      transform: this.transform,\n      texture: {\n        bounds: rect.copy(rect.create(), bounds),\n        paddings,\n        scale,\n        translate,\n        fn,\n        then,\n      },\n    });\n    this.popTransform();\n  }\n\n  renderFilter(\n    texture: Texture,\n    bounds: rect,\n    instance: FilterInstance,\n    then: (ctx: RenderContext, texture: Texture, bounds: rect) => void\n  ) {\n    this.renders.push({\n      transform: this.transform,\n      filter: {\n        texture,\n        bounds,\n        instance,\n        then,\n      },\n    });\n  }\n}\n","interface ListenerSlot<T extends (...args: unknown[]) => void> {\n  disabled: boolean;\n  handler: T;\n}\n\nexport class Signal<T extends (...args: unknown[]) => void> {\n  private listeners: ListenerSlot<T>[] = [];\n\n  subscribe(handler: T) {\n    this.listeners.push({ disabled: false, handler });\n  }\n\n  unsubscribe(handler: T) {\n    for (const l of this.listeners) {\n      if (l.handler === handler) {\n        l.disabled = true;\n      }\n    }\n    this.listeners = this.listeners.filter((h) => !h.disabled);\n  }\n\n  emit(...args: Parameters<T>) {\n    for (const { disabled, handler } of this.listeners) {\n      if (!disabled) {\n        handler(...args);\n      }\n    }\n  }\n}\n","import { vec4 } from \"gl-matrix\";\nimport { Signal } from \"../../signal\";\n\nexport class GLState {\n  readonly gl: WebGL2RenderingContext;\n  readonly contextLost = new Signal();\n  readonly resetRender = new Signal();\n\n  maxTextures = 1;\n  textureLimit = 16;\n  maxSamples = 0;\n  sampleLimit = 4;\n\n  readonly clearColor = vec4.fromValues(NaN, NaN, NaN, NaN);\n  readonly viewport = vec4.fromValues(NaN, NaN, NaN, NaN);\n  readonly bindings = new Map<GLenum, unknown>();\n  readonly textureUnits = new Map<number, WebGLTexture | null>();\n  activeTexture: GLenum = NaN;\n  vertexArray: WebGLVertexArrayObject | null = null;\n  program: WebGLProgram | null = null;\n  capacity: number = NaN;\n  readonly blendEquation: [GLenum, GLenum] = [NaN, NaN];\n  readonly blendFuncs: [GLenum, GLenum, GLenum, GLenum] = [NaN, NaN, NaN, NaN];\n\n  constructor(\n    readonly canvas: HTMLCanvasElement,\n    readonly attrs: WebGLContextAttributes\n  ) {\n    const gl = canvas.getContext(\"webgl2\", attrs);\n    if (!gl) {\n      throw new Error(\"Cannot create WebGL2 context\");\n    }\n    this.gl = gl;\n    canvas.addEventListener(\n      \"webglcontextlost\",\n      (e) => {\n        e.preventDefault();\n        this.contextLost.emit();\n      },\n      false\n    );\n    canvas.addEventListener(\n      \"webglcontextrestored\",\n      (e) => {\n        e.preventDefault();\n        this.reset();\n      },\n      false\n    );\n\n    this.reset();\n  }\n\n  reset() {\n    this.maxTextures = Math.min(\n      this.textureLimit,\n      this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS)\n    );\n    this.maxSamples = Math.min(\n      this.sampleLimit,\n      this.gl.getParameter(this.gl.MAX_SAMPLES)\n    );\n    vec4.set(this.clearColor, NaN, NaN, NaN, NaN);\n    vec4.set(this.viewport, NaN, NaN, NaN, NaN);\n    this.bindings.clear();\n    this.textureUnits.clear();\n    this.activeTexture = NaN;\n    this.vertexArray = null;\n    this.program = null;\n    this.capacity = NaN;\n    this.blendEquation.fill(NaN);\n    this.blendFuncs.fill(NaN);\n  }\n\n  resetRenderState() {\n    this.reset();\n    this.resetRender.emit();\n  }\n\n  // FIXME: Disabled bound texture unit memorization since it's crashy on macOS.\n  // ref: https://stackoverflow.com/questions/34277156/webgl-on-osx-using-wrong-texture-in-all-browsers\n  bindTexture(unit: number, texture: WebGLTexture | null) {\n    this.gl.activeTexture(this.gl.TEXTURE0 + unit);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    this.textureUnits.set(unit, texture);\n  }\n\n  bindTextures(textures: (WebGLTexture | null)[]): GLenum[] {\n    return textures.map((tex, i) => {\n      this.bindTexture(i, tex);\n      return i;\n    });\n  }\n\n  bindBuffer(target: GLenum, buffer: WebGLBuffer | null) {\n    if (this.bindings.get(target) === buffer) {\n      return;\n    }\n    this.gl.bindBuffer(target, buffer);\n    this.bindings.set(target, buffer);\n  }\n\n  bindVertexArray(va: WebGLVertexArrayObject | null) {\n    if (this.vertexArray === va) {\n      return;\n    }\n    this.gl.bindVertexArray(va);\n    this.vertexArray = va;\n    this.bindings.clear();\n  }\n\n  bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null) {\n    if (this.bindings.get(target) === renderbuffer) {\n      return;\n    }\n    this.gl.bindRenderbuffer(target, renderbuffer);\n    this.bindings.set(target, renderbuffer);\n  }\n\n  bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null) {\n    if (this.bindings.get(target) === framebuffer) {\n      return;\n    }\n    this.gl.bindFramebuffer(target, framebuffer);\n    this.bindings.set(target, framebuffer);\n    if (target === this.gl.FRAMEBUFFER) {\n      this.bindings.set(this.gl.FRAMEBUFFER, framebuffer);\n      this.bindings.set(this.gl.READ_FRAMEBUFFER, framebuffer);\n      this.bindings.set(this.gl.DRAW_FRAMEBUFFER, framebuffer);\n    } else if (target === this.gl.READ_FRAMEBUFFER) {\n      this.bindings.set(this.gl.FRAMEBUFFER, undefined);\n      this.bindings.set(this.gl.READ_FRAMEBUFFER, framebuffer);\n    } else if (target === this.gl.DRAW_FRAMEBUFFER) {\n      this.bindings.set(this.gl.FRAMEBUFFER, undefined);\n      this.bindings.set(this.gl.DRAW_FRAMEBUFFER, framebuffer);\n    }\n  }\n\n  useProgram(program: WebGLProgram | null) {\n    if (this.program === program) {\n      return;\n    }\n    this.gl.useProgram(program);\n    this.program = program;\n  }\n\n  setActiveTexture(texture: GLenum) {\n    if (this.activeTexture === texture) {\n      return;\n    }\n    this.gl.activeTexture(texture);\n    this.activeTexture = texture;\n  }\n\n  setClearColor(red: number, green: number, blue: number, alpha: number) {\n    if (vec4.equals(this.clearColor, [red, green, blue, alpha])) {\n      return;\n    }\n    this.gl.clearColor(red, green, blue, alpha);\n    vec4.set(this.clearColor, red, green, blue, alpha);\n  }\n\n  setViewport(x: number, y: number, width: number, height: number) {\n    if (vec4.equals(this.viewport, [x, y, width, height])) {\n      return;\n    }\n    this.gl.viewport(x, y, width, height);\n    vec4.set(this.viewport, x, y, width, height);\n  }\n\n  enable(cap: GLenum) {\n    if ((this.capacity | cap) === this.capacity) {\n      return;\n    }\n    this.gl.enable(cap);\n    this.capacity |= cap;\n  }\n\n  disable(cap: GLenum) {\n    if ((this.capacity & ~cap) === this.capacity) {\n      return;\n    }\n    this.gl.disable(cap);\n    this.capacity &= ~cap;\n  }\n\n  setBlendEquation(modeRGB: GLenum, modeAlpha: GLenum = modeRGB) {\n    if (\n      this.blendEquation[0] === modeRGB &&\n      this.blendEquation[1] === modeAlpha\n    ) {\n      return;\n    }\n    this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n    this.blendEquation[0] = modeRGB;\n    this.blendEquation[1] = modeAlpha;\n  }\n\n  setBlendFunc(\n    srcRGB: GLenum,\n    dstRGB: GLenum,\n    srcAlpha: GLenum = srcRGB,\n    dstAlpha: GLenum = dstRGB\n  ) {\n    if (\n      this.blendFuncs[0] === srcRGB &&\n      this.blendFuncs[1] === dstRGB &&\n      this.blendFuncs[2] === srcAlpha &&\n      this.blendFuncs[3] === dstAlpha\n    ) {\n      return;\n    }\n    this.gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    this.blendFuncs[0] = srcRGB;\n    this.blendFuncs[1] = dstRGB;\n    this.blendFuncs[2] = srcAlpha;\n    this.blendFuncs[3] = dstAlpha;\n  }\n}\n","import { GLState } from \"./GLState\";\n\nexport class Renderbuffer {\n  readonly width: number;\n  readonly height: number;\n\n  state: GLState | null = null;\n  renderbuffer: WebGLRenderbuffer | null = null;\n\n  constructor(\n    width: number,\n    height: number,\n    readonly type: \"depth\" | \"rgba\" | \"rgb\"\n  ) {\n    this.width = width;\n    this.height = height;\n  }\n\n  ensure(state: GLState) {\n    if (this.renderbuffer) {\n      return;\n    }\n    const gl = state.gl;\n\n    let glFormat: GLenum;\n    switch (this.type) {\n      case \"depth\":\n        glFormat = gl.DEPTH_COMPONENT16;\n        break;\n      case \"rgba\":\n        glFormat = gl.RGBA8;\n        break;\n      case \"rgb\":\n        glFormat = gl.RGB8;\n        break;\n    }\n\n    const rb = gl.createRenderbuffer();\n    state.bindRenderbuffer(gl.RENDERBUFFER, rb);\n    if (state.maxSamples > 0) {\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        state.maxSamples,\n        glFormat,\n        this.width,\n        this.height\n      );\n    } else {\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        glFormat,\n        this.width,\n        this.height\n      );\n    }\n\n    this.state = state;\n    this.renderbuffer = rb;\n\n    state.contextLost.subscribe(this.onContextLost);\n    state.resetRender.subscribe(this.onResetRender);\n  }\n\n  delete() {\n    if (!this.state) {\n      return;\n    }\n    this.state.gl.deleteRenderbuffer(this.renderbuffer);\n    this.state.contextLost.unsubscribe(this.onContextLost);\n    this.state.resetRender.unsubscribe(this.onResetRender);\n    this.state = null;\n    this.renderbuffer = null;\n  }\n\n  private onContextLost = () => {\n    if (this.state) {\n      this.state.contextLost.unsubscribe(this.onContextLost);\n      this.state.resetRender.unsubscribe(this.onResetRender);\n      this.state = null;\n    }\n    this.renderbuffer = null;\n  };\n\n  private onResetRender = () => {\n    this.delete();\n  };\n}\n","import { GLState } from \"./GLState\";\nimport { Texture } from \"./Texture\";\nimport { Renderbuffer } from \"./Renderbuffer\";\n\nexport class Framebuffer {\n  readonly colorAttachment: Texture | Renderbuffer;\n\n  state: GLState | null = null;\n  framebuffer: WebGLFramebuffer | null = null;\n\n  constructor(colorAttachment: Texture | Renderbuffer) {\n    this.colorAttachment = colorAttachment;\n  }\n\n  ensure(state: GLState) {\n    if (this.framebuffer) {\n      return;\n    }\n    const gl = state.gl;\n    this.colorAttachment.ensure(state);\n\n    const fb = gl.createFramebuffer();\n    state.bindFramebuffer(gl.DRAW_FRAMEBUFFER, fb);\n    if (this.colorAttachment instanceof Texture) {\n      gl.framebufferTexture2D(\n        gl.DRAW_FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.colorAttachment.texture,\n        0\n      );\n    } else {\n      gl.framebufferRenderbuffer(\n        gl.DRAW_FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.RENDERBUFFER,\n        this.colorAttachment.renderbuffer\n      );\n    }\n\n    this.state = state;\n    this.framebuffer = fb;\n\n    state.contextLost.subscribe(this.onContextLost);\n    state.resetRender.subscribe(this.onResetRender);\n  }\n\n  delete() {\n    if (!this.state) {\n      return;\n    }\n    this.state.gl.deleteFramebuffer(this.framebuffer);\n    this.state.contextLost.unsubscribe(this.onContextLost);\n    this.state.resetRender.unsubscribe(this.onResetRender);\n    this.state = null;\n    this.framebuffer = null;\n  }\n\n  private onContextLost = () => {\n    if (this.state) {\n      this.state.contextLost.unsubscribe(this.onContextLost);\n      this.state.resetRender.unsubscribe(this.onResetRender);\n      this.state = null;\n    }\n    this.framebuffer = null;\n  };\n\n  private onResetRender = () => {\n    this.delete();\n  };\n}\n","import { Texture } from \"./gl/Texture\";\nimport { Renderbuffer } from \"./gl/Renderbuffer\";\nimport { Framebuffer } from \"./gl/Framebuffer\";\nimport { TextureTarget, RenderbufferTarget } from \"./gl/targets\";\n\ninterface CacheItem<T> {\n  item: T;\n  insertAt: number;\n}\n\nexport class RenderPool {\n  private readonly texturePool = new Map<string, CacheItem<TextureTarget>[]>();\n  private readonly renderbufferPool = new Map<\n    string,\n    CacheItem<RenderbufferTarget>[]\n  >();\n\n  takeTexture(width: number, height: number): TextureTarget {\n    const key = `${width}:${height}`;\n\n    const items = this.texturePool.get(key) || [];\n    if (items.length === 0) {\n      const texture = Texture.size(width, height);\n      const framebuffer = new Framebuffer(texture);\n      items.push({ insertAt: +new Date(), item: { texture, framebuffer } });\n    }\n    return items.pop()!.item;\n  }\n\n  takeRenderbuffer(width: number, height: number): RenderbufferTarget {\n    const key = `${width}:${height}`;\n\n    const items = this.renderbufferPool.get(key) || [];\n    if (items.length === 0) {\n      const rb = new Renderbuffer(width, height, \"rgba\");\n      const framebuffer = new Framebuffer(rb);\n      items.push({\n        insertAt: +new Date(),\n        item: { renderbuffer: rb, framebuffer },\n      });\n    }\n    return items.pop()!.item;\n  }\n\n  returnTexture(target: TextureTarget) {\n    const key = `${target.texture.width}:${target.texture.height}`;\n    const items = this.texturePool.get(key) || [];\n    items.push({ insertAt: +new Date(), item: target });\n    this.texturePool.set(key, items);\n  }\n\n  returnRenderbuffer(target: RenderbufferTarget) {\n    const key = `${target.renderbuffer.width}:${target.renderbuffer.height}`;\n    const items = this.renderbufferPool.get(key) || [];\n    items.push({ insertAt: +new Date(), item: target });\n    this.renderbufferPool.set(key, items);\n  }\n\n  cleanLRU() {\n    const threshold = +new Date() - 60 * 1000;\n    for (const [key, items] of this.renderbufferPool) {\n      const toBeDeleted = items.filter((item) => item.insertAt < threshold);\n      for (const { item } of toBeDeleted) {\n        item.renderbuffer.delete();\n        item.framebuffer.delete();\n      }\n      this.renderbufferPool.set(\n        key,\n        items.filter((item) => !toBeDeleted.includes(item))\n      );\n    }\n    for (const [key, items] of this.texturePool) {\n      const toBeDeleted = items.filter((item) => item.insertAt < threshold);\n      for (const { item } of toBeDeleted) {\n        item.texture.delete();\n        item.framebuffer.delete();\n      }\n      this.texturePool.set(\n        key,\n        items.filter((item) => !toBeDeleted.includes(item))\n      );\n    }\n  }\n}\n","import { rect } from \"../math/rect\";\n\nconst padding = 1;\n\nexport class Atlas {\n  private x = 0;\n  private y = 0;\n  private rowHeight = 0;\n\n  constructor(readonly width: number, readonly height: number) {}\n\n  add(width: number, height: number): rect | null {\n    let x = this.x;\n    let y = this.y;\n\n    if (this.x + width > this.width) {\n      this.x = 0;\n      this.y += this.rowHeight + padding;\n      this.rowHeight = 0;\n\n      x = this.x;\n      y = this.y;\n    }\n    this.x += width;\n    if (this.x > this.width) {\n      return null;\n    }\n    this.x += padding;\n\n    this.rowHeight = Math.max(this.rowHeight, height);\n    if (this.y + this.rowHeight > this.height) {\n      return null;\n    }\n\n    return rect.fromValues(x, y, width, height);\n  }\n}\n","import { mat2d } from \"gl-matrix\";\nimport { rect } from \"../math/rect\";\nimport { RenderPool } from \"./RenderPool\";\nimport { TextureTarget } from \"./gl/targets\";\nimport { RenderObject } from \"./RenderObject\";\n\nexport class CachedRender {\n  private returned = false;\n\n  readonly renderObject: RenderObject;\n\n  constructor(\n    private readonly pool: RenderPool,\n    private readonly target: TextureTarget,\n    readonly view: mat2d,\n    readonly bounds: rect\n  ) {\n    this.renderObject = RenderObject.rect(bounds, target.texture);\n  }\n\n  return() {\n    if (this.returned) {\n      return;\n    }\n    this.pool.returnTexture(this.target);\n    this.returned = true;\n  }\n}\n","import { mat2d } from \"gl-matrix\";\nimport { Canvas } from \"./Canvas\";\nimport { SceneNode } from \"./SceneNode\";\nimport {\n  RenderContext,\n  DeferredRender,\n  DeferredRenderObject,\n  DeferredRenderTexture,\n  DeferredRenderFilter,\n  DeferredRenderCache,\n} from \"./RenderContext\";\nimport { rect } from \"../math/rect\";\nimport { renderVertexShader, renderFragmentShader } from \"./programs/render\";\nimport { GLState } from \"./gl/GLState\";\nimport { Texture } from \"./gl/Texture\";\nimport { Buffer } from \"./gl/Buffer\";\nimport { Program } from \"./gl/Program\";\nimport { VertexArray } from \"./gl/VertexArray\";\nimport { RenderPool } from \"./RenderPool\";\nimport { Framebuffer } from \"./gl/Framebuffer\";\nimport { Renderbuffer } from \"./gl/Renderbuffer\";\nimport { TextureTarget, RenderbufferTarget } from \"./gl/targets\";\nimport { Atlas } from \"./Atlas\";\nimport { FilterInput, Filter, FilterInstance } from \"./filter/Filter\";\nimport { projection } from \"../math/matrix\";\nimport { CachedRender } from \"./CachedRender\";\n\nconst vertexLimit = 0x10000;\nconst indexLimit = 0x80000;\nconst atlasSize = 1024;\n\nconst tmpRect = rect.create();\nconst tmpMat2d = mat2d.create();\n\nfunction renderTextureSize(n: number) {\n  if (n < 128) {\n    return 128;\n  } else if (n < 256) {\n    return 256;\n  } else if (n < 512) {\n    return 512;\n  } else if (n < 1024) {\n    return 1024;\n  } else {\n    return Math.ceil(n);\n  }\n}\n\ninterface MaskRenderObject {\n  render: DeferredRenderObject;\n  maskTex: Texture | null;\n  maskID: number;\n}\n\nexport class Renderer {\n  readonly glState: GLState;\n\n  private readonly textureMap = new Map<unknown, Texture>();\n  readonly renderPool = new RenderPool();\n  readonly textureReturnBox: TextureTarget[] = [];\n  readonly renderbufferReturnBox: RenderbufferTarget[] = [];\n\n  private readonly indexData = new Uint16Array(indexLimit);\n  private readonly attributeData = new ArrayBuffer(vertexLimit * 14 * 4);\n  private readonly textureUnits: Int32Array;\n\n  private readonly indices = Buffer.index(this.indexData, \"STREAM_DRAW\");\n  private readonly attributes = Buffer.vertex(\n    new Uint32Array(this.attributeData),\n    \"STREAM_DRAW\"\n  );\n  private readonly attrFloat = new Float32Array(this.attributeData, 0);\n  private readonly attrUint = new Uint32Array(this.attributeData, 0);\n\n  private readonly renderProgram: Program;\n  private readonly renderVertexArray = new VertexArray(\n    [\n      {\n        index: 0,\n        buffer: this.attributes,\n        type: \"float\",\n        components: 4,\n        offset: 0,\n        stride: 56,\n      },\n      {\n        index: 1,\n        buffer: this.attributes,\n        type: \"byte\",\n        components: 4,\n        normalized: true,\n        offset: 16,\n        stride: 56,\n      },\n      {\n        index: 2,\n        buffer: this.attributes,\n        type: \"float\",\n        components: 4,\n        offset: 20,\n        stride: 56,\n      },\n      {\n        index: 3,\n        buffer: this.attributes,\n        type: \"float\",\n        components: 4,\n        offset: 36,\n        stride: 56,\n      },\n      {\n        index: 4,\n        buffer: this.attributes,\n        type: \"byte\",\n        components: 4,\n        integer: true,\n        offset: 52,\n        stride: 56,\n      },\n    ],\n    this.indices\n  );\n\n  private readonly defaultFramebuffer: Framebuffer;\n\n  backgroundColor = 0x000000;\n\n  constructor(readonly canvas: Canvas) {\n    this.glState = new GLState(canvas.element, {\n      alpha: false,\n      premultipliedAlpha: false,\n      antialias: false,\n    });\n\n    this.renderProgram = new Program(\n      renderVertexShader,\n      renderFragmentShader(this.glState.maxTextures)\n    );\n    this.textureUnits = new Int32Array(this.glState.maxTextures);\n\n    this.renderProgram.ensure(this.glState);\n    this.renderVertexArray.ensure(this.glState);\n\n    this.defaultFramebuffer = new Framebuffer(\n      new Renderbuffer(canvas.element.width, canvas.element.height, \"rgb\")\n    );\n  }\n\n  renderFrame(root: SceneNode) {\n    const gl = this.glState.gl;\n    const { width, height } = this.canvas;\n    this.renderNode(root, this.defaultFramebuffer, width, height, () => {\n      this.glState.setClearColor(\n        ((this.backgroundColor >>> 16) & 0xff) / 0xff,\n        ((this.backgroundColor >>> 8) & 0xff) / 0xff,\n        ((this.backgroundColor >>> 0) & 0xff) / 0xff,\n        1\n      );\n      gl.clear(gl.COLOR_BUFFER_BIT);\n    });\n  }\n\n  blitFrame() {\n    if (this.glState.gl.isContextLost()) {\n      return;\n    }\n\n    const { width, height } = this.defaultFramebuffer.colorAttachment;\n    const gl = this.glState.gl;\n\n    this.defaultFramebuffer.ensure(this.glState);\n    this.glState.bindFramebuffer(\n      gl.READ_FRAMEBUFFER,\n      this.defaultFramebuffer.framebuffer\n    );\n    this.glState.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n    gl.blitFramebuffer(\n      0,\n      0,\n      width,\n      height,\n      0,\n      0,\n      width,\n      height,\n      gl.COLOR_BUFFER_BIT,\n      gl.NEAREST\n    );\n  }\n\n  renderNode(\n    node: SceneNode,\n    fb: Framebuffer,\n    logicalWidth: number,\n    logicalHeight: number,\n    clearFb: () => void\n  ) {\n    if (this.glState.gl.isContextLost()) {\n      return;\n    }\n\n    const { width, height } = fb.colorAttachment;\n    const bounds = rect.fromValues(0, 0, width, height);\n    const ctx = new RenderContext(bounds);\n    node.render(ctx);\n    const projectionMat = projection(\n      mat2d.create(),\n      logicalWidth,\n      logicalHeight,\n      true\n    );\n\n    this.textureReturnBox.length = 0;\n    this.renderbufferReturnBox.length = 0;\n    try {\n      this.render(ctx.renders, fb, projectionMat, clearFb);\n    } finally {\n      for (const texture of this.textureReturnBox) {\n        this.renderPool.returnTexture(texture);\n      }\n      for (const renderbuffer of this.renderbufferReturnBox) {\n        this.renderPool.returnRenderbuffer(renderbuffer);\n      }\n      this.renderPool.cleanLRU();\n    }\n  }\n\n  private loadTexture(\n    image: HTMLImageElement | HTMLCanvasElement | Texture | null\n  ) {\n    if (image instanceof Texture) {\n      return image;\n    }\n\n    let tex = this.textureMap.get(image);\n    if (!tex) {\n      tex = image ? Texture.image(image) : Texture.WHITE;\n      this.textureMap.set(image, tex);\n    }\n    return tex;\n  }\n\n  private render(\n    renders: DeferredRender[],\n    framebuffer: Framebuffer,\n    projectionMat: mat2d,\n    clearFb: () => void\n  ) {\n    const textures: DeferredRenderTexture[] = [];\n    const filters: DeferredRenderFilter[] = [];\n    const caches: DeferredRenderCache[] = [];\n    const classifyRenders = (renders: DeferredRender[]) => {\n      textures.length = 0;\n      filters.length = 0;\n      caches.length = 0;\n      for (const render of renders) {\n        if (\"texture\" in render) {\n          textures.push(render);\n        } else if (\"filter\" in render) {\n          filters.push(render);\n        } else if (\"cache\" in render) {\n          caches.push(render);\n        }\n      }\n    };\n\n    let resolved: boolean;\n    classifyRenders(renders);\n    do {\n      resolved = false;\n\n      while (caches.length > 0) {\n        this.renderCaches(renders, caches);\n        resolved = true;\n        classifyRenders(renders);\n      }\n      while (textures.length > 0) {\n        this.renderTextures(renders, textures);\n        resolved = true;\n        classifyRenders(renders);\n      }\n      while (filters.length > 0) {\n        this.renderFilters(renders, filters);\n        resolved = true;\n        classifyRenders(renders);\n      }\n    } while (resolved);\n    this.renderObjects(\n      renders as DeferredRenderObject[],\n      framebuffer,\n      projectionMat,\n      clearFb\n    );\n  }\n\n  private renderTextures(\n    renders: DeferredRender[],\n    textures: DeferredRenderTexture[]\n  ) {\n    const gl = this.glState.gl;\n    let atlas: Atlas | null = null;\n    let atlasContext: RenderContext | null = null;\n    const atlasItems = new Map<DeferredRenderTexture, rect>();\n\n    const flush = () => {\n      if (!atlas || !atlasContext || atlasItems.size === 0) {\n        return;\n      }\n      const projectionMat = projection(\n        mat2d.create(),\n        atlas.width,\n        atlas.height,\n        false\n      );\n\n      const texItem = this.renderPool.takeTexture(atlas.width, atlas.height);\n      const rbItem = this.renderPool.takeRenderbuffer(\n        atlas.width,\n        atlas.height\n      );\n      this.textureReturnBox.push(texItem);\n      this.renderbufferReturnBox.push(rbItem);\n\n      this.render(\n        atlasContext.renders,\n        rbItem.framebuffer,\n        projectionMat,\n        () => {\n          this.glState.setClearColor(0, 0, 0, 0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n      );\n\n      texItem.framebuffer.ensure(this.glState);\n      this.glState.bindFramebuffer(\n        gl.READ_FRAMEBUFFER,\n        rbItem.framebuffer.framebuffer\n      );\n      this.glState.bindFramebuffer(\n        gl.DRAW_FRAMEBUFFER,\n        texItem.framebuffer.framebuffer\n      );\n      gl.blitFramebuffer(\n        0,\n        0,\n        atlas.width,\n        atlas.height,\n        0,\n        0,\n        atlas.width,\n        atlas.height,\n        gl.COLOR_BUFFER_BIT,\n        gl.NEAREST\n      );\n\n      for (const [item, bounds] of atlasItems) {\n        const ctx = new RenderContext(null);\n        ctx.transform = item.transform;\n        item.texture.then(ctx, texItem.texture, bounds);\n\n        const index = renders.indexOf(item);\n        renders.splice(index, 1, ...ctx.renders);\n      }\n    };\n\n    for (const render of textures) {\n      const { bounds, paddings, scale, translate, fn } = render.texture;\n\n      const ctx = new RenderContext(null);\n      const renderView = mat2d.fromTranslation(mat2d.create(), [\n        paddings[0] + translate[0] - Math.floor(translate[0]),\n        paddings[1] + translate[1] - Math.floor(translate[1]),\n      ]);\n      mat2d.scale(renderView, renderView, scale);\n      mat2d.translate(renderView, renderView, [-bounds[0], -bounds[1]]);\n\n      ctx.pushTransform(renderView);\n      fn(ctx);\n      ctx.popTransform();\n\n      const renderBounds = ctx.bounds;\n      // Left padding in renderBounds[0], add right paddings manually.\n      const width = Math.ceil(\n        Math.abs(renderBounds[0]) + renderBounds[2] + paddings[0]\n      );\n      const height = Math.ceil(\n        Math.abs(renderBounds[1]) + renderBounds[3] + paddings[1]\n      );\n\n      let atlasBounds: rect | null;\n      if (\n        !atlas ||\n        !atlasContext ||\n        !(atlasBounds = atlas.add(width, height))\n      ) {\n        flush();\n\n        atlas = new Atlas(\n          Math.max(atlasSize, renderTextureSize(width)),\n          Math.max(atlasSize, renderTextureSize(height))\n        );\n        atlasContext = new RenderContext(null);\n        atlasItems.clear();\n        atlasBounds = atlas.add(width, height)!;\n      }\n\n      mat2d.fromTranslation(renderView, [atlasBounds[0], atlasBounds[1]]);\n      atlasContext.pushTransform(renderView);\n      atlasContext.renderContext(ctx);\n      atlasContext.popTransform();\n\n      atlasItems.set(render, atlasBounds);\n    }\n    flush();\n  }\n\n  private renderCaches(\n    renders: DeferredRender[],\n    caches: DeferredRenderCache[]\n  ) {\n    const gl = this.glState.gl;\n    for (const render of caches) {\n      const { texture, bounds, view, then } = render.cache;\n\n      const width = renderTextureSize(bounds[2]);\n      const height = renderTextureSize(bounds[3]);\n      const cacheTexture = this.renderPool.takeTexture(width, height);\n\n      const tmpFramebuffer = new Framebuffer(texture);\n      try {\n        tmpFramebuffer.ensure(this.glState);\n        cacheTexture.framebuffer.ensure(this.glState);\n\n        this.glState.bindFramebuffer(\n          gl.READ_FRAMEBUFFER,\n          tmpFramebuffer.framebuffer\n        );\n        this.glState.bindFramebuffer(\n          gl.DRAW_FRAMEBUFFER,\n          cacheTexture.framebuffer.framebuffer\n        );\n        gl.blitFramebuffer(\n          bounds[0],\n          bounds[1],\n          bounds[0] + bounds[2],\n          bounds[1] + bounds[3],\n          0,\n          0,\n          bounds[2],\n          bounds[3],\n          gl.COLOR_BUFFER_BIT,\n          gl.NEAREST\n        );\n      } finally {\n        tmpFramebuffer.delete();\n      }\n\n      then(\n        new CachedRender(\n          this.renderPool,\n          cacheTexture,\n          view,\n          rect.fromValues(0, 0, bounds[2], bounds[3])\n        )\n      );\n\n      const index = renders.indexOf(render);\n      renders.splice(index, 1);\n    }\n  }\n\n  private renderFilters(\n    renders: DeferredRender[],\n    filters: DeferredRenderFilter[]\n  ) {\n    let atlas: Atlas | null = null;\n    let filter: Filter | null = null;\n    const filterInputs = new Map<DeferredRenderFilter, FilterInput>();\n\n    const flush = () => {\n      if (!atlas || !filter || filterInputs.size === 0) {\n        return;\n      }\n      const target = this.renderPool.takeTexture(atlas.width, atlas.height);\n      this.textureReturnBox.push(target);\n\n      filter.apply(this, Array.from(filterInputs.values()), target);\n\n      for (const [render, { outBounds }] of filterInputs) {\n        const ctx = new RenderContext(null);\n        ctx.transform = render.transform;\n        render.filter.then(ctx, target.texture, outBounds);\n\n        const index = renders.indexOf(render);\n        renders.splice(index, 1, ...ctx.renders);\n      }\n\n      atlas = null;\n      filterInputs.clear();\n    };\n\n    const filterGroups = new Map<Filter, DeferredRenderFilter[]>();\n    for (const render of filters) {\n      const filter = render.filter.instance.filter;\n      let group = filterGroups.get(filter);\n      if (!group) {\n        group = [];\n        filterGroups.set(filter, group);\n      }\n      group.push(render);\n    }\n\n    for (const [groupFilter, renders] of filterGroups) {\n      filter = groupFilter;\n      for (const render of renders) {\n        const { texture, bounds, instance } = render.filter;\n        let atlasBounds: rect | null;\n        if (!atlas || !(atlasBounds = atlas.add(bounds[2], bounds[3]))) {\n          flush();\n\n          atlas = new Atlas(\n            Math.max(atlasSize, renderTextureSize(bounds[2])),\n            Math.max(atlasSize, renderTextureSize(bounds[3]))\n          );\n          atlasBounds = atlas.add(bounds[2], bounds[3])!;\n        }\n\n        const input: FilterInput = {\n          instance,\n          texture,\n          inBounds: bounds,\n          outBounds: atlasBounds,\n        };\n        filterInputs.set(render, input);\n      }\n      flush();\n    }\n  }\n\n  private renderObjects(\n    objects: DeferredRenderObject[],\n    framebuffer: Framebuffer,\n    projectionMat: mat2d,\n    clearFb: () => void\n  ) {\n    const gl = this.glState.gl;\n    const { width, height } = framebuffer.colorAttachment;\n    this.glState.setViewport(0, 0, width, height);\n\n    const returnRbs: RenderbufferTarget[] = [];\n    const returnTexs: TextureTarget[] = [];\n    try {\n      interface MaskRenders {\n        renders: DeferredRenderObject[];\n        bounds: rect;\n      }\n      const masks = new Map<unknown, MaskRenders>();\n      const renders: DeferredRenderObject[] = [];\n      for (const render of objects) {\n        if (!render.transform.renderMask) {\n          renders.push(render);\n          continue;\n        }\n\n        const token = render.transform.renderMask;\n        const maskRenders = masks.get(token);\n        if (!maskRenders) {\n          const bounds = rect.create();\n          rect.apply(bounds, render.object.bounds, render.transform.view);\n          masks.set(token, {\n            renders: [render],\n            bounds,\n          });\n        } else {\n          rect.apply(tmpRect, render.object.bounds, render.transform.view);\n          rect.union(maskRenders.bounds, maskRenders.bounds, tmpRect);\n          maskRenders.renders.push(render);\n        }\n      }\n\n      interface MaskGroup {\n        target: TextureTarget;\n        nextID: number;\n        renders: MaskRenderObject[];\n        bounds: rect[];\n      }\n      interface MaskTex {\n        texture: Texture;\n        id: number;\n      }\n      const maskTextures = new Map<unknown, MaskTex>();\n      const maskGroups: MaskGroup[] = [];\n      for (const [token, { bounds, renders }] of masks) {\n        let group: MaskGroup | null = null;\n        for (const g of maskGroups) {\n          let overlapped = false;\n          for (const b of g.bounds) {\n            if (rect.intersects(b, bounds)) {\n              overlapped = true;\n              break;\n            }\n          }\n          if (!overlapped && g.nextID < 0x100) {\n            group = g;\n            break;\n          }\n        }\n        if (!group) {\n          group = {\n            target: this.renderPool.takeTexture(width, height),\n            nextID: 1,\n            renders: [],\n            bounds: [],\n          };\n          returnTexs.push(group.target);\n          maskGroups.push(group);\n        }\n\n        const id = group.nextID++;\n        maskTextures.set(token, { texture: group.target.texture, id });\n        group.bounds.push(bounds);\n        for (const render of renders) {\n          group.renders.push({ maskTex: null, maskID: id, render });\n        }\n      }\n\n      if (maskGroups.length > 0) {\n        const maskFb = this.renderPool.takeRenderbuffer(width, height);\n        returnRbs.push(maskFb);\n\n        maskFb.framebuffer.ensure(this.glState);\n        this.glState.setClearColor(0, 0, 0, 0);\n\n        for (const group of maskGroups) {\n          this.glState.bindFramebuffer(\n            gl.FRAMEBUFFER,\n            maskFb.framebuffer.framebuffer\n          );\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          this.doRenderObjects(group.renders, true, projectionMat);\n\n          group.target.framebuffer.ensure(this.glState);\n          this.glState.bindFramebuffer(\n            gl.READ_FRAMEBUFFER,\n            maskFb.framebuffer.framebuffer\n          );\n          this.glState.bindFramebuffer(\n            gl.DRAW_FRAMEBUFFER,\n            group.target.framebuffer.framebuffer\n          );\n          gl.blitFramebuffer(\n            0,\n            0,\n            width,\n            height,\n            0,\n            0,\n            width,\n            height,\n            gl.COLOR_BUFFER_BIT,\n            gl.NEAREST\n          );\n        }\n      }\n\n      framebuffer.ensure(this.glState);\n      this.glState.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.framebuffer);\n      clearFb();\n\n      const idRenders: MaskRenderObject[] = [];\n      for (const render of renders) {\n        const maskToken =\n          render.transform.useMask[render.transform.useMask.length - 1];\n        const tex = maskTextures.get(maskToken);\n        if (maskToken && !tex) {\n          // Masked by a off-screen mask: skip the render.\n          continue;\n        }\n        idRenders.push({\n          maskTex: tex?.texture ?? null,\n          maskID: tex?.id ?? 0,\n          render,\n        });\n      }\n      this.doRenderObjects(idRenders, false, projectionMat);\n    } finally {\n      for (const i of returnRbs) {\n        this.renderPool.returnRenderbuffer(i);\n      }\n      for (const i of returnTexs) {\n        this.renderPool.returnTexture(i);\n      }\n    }\n  }\n\n  private doRenderObjects(\n    objects: MaskRenderObject[],\n    renderMask: boolean,\n    projectionMat: mat2d\n  ) {\n    const gl = this.glState.gl;\n\n    this.glState.enable(gl.BLEND);\n    this.glState.setBlendEquation(gl.FUNC_ADD);\n    this.glState.setBlendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    const projA = projectionMat[0];\n    const projB = projectionMat[1];\n    const projC = projectionMat[2];\n    const projD = projectionMat[3];\n    const projTX = projectionMat[4];\n    const projTY = projectionMat[5];\n\n    let numVertex = 0;\n    let numIndex = 0;\n    const textures: Texture[] = [Texture.WHITE];\n    const flush = () => {\n      if (numIndex === 0) {\n        return;\n      }\n\n      this.indices.update(this.glState, 0, numIndex);\n      this.attributes.update(this.glState, 0, numVertex * 14);\n\n      for (const tex of textures) {\n        tex.ensure(this.glState);\n      }\n      const boundUnits = this.glState.bindTextures(\n        textures.map((tex) => tex.texture)\n      );\n      this.textureUnits.fill(boundUnits[0]);\n      this.textureUnits.set(boundUnits);\n      this.renderProgram.uniform(\n        this.glState,\n        \"uTextures[0]\",\n        this.textureUnits\n      );\n      this.glState.useProgram(this.renderProgram.program);\n      this.renderVertexArray.bind(this.glState);\n      gl.drawElements(gl.TRIANGLES, numIndex, gl.UNSIGNED_SHORT, 0);\n\n      numVertex = 0;\n      numIndex = 0;\n      textures.length = 1;\n    };\n\n    const indexData = this.indices.data;\n    const attrFloat = this.attrFloat;\n    const attrUint = this.attrUint;\n    for (const { render, maskTex, maskID } of objects) {\n      const { kind, vertices, indices, uvMatrix, colors } = render.object;\n      const objectNumVertex = vertices.length / 2;\n      const objectNumIndex = indices.length;\n      if (numVertex + objectNumVertex >= vertexLimit) {\n        flush();\n      } else if (numIndex + objectNumIndex >= indexLimit) {\n        flush();\n      }\n\n      const { view, colorMul, colorAdd } = render.transform;\n\n      const texture = this.loadTexture(render.object.texture);\n      let textureIndex = textures.indexOf(texture);\n      let maskTextureIndex = maskTex ? textures.indexOf(maskTex) : -1;\n      if (textureIndex === -1) {\n        if (textures.length >= this.glState.maxTextures) {\n          flush();\n        }\n        textureIndex = textures.push(texture) - 1;\n      }\n      if (maskTex && maskTextureIndex === -1) {\n        if (textures.length >= this.glState.maxTextures) {\n          flush();\n          textureIndex = textures.push(texture) - 1;\n        }\n        maskTextureIndex = textures.push(maskTex) - 1;\n      }\n\n      for (let i = 0; i < objectNumIndex; i++) {\n        indexData[numIndex + i] = indices[i] + numVertex;\n      }\n\n      const fillMode = render.object.fillMode + textureIndex * 4;\n      let maskMode = 0;\n      if (renderMask) {\n        maskMode = 1;\n      } else if (maskID > 0) {\n        maskMode = 2 + maskTextureIndex * 4;\n      }\n      const mode = maskID * 0x10000 + maskMode * 0x100 + fillMode;\n\n      // Round vertices to nearest pixel in view space to maintain temporal stability.\n      // Do not do this for texts, since they have intricate contours.\n      const roundVertex = kind === \"shape\";\n\n      const base = numVertex * 14;\n      const viewA = view[0];\n      const viewB = view[1];\n      const viewC = view[2];\n      const viewD = view[3];\n      const viewTX = view[4];\n      const viewTY = view[5];\n      const uvA = uvMatrix[0];\n      const uvB = uvMatrix[1];\n      const uvC = uvMatrix[2];\n      const uvD = uvMatrix[3];\n      const uvTX = uvMatrix[4];\n      const uvTY = uvMatrix[5];\n      const colorMulR = colorMul[0];\n      const colorMulG = colorMul[1];\n      const colorMulB = colorMul[2];\n      const colorMulA = colorMul[3];\n      const colorAddR = colorAdd[0] / 0xff;\n      const colorAddG = colorAdd[1] / 0xff;\n      const colorAddB = colorAdd[2] / 0xff;\n      const colorAddA = colorAdd[3] / 0xff;\n\n      for (let i = 0; i < objectNumVertex; i++) {\n        const x = vertices[i * 2];\n        const y = vertices[i * 2 + 1];\n        const color = colors[i];\n\n        let vx = viewA * x + viewC * y + viewTX;\n        let vy = viewB * x + viewD * y + viewTY;\n        if (roundVertex) {\n          const samples = Math.max(1, this.glState.maxSamples);\n          vx = Math.round(vx * samples) / samples;\n          vy = Math.round(vy * samples) / samples;\n        }\n        attrFloat[base + i * 14 + 0] = projA * vx + projC * vy + projTX;\n        attrFloat[base + i * 14 + 1] = projB * vx + projD * vy + projTY;\n\n        attrFloat[base + i * 14 + 2] = uvA * x + uvC * y + uvTX;\n        attrFloat[base + i * 14 + 3] = uvB * x + uvD * y + uvTY;\n\n        attrUint[base + i * 14 + 4] = color;\n\n        attrFloat[base + i * 14 + 5] = colorMulR;\n        attrFloat[base + i * 14 + 6] = colorMulG;\n        attrFloat[base + i * 14 + 7] = colorMulB;\n        attrFloat[base + i * 14 + 8] = colorMulA;\n\n        attrFloat[base + i * 14 + 9] = colorAddR;\n        attrFloat[base + i * 14 + 10] = colorAddG;\n        attrFloat[base + i * 14 + 11] = colorAddB;\n        attrFloat[base + i * 14 + 12] = colorAddA;\n\n        attrUint[base + i * 14 + 13] = mode;\n      }\n\n      numVertex += objectNumVertex;\n      numIndex += objectNumIndex;\n    }\n    flush();\n  }\n}\n","export const renderVertexShader = `\n#version 300 es\n\nlayout(location=0) in vec4 aVertex;\nlayout(location=1) in vec4 aColor;\nlayout(location=2) in vec4 aColorMul;\nlayout(location=3) in vec4 aColorAdd;\nlayout(location=4) in uvec4 aMode;\n\nout vec2 vTextureCoords;\nout vec4 vColor;\nout vec4 vColorMul;\nout vec4 vColorAdd;\nflat out uvec4 vMode;\n\nvoid main(void) {\n    vec2 pos = aVertex.xy;\n    vec2 uv = aVertex.zw;\n    gl_Position = vec4(pos, 0.0, 1.0);\n\n    vTextureCoords = uv;\n    vColor = aColor;\n    vColorMul = aColorMul;\n    vColorAdd = aColorAdd;\n    vMode = aMode;\n}\n`;\n\nexport const renderFragmentShader = (maxTextures: number) => `\n#version 300 es\nprecision highp float;\n\nin vec2 vTextureCoords;\nin vec4 vColor;\nin vec4 vColorMul;\nin vec4 vColorAdd;\nflat in uvec4 vMode;\nout vec4 fragColor;\n\nuniform sampler2D uTextures[${maxTextures}];\n\nvec4 sampleTex(int id, vec2 coords) {\n  vec4 color;\n  ${new Array(maxTextures)\n    .fill(0)\n    .map(\n      (_, i) =>\n        `\n      if (id == ${i}) {\n        color = texture(uTextures[${i}], coords);\n      }\n      `\n    )\n    .join(\"\\n\")}\n  return color;\n}\n\nvec4 getTexel(int id, ivec2 coords) {\n  vec4 color;\n  ${new Array(maxTextures)\n    .fill(0)\n    .map(\n      (_, i) =>\n        `\n      if (id == ${i}) {\n        color = texelFetch(uTextures[${i}], coords, 0);\n      }\n      `\n    )\n    .join(\"\\n\")}\n  return color;\n}\n\nvoid main(void) {\n    int fillMode = int(vMode.x) % 4;\n    int texId = int(vMode.x) / 4;\n    int maskMode = int(vMode.y) % 4;\n    int maskTexId = int(vMode.y) / 4;\n    int maskID = int(vMode.z);\n\n    vec2 coords;\n    if (fillMode == 1) {\n        coords = vec2(vTextureCoords.x, 0.0);\n    } else if (fillMode == 2) {\n        coords = vec2(length(vTextureCoords * 2.0 - 1.0), 0.0);\n    } else {\n        coords = vTextureCoords;\n    }\n\n    vec4 tex = sampleTex(texId, coords);\n    vec4 color = (tex * vColor * vec4(vColorMul.rgb, 1.0)) * vColorMul.a;\n    color += vColorAdd * color.a;\n\n    if (maskMode == 1) {\n      color = vec4(float(maskID) / 255.0, 0.0, 0.0, 1.0);\n    } else if (maskMode == 2) {\n      vec4 mask = getTexel(maskTexId, ivec2(gl_FragCoord.xy));\n      if (maskID == int(mask.r * 255.0)) {\n        color = color * mask.a;\n      } else {\n        color = vec4(0.0);\n      }\n    }\n\n    color = trunc(color * 255.0) / 255.0;\n    fragColor = color;\n}\n`;\n","import { Signal } from \"./signal\";\n\nexport class Ticker {\n  readonly onFrame = new Signal<() => void>();\n  readonly onRender = new Signal<() => void>();\n\n  private animationHandle?: number;\n  private readonly channel = new MessageChannel();\n  private readonly targetMS: number;\n  private lastTimestamp = 0;\n  private needRender = false;\n\n  constructor(readonly fps: number) {\n    this.targetMS = 1000 / fps;\n    this.channel.port1.onmessage = () => {\n      this._onFrame();\n    };\n  }\n\n  begin() {\n    this.end();\n    this.animationHandle = requestAnimationFrame(this._onRender);\n  }\n\n  end() {\n    if (this.animationHandle != null) {\n      cancelAnimationFrame(this.animationHandle);\n      this.animationHandle = undefined;\n    }\n  }\n\n  private _onFrame = () => {\n    try {\n      this.onFrame.emit();\n    } catch (e) {\n      console.error(e);\n    }\n    this.needRender = true;\n  };\n\n  private _onRender = (timestamp: DOMHighResTimeStamp) => {\n    const last = this.lastTimestamp;\n    if (timestamp - last >= this.targetMS) {\n      this.lastTimestamp = timestamp - ((timestamp - last) % this.targetMS);\n      this.channel.port2.postMessage(null);\n    }\n\n    if (this.needRender) {\n      try {\n        this.onRender.emit();\n      } catch (e) {\n        console.error(e);\n      }\n      this.needRender = false;\n    }\n\n    this.animationHandle = requestAnimationFrame(this._onRender);\n  };\n}\n","import { vec2 } from \"gl-matrix\";\nimport { DisplayObject } from \"./DisplayObject\";\nimport { DisplayObjectContainer } from \"./DisplayObjectContainer\";\nimport { InteractiveObject } from \"./InteractiveObject\";\nimport { Properties } from \"../../__internal/Properties\";\nimport { Canvas } from \"../../../internal/render2/Canvas\";\nimport { Renderer } from \"../../../internal/render2/Renderer\";\nimport { Ticker } from \"../../../internal/Ticker\";\nimport { Event } from \"../events/Event\";\nimport { MouseEvent } from \"../events/MouseEvent\";\nimport { KeyboardEvent } from \"../events/KeyboardEvent\";\nimport { Keyboard } from \"../ui/Keyboard\";\nimport { runFrame } from \"./frame\";\n\nconst tmpVec2 = vec2.create();\n\ninterface Constructible {\n  __constructFrame(): void;\n}\n\nexport class Stage extends DisplayObjectContainer {\n  static __current: Stage | null = null;\n\n  readonly __canvas: Canvas;\n  readonly __ticker: Ticker;\n  readonly __renderer: Renderer;\n\n  __displayListDirty = false;\n  readonly __displayList: DisplayObject[] = [];\n  readonly __constructionQueue: Constructible[] = [];\n\n  __mousePosition = vec2.create();\n  __mouseOn: InteractiveObject | null = null;\n  __mouseTrackTarget: InteractiveObject | null = null;\n\n  focus: InteractiveObject | null = null;\n  private __quality: string = \"HIGH\";\n\n  get loaderInfo() {\n    return {\n      bytesTotal: 100,\n      bytesLoaded: 100,\n      url: window.location.href,\n    };\n  }\n\n  get stage() {\n    return this;\n  }\n\n  get quality() {\n    return this.__quality;\n  }\n  set quality(value) {\n    if (this.__quality === value) {\n      return;\n    }\n    this.__quality = value;\n    if (this.__quality === \"HIGH\") {\n      this.__renderer.glState.sampleLimit = 4;\n    } else {\n      this.__renderer.glState.sampleLimit = 0;\n    }\n    this.__renderer.glState.resetRenderState();\n\n    // Re-render after resetting render state\n    this.__onRender();\n    this.__renderer.renderFrame(this.__node);\n  }\n\n  constructor(properties?: Properties) {\n    super();\n\n    let fps = 60;\n    let backgroundColor = 0x000000;\n    let width = 600;\n    let height = 400;\n    if (properties) {\n      ({ width, height, backgroundColor, fps } = properties);\n      width /= 20;\n      height /= 20;\n    }\n\n    this.__canvas = new Canvas(width, height);\n    this.__renderer = new Renderer(this.__canvas);\n    this.__renderer.backgroundColor = backgroundColor;\n\n    this.__ticker = new Ticker(fps);\n    this.__ticker.onFrame.subscribe(this.__onFrame);\n    this.__ticker.onRender.subscribe(this.__doRender);\n    this.__ticker.begin();\n\n    const canvas = this.__canvas.element;\n    canvas.addEventListener(\"mouseenter\", this.#handleMouseEvent);\n    canvas.addEventListener(\"mousemove\", this.#handleMouseEvent);\n    canvas.addEventListener(\"mousedown\", this.#handleMouseEvent);\n    canvas.addEventListener(\"mouseup\", this.#handleMouseEvent);\n    canvas.addEventListener(\"mouseleave\", this.#handleMouseEvent);\n    canvas.addEventListener(\"click\", this.#handleMouseEvent);\n    canvas.addEventListener(\"keydown\", this.#handleKeyboardEvent);\n    canvas.addEventListener(\"keyup\", this.#handleKeyboardEvent);\n    canvas.addEventListener(\"blur\", this.#handleFocusEvent);\n  }\n\n  __onFrame = this.__withContext(() => {\n    runFrame(true, this);\n  });\n\n  __doRender = this.__withContext(() => {\n    this.__onRender();\n    this.__renderer.renderFrame(this.__node);\n    this.__renderer.blitFrame();\n  });\n\n  __withContext<T extends Function>(fn: T): T {\n    return (((...args: unknown[]) => {\n      const p = Stage.__current;\n      Stage.__current = this;\n      try {\n        return fn(...args);\n      } finally {\n        Stage.__current = p;\n      }\n    }) as unknown) as T;\n  }\n\n  __hitTestObject(pt: vec2): InteractiveObject | null {\n    this.__node.ensureLayout();\n\n    const hitTest = (target: InteractiveObject): InteractiveObject | null => {\n      if (!(target instanceof DisplayObjectContainer)) {\n        return target;\n      }\n\n      const children = target.__children;\n      let hitSelf = false;\n      for (let i = children.length - 1; i >= 0; i--) {\n        const child = children[i];\n        if (!child.visible) {\n          continue;\n        }\n\n        if (!child.__node.hitTest(pt, false)) {\n          continue;\n        }\n\n        if (child instanceof InteractiveObject) {\n          const hit = hitTest(child);\n          if (hit) {\n            return hit;\n          }\n        } else {\n          hitSelf = true;\n        }\n      }\n      return hitSelf ? target : null;\n    };\n    return hitTest(this);\n  }\n\n  #handleMouseEvent = this.__withContext(\n    (sourceEvent: globalThis.MouseEvent) => {\n      this.__canvas.resolveCoords(\n        this.__mousePosition,\n        sourceEvent.clientX,\n        sourceEvent.clientY\n      );\n      let target = this.__hitTestObject(this.__mousePosition);\n\n      const dispatchMouseEvent = (\n        type: string,\n        target: DisplayObject | null\n      ) => {\n        if (!target) {\n          return;\n        }\n        target.__globalToLocal(tmpVec2, this.__mousePosition, false);\n\n        const event = new MouseEvent(type, true, false);\n        event.buttonDown = sourceEvent.buttons !== 0;\n        event.localX = tmpVec2[0];\n        event.localY = tmpVec2[1];\n        event.stageX = this.__mousePosition[0];\n        event.stageY = this.__mousePosition[1];\n        target.dispatchEvent(event);\n      };\n\n      if (this.__mouseTrackTarget) {\n        if (this.__mouseTrackTarget.stage !== this) {\n          this.__mouseTrackTarget = null;\n        }\n        target = this.__mouseTrackTarget;\n      }\n      if (sourceEvent.type === \"mouseleave\") {\n        target = null;\n      }\n\n      if (this.__mouseOn !== target) {\n        dispatchMouseEvent(MouseEvent.MOUSE_OUT, this.__mouseOn);\n        this.__mouseOn = target;\n        dispatchMouseEvent(MouseEvent.MOUSE_OVER, this.__mouseOn);\n      }\n\n      switch (sourceEvent.type) {\n        case \"mousemove\":\n          dispatchMouseEvent(MouseEvent.MOUSE_MOVE, this.__mouseOn);\n          break;\n        case \"mousedown\":\n          dispatchMouseEvent(MouseEvent.MOUSE_DOWN, this.__mouseOn);\n          break;\n        case \"mouseup\":\n          dispatchMouseEvent(MouseEvent.MOUSE_UP, this.__mouseOn);\n          break;\n        case \"click\":\n          dispatchMouseEvent(MouseEvent.CLICK, this.__mouseOn);\n          break;\n      }\n\n      if (this.__mouseOn) {\n        this.__canvas.cursor = this.__mouseOn.__isPointerCursor\n          ? \"pointer\"\n          : \"default\";\n      } else {\n        this.__canvas.cursor = \"default\";\n      }\n    }\n  );\n\n  #handleKeyboardEvent = this.__withContext(\n    (sourceEvent: globalThis.KeyboardEvent) => {\n      const keyCode =\n        Keyboard.codeMap[sourceEvent.key] ?? Keyboard.codeMap[sourceEvent.code];\n      if (!keyCode) {\n        return;\n      }\n\n      let event: KeyboardEvent;\n      switch (sourceEvent.type) {\n        case \"keydown\":\n          event = new KeyboardEvent(KeyboardEvent.KEY_DOWN, true, false);\n          break;\n        case \"keyup\":\n          event = new KeyboardEvent(KeyboardEvent.KEY_UP, true, false);\n          break;\n        default:\n          return;\n      }\n      event.keyCode = keyCode;\n      (this.focus ?? this).dispatchEvent(event);\n    }\n  );\n\n  #handleFocusEvent = this.__withContext(\n    (sourceEvent: globalThis.FocusEvent) => {\n      let event: Event;\n      switch (sourceEvent.type) {\n        case \"blur\":\n          event = new Event(Event.DEACTIVATE, true, false);\n          break;\n        default:\n          return;\n      }\n      this.dispatchEvent(event);\n    }\n  );\n\n  __ensureDisplayList() {\n    if (!this.__displayListDirty) {\n      return;\n    }\n\n    this.__displayList.length = 1;\n    this.__displayList[0] = this;\n\n    let i = 0;\n    while (i < this.__displayList.length) {\n      const children = this.__displayList[i].__node.children;\n      for (let j = 0; j < children.length; j++) {\n        this.__displayList.push(children[j].object as DisplayObject);\n      }\n      i++;\n    }\n\n    this.__displayListDirty = false;\n  }\n}\n","import { DisplayObject } from \"./DisplayObject\";\nimport { InteractiveObject } from \"./InteractiveObject\";\nimport {\n  ButtonInstance,\n  ButtonState,\n} from \"../../../internal/character/ButtonInstance\";\nimport { MouseEvent } from \"../events\";\nimport { SoundContext } from \"../media/context\";\n\nexport class SimpleButton extends InteractiveObject {\n  static __character?: ButtonInstance;\n\n  declare __character: ButtonInstance | null;\n\n  constructor() {\n    super();\n\n    this.__state = ButtonState.Up;\n    this.__states = [\n      new DisplayObject(),\n      new DisplayObject(),\n      new DisplayObject(),\n      new DisplayObject(),\n    ];\n\n    for (const obj of this.__states) {\n      obj.__node.setParent(this.__node, this.__node.children.length);\n    }\n\n    this.__character =\n      (this.constructor as typeof SimpleButton).__character ?? null;\n    this.__character?.applyTo(this);\n    this.__node.buttonState = this.__state;\n\n    this.addEventListener(MouseEvent.MOUSE_OVER, this.#handleMouseEvent);\n    this.addEventListener(MouseEvent.MOUSE_OUT, this.#handleMouseEvent);\n    this.addEventListener(MouseEvent.MOUSE_DOWN, this.#handleMouseEvent);\n    this.addEventListener(MouseEvent.MOUSE_UP, this.#handleMouseEvent);\n    this.addEventListener(MouseEvent.MOUSE_MOVE, this.#handleMouseEvent);\n  }\n\n  readonly __soundContext = new SoundContext();\n  private __state = ButtonState.Up;\n  private __states: DisplayObject[];\n\n  get __activeState() {\n    switch (this.__state) {\n      case ButtonState.Up:\n        return this.upState;\n      case ButtonState.Over:\n        return this.overState;\n      case ButtonState.Down:\n        return this.downState;\n    }\n  }\n\n  get upState() {\n    return this.__states[ButtonState.Up];\n  }\n  set upState(value) {\n    this.__states[ButtonState.Up].__node.setParent(null, 0);\n    this.__states[ButtonState.Up] = value;\n    value.__node.setParent(this.__node, ButtonState.Up);\n  }\n\n  get overState() {\n    return this.__states[ButtonState.Over];\n  }\n  set overState(value) {\n    this.__states[ButtonState.Over].__node.setParent(null, 0);\n    this.__states[ButtonState.Over] = value;\n    value.__node.setParent(this.__node, ButtonState.Over);\n  }\n\n  get downState() {\n    return this.__states[ButtonState.Down];\n  }\n  set downState(value) {\n    this.__states[ButtonState.Down].__node.setParent(null, 0);\n    this.__states[ButtonState.Down] = value;\n    value.__node.setParent(this.__node, ButtonState.Down);\n  }\n\n  get hitTestState() {\n    return this.__states[ButtonState.HitTest];\n  }\n  set hitTestState(value) {\n    this.__states[ButtonState.HitTest].__node.setParent(null, 0);\n    this.__states[ButtonState.HitTest] = value;\n    value.__node.setParent(this.__node, ButtonState.HitTest);\n  }\n\n  trackAsMenu = false;\n\n  useHandCursor = true;\n\n  get __isPointerCursor() {\n    return this.useHandCursor || super.__isPointerCursor;\n  }\n\n  #handleMouseEvent = (event: MouseEvent) => {\n    let newState: ButtonState = this.__state;\n    let isMouseDown = event.type !== MouseEvent.MOUSE_OUT && event.buttonDown;\n    if (event.type === MouseEvent.MOUSE_OUT) {\n      newState = ButtonState.Up;\n    } else if (\n      event.buttonDown &&\n      this.hitTestPoint(event.stageX, event.stageY)\n    ) {\n      newState = ButtonState.Down;\n    } else {\n      newState = ButtonState.Over;\n    }\n\n    const stage = this.stage;\n\n    if (this.__state !== newState) {\n      const oldState = this.__state;\n      this.__state = newState;\n      this.__node.buttonState = newState;\n      this.__character?.instantiateState(this, newState);\n      this.__character?.stateTransition(this, oldState, newState);\n      if (stage) {\n        stage.__displayListDirty = true;\n      }\n    }\n\n    if (!this.trackAsMenu && stage) {\n      if (isMouseDown) {\n        stage.__mouseTrackTarget = this;\n      } else if (stage.__mouseTrackTarget === this) {\n        stage.__mouseTrackTarget = null;\n      }\n    }\n  };\n}\n","import { mat2d, vec4 } from \"gl-matrix\";\nimport { AVMObject } from \"../../__internal/avm2/AVMObject\";\nimport { DisplayObject } from \"./DisplayObject\";\nimport { Matrix } from \"../geom/Matrix\";\nimport { ColorTransform } from \"../geom/ColorTransform\";\nimport { Rectangle } from \"../geom/Rectangle\";\nimport { Point } from \"../geom/Point\";\nimport { SceneNode } from \"../../../internal/render2/SceneNode\";\nimport { TextureTarget } from \"../../../internal/render2/gl/targets\";\nimport { Renderer } from \"../../../internal/render2/Renderer\";\nimport { Stage } from \"./Stage\";\nimport { rect } from \"../../../internal/math/rect\";\nimport { RenderObject } from \"../../../internal/render2/RenderObject\";\n\nexport class BitmapData extends AVMObject {\n  private __root = new SceneNode(null);\n  private __needRender = false;\n  private __needPixel = false;\n  private __pixels: Uint32Array | null = null;\n  __target: TextureTarget | null = null;\n  __renderer: Renderer | null = null;\n\n  readonly rect: Rectangle;\n\n  constructor(\n    readonly width: number,\n    readonly height: number,\n    readonly transparent = true,\n    readonly fillColor = 0xffffffff\n  ) {\n    super();\n    this.rect = new Rectangle(0, 0, width, height);\n  }\n\n  draw(\n    source: DisplayObject,\n    matrix?: Matrix,\n    colorTransform?: ColorTransform,\n    blendMode?: String\n  ) {\n    const sourceNode = source.__node.clone();\n    sourceNode.visible = true;\n    if (matrix) {\n      mat2d.copy(sourceNode.transformLocal, matrix.__value);\n    } else {\n      mat2d.identity(sourceNode.transformLocal);\n    }\n    if (colorTransform) {\n      vec4.copy(sourceNode.colorTransformLocalMul, colorTransform.__mul);\n      vec4.copy(sourceNode.colorTransformLocalAdd, colorTransform.__add);\n    } else {\n      vec4.set(sourceNode.colorTransformLocalMul, 1, 1, 1, 1);\n      vec4.set(sourceNode.colorTransformLocalAdd, 0, 0, 0, 0);\n    }\n    sourceNode.setParent(this.__root, this.__root.children.length);\n    this.__needRender = true;\n  }\n\n  colorTransform(bounds: Rectangle, trx: ColorTransform) {\n    this.__render();\n    const target = this.__target!;\n    this.__target = null;\n    try {\n      const [x, y, width, height] = bounds.__rect;\n      const addPatch = (patch: rect, apply: boolean) => {\n        if (patch[2] <= 0 || patch[3] <= 0) {\n          return;\n        }\n        const node = new SceneNode(null);\n        node.setRenderObjects(\n          [RenderObject.rect(patch, target.texture, { invertY: true })],\n          rect.fromValues(0, 0, patch[2], patch[3])\n        );\n        mat2d.fromTranslation(node.transformLocal, [patch[0], patch[1]]);\n        if (apply) {\n          vec4.copy(node.colorTransformLocalMul, trx.__mul);\n          vec4.copy(node.colorTransformLocalAdd, trx.__add);\n        }\n        node.setParent(this.__root, this.__root.children.length);\n      };\n      addPatch(rect.fromValues(0, 0, this.width, y), false);\n      addPatch(rect.fromValues(0, y, x, height), false);\n      addPatch(rect.fromValues(x, y, width, height), true);\n      addPatch(\n        rect.fromValues(x + width, y, this.width - (x + width), height),\n        false\n      );\n      addPatch(\n        rect.fromValues(0, y + height, this.width, this.height - (y + height)),\n        false\n      );\n\n      this.__render();\n    } finally {\n      this.__renderer!.renderPool.returnTexture(target);\n    }\n  }\n\n  getPixel32(x: number, y: number) {\n    this.__render();\n    if (this.__needPixel || !this.__pixels) {\n      if (!this.__pixels) {\n        this.__pixels = new Uint32Array(this.width * this.height);\n      }\n\n      const glState = this.__renderer!.glState;\n      const gl = glState.gl;\n      this.__target!.framebuffer.ensure(glState);\n      glState.bindFramebuffer(\n        gl.READ_FRAMEBUFFER,\n        this.__target!.framebuffer.framebuffer\n      );\n      const pixels = new Uint8Array(this.__pixels.buffer);\n      gl.readPixels(\n        0,\n        0,\n        this.width,\n        this.height,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        pixels\n      );\n      this.__needPixel = false;\n    }\n\n    const offset = Math.floor(x) + (this.height - Math.floor(y)) * this.width;\n    const pixel = this.__pixels[offset];\n    const a = (pixel >>> 24) & 0xff;\n    const b = (pixel >>> 16) & 0xff;\n    const g = (pixel >>> 8) & 0xff;\n    const r = (pixel >>> 0) & 0xff;\n    return a * 0x1000000 + r * 0x10000 + g * 0x100 + b * 0x1;\n  }\n\n  lock() {}\n\n  unlock() {}\n\n  copyPixels(\n    sourceBitmapData: BitmapData,\n    sourceRect: Rectangle,\n    destPoint: Point\n  ) {\n    this.__render();\n    sourceBitmapData.__render();\n\n    const glState = this.__renderer!.glState;\n    const gl = glState.gl;\n    const src = sourceBitmapData.__target!;\n    const dst = this.__target!;\n\n    const srcX = sourceRect.x,\n      srcY = this.height - sourceRect.y - sourceRect.height;\n    const dstX = destPoint.x,\n      dstY = this.height - destPoint.y - sourceRect.height;\n\n    src.framebuffer.ensure(glState);\n    dst.framebuffer.ensure(glState);\n    glState.bindFramebuffer(gl.READ_FRAMEBUFFER, src.framebuffer.framebuffer);\n    glState.bindFramebuffer(gl.DRAW_FRAMEBUFFER, dst.framebuffer.framebuffer);\n    gl.blitFramebuffer(\n      srcX,\n      srcY,\n      srcX + sourceRect.width,\n      srcY + sourceRect.height,\n      dstX,\n      dstY,\n      dstX + sourceRect.width,\n      dstY + sourceRect.height,\n      gl.COLOR_BUFFER_BIT,\n      gl.NEAREST\n    );\n  }\n\n  scroll(x: number, y: number) {\n    this.__render();\n    const target = this.__target!;\n    const renderer = this.__renderer!;\n    this.__target = renderer.renderPool.takeTexture(this.width, this.height);\n    try {\n      const src = target.framebuffer;\n      const dst = this.__target.framebuffer;\n      const glState = this.__renderer!.glState;\n      const gl = glState.gl;\n      src.ensure(glState);\n      dst.ensure(glState);\n      glState.bindFramebuffer(gl.READ_FRAMEBUFFER, src.framebuffer);\n      glState.bindFramebuffer(gl.DRAW_FRAMEBUFFER, dst.framebuffer);\n      gl.blitFramebuffer(\n        0,\n        0,\n        this.width,\n        this.height,\n        0,\n        0,\n        this.width,\n        this.height,\n        gl.COLOR_BUFFER_BIT,\n        gl.NEAREST\n      );\n      gl.blitFramebuffer(\n        0,\n        0,\n        this.width,\n        this.height,\n        x,\n        -y,\n        x + this.width,\n        -y + this.height,\n        gl.COLOR_BUFFER_BIT,\n        gl.NEAREST\n      );\n    } finally {\n      renderer.renderPool.returnTexture(target);\n    }\n  }\n\n  dispose() {\n    if (this.__target) {\n      this.__renderer?.renderPool.returnTexture(this.__target);\n      this.__target = null;\n    }\n    this.__needRender = true;\n  }\n\n  __render() {\n    if (this.__target && !this.__needRender) {\n      return;\n    }\n\n    if (!this.__renderer) {\n      if (!Stage.__current) {\n        throw new Error(\"No stage in context\");\n      }\n      this.__renderer = Stage.__current.__renderer;\n    }\n\n    let clearFb = () => {};\n    if (!this.__target) {\n      const glState = this.__renderer.glState;\n      this.__target = this.__renderer.renderPool.takeTexture(\n        this.width,\n        this.height\n      );\n      clearFb = () => {\n        glState.setClearColor(0, 0, 0, 0);\n        glState.gl.clear(glState.gl.COLOR_BUFFER_BIT);\n      };\n    }\n\n    const fb = this.__renderer.renderPool.takeRenderbuffer(\n      this.width,\n      this.height\n    );\n    try {\n      const glState = this.__renderer!.glState;\n      const gl = glState.gl;\n      this.__renderer.renderNode(\n        this.__root,\n        fb.framebuffer,\n        this.width,\n        this.height,\n        clearFb\n      );\n      this.__target.framebuffer.ensure(glState);\n      glState.bindFramebuffer(gl.READ_FRAMEBUFFER, fb.framebuffer.framebuffer);\n      glState.bindFramebuffer(\n        gl.DRAW_FRAMEBUFFER,\n        this.__target.framebuffer.framebuffer\n      );\n      gl.blitFramebuffer(\n        0,\n        0,\n        this.width,\n        this.height,\n        0,\n        0,\n        this.width,\n        this.height,\n        gl.COLOR_BUFFER_BIT,\n        gl.NEAREST\n      );\n\n      this.__root.onRemoveFromStage();\n      this.__root = new SceneNode(null);\n      this.__needRender = false;\n      this.__needPixel = true;\n    } finally {\n      this.__renderer.renderPool.returnRenderbuffer(fb);\n    }\n  }\n}\n","import { DisplayObject } from \"./DisplayObject\";\nimport { BitmapData } from \"./BitmapData\";\nimport { RenderObject } from \"../../../internal/render2/RenderObject\";\nimport { rect } from \"../../../internal/math/rect\";\nimport { Texture } from \"../../../internal/render2/gl/Texture\";\n\nexport class Bitmap extends DisplayObject {\n  constructor(public bitmapData: BitmapData) {\n    super();\n\n    const { width, height } = this.bitmapData;\n    const bounds = rect.fromValues(0, 0, width, height);\n    this.__node.setRenderObjects(\n      [\n        RenderObject.rect(bounds, Texture.WHITE, {\n          texWidth: width,\n          texHeight: height,\n          invertY: true,\n        }),\n      ],\n      bounds\n    );\n  }\n\n  __onRender() {\n    super.__onRender();\n\n    this.bitmapData.__render();\n    if (this.bitmapData.__target) {\n      this.__node.renderObjects[0].texture = this.bitmapData.__target.texture;\n    }\n  }\n}\n","import { DisplayObjectContainer } from \"./DisplayObjectContainer\";\n\nexport class Loader extends DisplayObjectContainer {}\n","export class Event {\n  static readonly ENTER_FRAME = \"ENTER_FRAME\";\n  static readonly ADDED_TO_STAGE = \"ADDED_TO_STAGE\";\n  static readonly REMOVED_FROM_STAGE = \"REMOVED_FROM_STAGE\";\n  static readonly SOUND_COMPLETE = \"SOUND_COMPLETE\";\n  static readonly DEACTIVATE = \"DEACTIVATE\";\n\n  target: unknown;\n  currentTarget: unknown;\n\n  constructor(\n    public type: string,\n    public readonly bubbles = false,\n    public readonly cancelable = false\n  ) {}\n\n  formatToString(className: string, ...fields: string[]): string {\n    const values = fields.map((field) => (this as any)[field]).join(\", \");\n    return `${className}(${values})`;\n  }\n}\n","import { AVMObject } from \"../../__internal/avm2/AVMObject\";\nimport { Event } from \"./Event\";\n\nexport type ListenerFn<T extends Event> = (event: T) => void;\n\ninterface Listener {\n  priority: number;\n  listener: ListenerFn<Event>;\n}\n\nconst forBroadcast = Symbol();\nconst broadcastEvents: Array<string | symbol> = [Event.ENTER_FRAME];\n\nexport class EventDispatcher extends AVMObject {\n  [forBroadcast] = false;\n\n  #parent: EventDispatcher | null = null;\n  #captureListeners = new Map<string | symbol, Listener[]>();\n  #bubbleListeners = new Map<string | symbol, Listener[]>();\n\n  __setEventParent(parent: EventDispatcher | null) {\n    this.#parent = parent;\n  }\n\n  addEventListener<T extends Event>(\n    type: string | symbol,\n    listener: ListenerFn<T>,\n    useCapture = false,\n    priority = 0,\n    useWeakReference = false\n  ) {\n    if (broadcastEvents.includes(type) && !this[forBroadcast]) {\n      __broadcastDispatcher.addEventListener(\n        type,\n        listener,\n        useCapture,\n        priority,\n        useWeakReference\n      );\n      return;\n    }\n\n    let listeners: Map<string | symbol, Listener[]>;\n    if (useCapture) {\n      listeners = this.#captureListeners;\n    } else {\n      listeners = this.#bubbleListeners;\n    }\n\n    const oldListeners = listeners.get(type) || [];\n    if (oldListeners.find((l) => l.listener === listener)) {\n      return;\n    }\n\n    const newListeners = [\n      ...oldListeners,\n      { priority, listener: listener as ListenerFn<Event> },\n    ];\n    newListeners.sort((a, b) => b.priority - a.priority);\n    listeners.set(type, newListeners);\n  }\n\n  removeEventListener<T extends Event>(\n    type: string | symbol,\n    listener: ListenerFn<T>,\n    useCapture = false,\n    priority = 0,\n    useWeakReference = false\n  ) {\n    if (broadcastEvents.includes(type) && !this[forBroadcast]) {\n      __broadcastDispatcher.removeEventListener(\n        type,\n        listener,\n        useCapture,\n        priority,\n        useWeakReference\n      );\n      return;\n    }\n\n    let listeners: Map<string | symbol, Listener[]>;\n    if (useCapture) {\n      listeners = this.#captureListeners;\n    } else {\n      listeners = this.#bubbleListeners;\n    }\n\n    const oldListeners = listeners.get(type) || [];\n    const newListeners = oldListeners.filter((l) => l.listener !== listener);\n    if (newListeners.length !== oldListeners.length) {\n      listeners.set(type, newListeners);\n    }\n  }\n\n  #dispatchEvent = (event: Event, isCapturing: boolean) => {\n    let listeners: Map<string | symbol, Listener[]>;\n    if (isCapturing) {\n      listeners = this.#captureListeners;\n    } else {\n      listeners = this.#bubbleListeners;\n    }\n\n    for (const { listener } of listeners.get(event.type) || []) {\n      listener(event);\n    }\n  };\n\n  dispatchEvent(event: Event) {\n    event.target = this;\n    if (!event.bubbles) {\n      event.currentTarget = this;\n      this.#dispatchEvent(event, false);\n      return;\n    }\n\n    const path: EventDispatcher[] = [this];\n    let current: EventDispatcher | null = this;\n    while (current && current.#parent) {\n      current = current.#parent;\n      path.push(current);\n    }\n\n    for (let i = path.length - 1; i > 0; i--) {\n      event.currentTarget = path[i];\n      path[i].#dispatchEvent(event, true);\n    }\n    for (let i = 0; i < path.length; i++) {\n      event.currentTarget = path[i];\n      path[i].#dispatchEvent(event, false);\n    }\n  }\n}\n\nexport const __broadcastDispatcher = new EventDispatcher();\n__broadcastDispatcher[forBroadcast] = true;\n","import { Event } from \"./Event\";\n\nexport class KeyboardEvent extends Event {\n  static readonly KEY_DOWN = \"KEY_DOWN\";\n  static readonly KEY_UP = \"KEY_UP\";\n\n  keyCode = 0;\n}\n","import { Event } from \"./Event\";\n\nexport class MouseEvent extends Event {\n  static readonly CLICK = \"click\";\n  static readonly MOUSE_DOWN = \"mouseDown\";\n  static readonly MOUSE_MOVE = \"mouseMove\";\n  static readonly MOUSE_OUT = \"mouseOut\";\n  static readonly MOUSE_OVER = \"mouseOver\";\n  static readonly MOUSE_UP = \"mouseUp\";\n\n  buttonDown = false;\n  localX = 0;\n  localY = 0;\n  stageX = 0;\n  stageY = 0;\n}\n","import { Event } from \"./Event\";\n\nexport class TimerEvent extends Event {}\n","import { Event } from \"./Event\";\n\nexport class TextEvent extends Event {\n  text = \"\";\n}\n","import { TextEvent } from \"./TextEvent\";\n\nexport class ErrorEvent extends TextEvent {}\n","import { ErrorEvent } from \"./ErrorEvent\";\n\nexport class IOErrorEvent extends ErrorEvent {\n  static readonly IO_ERROR = \"IO_ERROR\";\n}\n","import { ErrorEvent } from \"./ErrorEvent\";\n\nexport class SecurityErrorEvent extends ErrorEvent {\n  static readonly SECURITY_ERROR = \"SECURITY_ERROR\";\n}\n","import { Event } from \"./Event\";\n\nexport class FocusEvent extends Event {}\n","import { FilterInstance } from \"../../../internal/render2/filter/Filter\";\n\nexport abstract class BitmapFilter {\n  abstract readonly __filter: FilterInstance;\n}\n","import { Filter, FilterInput, FilterInstance } from \"./Filter\";\nimport { Renderer } from \"../Renderer\";\nimport { TextureTarget } from \"../gl/targets\";\nimport { Texture } from \"../gl/Texture\";\nimport { attrs, attrFloat, programBlur, vertexArray } from \"./programs\";\nimport { mat2d, vec2 } from \"gl-matrix\";\nimport { projection } from \"../../math/matrix\";\n\nexport interface BlurFilterInstance extends FilterInstance {\n  blurX: number;\n  blurY: number;\n  passes: number;\n}\n\nconst outProjection = mat2d.create();\nconst inTexScale = vec2.create();\nconst outTexScale = vec2.create();\n\nexport class BlurFilter implements Filter<BlurFilterInstance> {\n  static readonly instance = new BlurFilter();\n\n  isEffective(instance: BlurFilterInstance): boolean {\n    return instance.blurX > 0 || instance.blurY > 0;\n  }\n\n  apply(\n    renderer: Renderer,\n    input: FilterInput<BlurFilterInstance>[],\n    out: TextureTarget\n  ): void {\n    const state = renderer.glState;\n    const gl = state.gl;\n\n    const { width, height } = out.texture;\n    projection(outProjection, width, height, false);\n    vec2.set(outTexScale, 1 / width, 1 / height);\n\n    state.setViewport(0, 0, width, height);\n    state.disable(gl.BLEND);\n    state.setClearColor(0, 0, 0, 0);\n\n    const texA = renderer.renderPool.takeTexture(width, height);\n    const texB = renderer.renderPool.takeTexture(width, height);\n    try {\n      const batchInput: FilterInput<BlurFilterInstance>[] = [];\n      let radius = 0;\n      let texture: Texture | null = null;\n      let passes: number | null = null;\n      const flush = () => {\n        if (!texture || !passes) {\n          return;\n        }\n\n        const blurProgram = programBlur(radius);\n\n        const numRect = batchInput.length;\n        attrs.update(state, 0, numRect * 4 * 17);\n\n        let front = texA;\n        let back = texB;\n        for (let i = 0; i < passes * 2; i++) {\n          let passFront = front;\n          let passBack = back.texture;\n          let mode = i % 2;\n          if (i === 0) {\n            passBack = texture;\n            mode += 2;\n          } else if (i === passes * 2 - 1) {\n            passFront = out;\n          }\n\n          passFront.framebuffer.ensure(state);\n          state.bindFramebuffer(\n            gl.FRAMEBUFFER,\n            passFront.framebuffer.framebuffer\n          );\n\n          blurProgram.ensure(state);\n          vertexArray.ensure(state);\n          passBack.ensure(state);\n\n          state.useProgram(blurProgram.program);\n          const texUnit = state.bindTextures([passBack.texture])[0];\n          blurProgram.uniform(state, \"uTexture\", texUnit);\n          blurProgram.uniform(state, \"uMode\", mode);\n          vertexArray.bind(state);\n          gl.drawElements(gl.TRIANGLES, numRect * 6, gl.UNSIGNED_SHORT, 0);\n\n          let tmp = back;\n          back = front;\n          front = tmp;\n        }\n\n        batchInput.length = 0;\n        passes = null;\n        texture = null;\n      };\n\n      for (const i of input) {\n        if (i.texture !== texture || i.instance.passes !== passes) {\n          flush();\n          texture = i.texture;\n          passes = i.instance.passes;\n          vec2.set(inTexScale, 1 / texture.width, 1 / texture.height);\n        }\n\n        const deltaX = i.instance.blurX / 2;\n        const deltaY = i.instance.blurY / 2;\n        radius = Math.max(radius, deltaX, deltaY);\n\n        let attrI = batchInput.length * 4 * 17;\n        for (let j = 0; j < 4; j++) {\n          attrFloat[attrI + 0] = deltaX;\n          attrFloat[attrI + 1] = deltaY;\n          switch (j) {\n            case 0:\n              attrFloat[attrI + 2] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 3] = i.outBounds[1];\n              attrFloat[attrI + 4] = i.inBounds[0] + i.inBounds[2];\n              attrFloat[attrI + 5] = i.inBounds[1];\n              attrFloat[attrI + 6] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 7] = i.outBounds[1];\n              break;\n            case 1:\n              attrFloat[attrI + 2] = i.outBounds[0];\n              attrFloat[attrI + 3] = i.outBounds[1] + i.outBounds[3];\n              attrFloat[attrI + 4] = i.inBounds[0];\n              attrFloat[attrI + 5] = i.inBounds[1] + i.inBounds[3];\n              attrFloat[attrI + 6] = i.outBounds[0];\n              attrFloat[attrI + 7] = i.outBounds[1] + i.outBounds[3];\n              break;\n            case 2:\n              attrFloat[attrI + 2] = i.outBounds[0];\n              attrFloat[attrI + 3] = i.outBounds[1];\n              attrFloat[attrI + 4] = i.inBounds[0];\n              attrFloat[attrI + 5] = i.inBounds[1];\n              attrFloat[attrI + 6] = i.outBounds[0];\n              attrFloat[attrI + 7] = i.outBounds[1];\n              break;\n            case 3:\n              attrFloat[attrI + 2] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 3] = i.outBounds[1] + i.outBounds[3];\n              attrFloat[attrI + 4] = i.inBounds[0] + i.inBounds[2];\n              attrFloat[attrI + 5] = i.inBounds[1] + i.inBounds[3];\n              attrFloat[attrI + 6] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 7] = i.outBounds[1] + i.outBounds[3];\n              break;\n          }\n\n          attrFloat[attrI + 8] = i.inBounds[0] + 0.5;\n          attrFloat[attrI + 9] = i.inBounds[1] + 0.5;\n          attrFloat[attrI + 10] = i.inBounds[0] + i.inBounds[2] - 1.5;\n          attrFloat[attrI + 11] = i.inBounds[1] + i.inBounds[3] - 1.5;\n\n          attrFloat[attrI + 12] = i.outBounds[0] + 0.5;\n          attrFloat[attrI + 13] = i.outBounds[1] + 0.5;\n          attrFloat[attrI + 14] = i.outBounds[0] + i.outBounds[2] - 1.5;\n          attrFloat[attrI + 15] = i.outBounds[1] + i.outBounds[3] - 1.5;\n\n          const delta = attrFloat.subarray(attrI + 0, attrI + 2);\n          const vertex = attrFloat.subarray(attrI + 2, attrI + 4);\n          const inTexCoords = attrFloat.subarray(attrI + 4, attrI + 6);\n          const outTexCoords = attrFloat.subarray(attrI + 6, attrI + 8);\n          const inBoundsMin = attrFloat.subarray(attrI + 8, attrI + 10);\n          const inBoundsMax = attrFloat.subarray(attrI + 10, attrI + 12);\n          const outBoundsMin = attrFloat.subarray(attrI + 12, attrI + 14);\n          const outBoundsMax = attrFloat.subarray(attrI + 14, attrI + 16);\n\n          vec2.mul(delta, delta, inTexScale);\n          vec2.transformMat2d(vertex, vertex, outProjection);\n          vec2.mul(inTexCoords, inTexCoords, inTexScale);\n          vec2.mul(inBoundsMin, inBoundsMin, inTexScale);\n          vec2.mul(inBoundsMax, inBoundsMax, inTexScale);\n          vec2.mul(outTexCoords, outTexCoords, outTexScale);\n          vec2.mul(outBoundsMin, outBoundsMin, outTexScale);\n          vec2.mul(outBoundsMax, outBoundsMax, outTexScale);\n\n          attrI += 17;\n        }\n\n        batchInput.push(i);\n      }\n      flush();\n    } finally {\n      renderer.renderPool.returnTexture(texA);\n      renderer.renderPool.returnTexture(texB);\n    }\n  }\n}\n","import { BitmapFilter } from \"./BitmapFilter\";\nimport { vec2 } from \"gl-matrix\";\nimport {\n  BlurFilterInstance,\n  BlurFilter as RenderBlurFilter,\n} from \"../../../internal/render2/filter/BlurFilter\";\n\nexport class BlurFilter extends BitmapFilter {\n  get __filter(): BlurFilterInstance {\n    return {\n      filter: RenderBlurFilter.instance,\n      paddings: vec2.fromValues(this.blurX, this.blurY),\n      blurX: this.blurX,\n      blurY: this.blurY,\n      passes: this.quality,\n    };\n  }\n\n  constructor(public blurX = 4.0, public blurY = 4.0, public quality = 1) {\n    super();\n  }\n}\n","import { vec2 } from \"gl-matrix\";\nimport { BitmapFilter } from \"./BitmapFilter\";\nimport {\n  DropShadowFilterInstance,\n  DropShadowFilter as RenderDropShadowFilter,\n} from \"../../../internal/render2/filter/DropShadowFilter\";\n\nexport class DropShadowFilter extends BitmapFilter {\n  get __filter(): DropShadowFilterInstance {\n    return {\n      filter: RenderDropShadowFilter.instance,\n      paddings: vec2.fromValues(\n        this.blurX + this.distance,\n        this.blurY + this.distance\n      ),\n      blurX: this.blurX,\n      blurY: this.blurY,\n      passes: this.quality,\n      color: this.color,\n      strength: this.strength,\n      angle: (this.angle * Math.PI) / 180,\n      distance: this.distance,\n      knockout: this.knockout,\n    };\n  }\n\n  blurX = 0;\n  blurY = 0;\n  quality = 3;\n  color = 0xffffff;\n  strength = 1;\n  angle = 45;\n  distance = 4;\n  knockout = false;\n  hideObject = false;\n  inner = false;\n}\n","import { vec4 } from \"gl-matrix\";\nimport { SceneNode } from \"../../../internal/render2/SceneNode\";\n\nexport class ColorTransform {\n  __node: SceneNode | null = null;\n  __mul: vec4;\n  __add: vec4;\n\n  constructor(\n    redMul = 1,\n    greenMul = 1,\n    blueMul = 1,\n    alphaMul = 1,\n    redAdd = 0,\n    greenAdd = 0,\n    blueAdd = 0,\n    alphaAdd = 0\n  ) {\n    this.__mul = vec4.fromValues(redMul, greenMul, blueMul, alphaMul);\n    this.__add = vec4.fromValues(redAdd, greenAdd, blueAdd, alphaAdd);\n  }\n\n  get redMultiplier() {\n    return this.__mul[0];\n  }\n  set redMultiplier(value) {\n    this.__mul[0] = value;\n  }\n\n  get greenMultiplier() {\n    return this.__mul[1];\n  }\n  set greenMultiplier(value) {\n    this.__mul[1] = value;\n  }\n\n  get blueMultiplier() {\n    return this.__mul[2];\n  }\n  set blueMultiplier(value) {\n    this.__mul[2] = value;\n  }\n\n  get alphaMultiplier() {\n    return this.__mul[3];\n  }\n  set alphaMultiplier(value) {\n    this.__mul[3] = value;\n  }\n\n  get redOffset() {\n    return this.__add[0];\n  }\n  set redOffset(value) {\n    this.__add[0] = value;\n  }\n\n  get greenOffset() {\n    return this.__add[1];\n  }\n  set greenOffset(value) {\n    this.__add[1] = value;\n  }\n\n  get blueOffset() {\n    return this.__add[2];\n  }\n  set blueOffset(value) {\n    this.__add[2] = value;\n  }\n\n  get alphaOffset() {\n    return this.__add[3];\n  }\n  set alphaOffset(value) {\n    this.__add[3] = value;\n  }\n\n  __setNode(value: SceneNode | null) {\n    if (value) {\n      vec4.copy(value.colorTransformLocalMul, this.__mul);\n      vec4.copy(value.colorTransformLocalAdd, this.__add);\n      this.__mul = value.colorTransformLocalMul;\n      this.__add = value.colorTransformLocalAdd;\n    } else {\n      this.__mul = vec4.clone(this.__mul);\n      this.__add = vec4.clone(this.__add);\n    }\n    this.__node = value;\n  }\n\n  set color(value: number) {\n    this.__add[0] = (value >>> 16) & 0xff;\n    this.__add[1] = (value >>> 8) & 0xff;\n    this.__add[2] = (value >>> 0) & 0xff;\n    this.__mul[0] = 0;\n    this.__mul[1] = 0;\n    this.__mul[2] = 0;\n  }\n}\n","import { mat2d } from \"gl-matrix\";\nimport { SceneNode, roundTwips } from \"../../../internal/render2/SceneNode\";\n\nexport class Matrix {\n  __node: SceneNode | null = null;\n  __value: mat2d;\n\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    this.__value = mat2d.fromValues(a, b, c, d, tx, ty);\n  }\n\n  __setNode(value: SceneNode | null) {\n    if (value) {\n      mat2d.copy(value.transformLocal, this.__value);\n      this.__value = value.transformLocal;\n    } else {\n      this.__value = mat2d.clone(this.__value);\n    }\n  }\n\n  translate(dx: number, dy: number) {\n    this.__value[4] = roundTwips(this.__value[4] + dx);\n    this.__value[5] = roundTwips(this.__value[5] + dy);\n    this.__node?.markLayoutDirty();\n  }\n\n  scale(sx: number, sy: number) {\n    this.__value[0] *= sx;\n    this.__value[1] *= sy;\n    this.__value[2] *= sx;\n    this.__value[3] *= sy;\n    this.__value[4] = roundTwips(this.__value[4] * sx);\n    this.__value[5] = roundTwips(this.__value[5] * sy);\n    this.__node?.markLayoutDirty();\n  }\n\n  rotate(angle: number) {\n    const a = this.__value[0];\n    const b = this.__value[1];\n    const c = this.__value[2];\n    const d = this.__value[3];\n    const tx = this.__value[4];\n    const ty = this.__value[5];\n    const u = Math.sin(angle);\n    const v = Math.cos(angle);\n    this.__value[0] = a * u - b * v;\n    this.__value[1] = a * v + b * u;\n    this.__value[2] = c * u - d * v;\n    this.__value[3] = c * v + d * u;\n    this.__value[4] = roundTwips(tx * u - ty * v);\n    this.__value[5] = roundTwips(tx * v + ty * u);\n    this.__node?.markLayoutDirty();\n  }\n}\n","import { vec2 } from \"gl-matrix\";\n\nexport class Point {\n  readonly __value = vec2.create();\n\n  get x() {\n    return this.__value[0];\n  }\n  set x(value: number) {\n    this.__value[0] = value;\n  }\n\n  get y() {\n    return this.__value[1];\n  }\n  set y(value: number) {\n    this.__value[1] = value;\n  }\n\n  constructor(x = 0, y = 0) {\n    vec2.set(this.__value, x, y);\n  }\n}\n","import { rect } from \"../../../internal/math/rect\";\n\nexport class Rectangle {\n  static readonly __empty = new Rectangle();\n\n  readonly __rect: rect;\n\n  get x() {\n    return this.__rect[0];\n  }\n  set x(value) {\n    this.__rect[0] = value;\n  }\n\n  get y() {\n    return this.__rect[1];\n  }\n  set y(value) {\n    this.__rect[1] = value;\n  }\n\n  get width() {\n    return this.__rect[2];\n  }\n  set width(value) {\n    this.__rect[2] = value;\n  }\n\n  get height() {\n    return this.__rect[3];\n  }\n  set height(value) {\n    this.__rect[3] = value;\n  }\n\n  constructor(x = 0, y = 0, width = 0, height = 0) {\n    this.__rect = rect.fromValues(x, y, width, height);\n  }\n\n  equals(r: Rectangle) {\n    return rect.equals(this.__rect, r.__rect);\n  }\n}\n","import { Matrix } from \"./Matrix\";\nimport { ColorTransform } from \"./ColorTransform\";\nimport { SceneNode } from \"../../../internal/render2/SceneNode\";\n\nexport class Transform {\n  __node: SceneNode | null = null;\n  __matrix = new Matrix();\n  __colorTransform = new ColorTransform();\n\n  __setNode(value: SceneNode | null) {\n    this.__node = value;\n    this.matrix.__setNode(value);\n    this.colorTransform.__setNode(value);\n  }\n\n  get matrix() {\n    return this.__matrix;\n  }\n  set matrix(value) {\n    this.__matrix.__setNode(null);\n    this.__matrix = value;\n    this.__matrix.__setNode(this.__node);\n  }\n\n  get colorTransform() {\n    return this.__colorTransform;\n  }\n  set colorTransform(value) {\n    this.__colorTransform.__setNode(null);\n    this.__colorTransform = value;\n    this.__colorTransform.__setNode(this.__node);\n  }\n}\n","import { SoundChannel } from \"./SoundChannel\";\nimport { Sound } from \"./Sound\";\nimport { SoundInfo } from \"../../__internal/character\";\nimport { AssetLibrary } from \"../../__internal\";\n\nexport class SoundContext {\n  private readonly soundChannels = new Map<number, SoundChannel>();\n\n  syncSound(library: AssetLibrary, characterId: number, info: SoundInfo) {\n    if (info.syncNoMultiple || info.syncStop) {\n      this.soundChannels.get(characterId)?.stop();\n      this.soundChannels.delete(characterId);\n    }\n    if (info.syncStop) {\n      return;\n    }\n\n    const sound = library.instantiateCharacter(characterId) as Sound;\n\n    let playTime = 0;\n    let loops = 1;\n    if (info.inPoint != null) {\n      playTime = (info.inPoint / sound.__character!.audio.sampleRate) * 1000;\n    }\n    if (info.loopCount != null) {\n      loops = info.loopCount;\n    }\n\n    const channel = sound.play(playTime, loops);\n    this.soundChannels.set(characterId, channel);\n  }\n\n  stopSound(characterId: number) {\n    this.soundChannels.get(characterId)?.stop();\n  }\n}\n","import type { SoundChannel } from \"./SoundChannel\";\n\nexport const channels = new Set<SoundChannel>();\n","import { Event } from \"../events/Event\";\nimport { EventDispatcher } from \"../events/EventDispatcher\";\nimport { SoundTransform } from \"./SoundTransform\";\nimport { Audio, globalVolumeNode } from \"../../../internal/audio\";\nimport { channels } from \"./channels\";\n\nexport class SoundChannel extends EventDispatcher {\n  private __soundTransform: SoundTransform;\n  private isStopped = false;\n  private readonly __audioNode: AudioBufferSourceNode;\n  private readonly __volumeNode: GainNode;\n  private readonly __beginTime: number;\n  private readonly __duration: number;\n\n  constructor(\n    buffer: AudioBuffer,\n    soundTransform: SoundTransform,\n    startTime: number,\n    loops: number\n  ) {\n    super();\n\n    this.__audioNode = Audio.createBufferSource();\n    this.__volumeNode = Audio.createGain();\n    this.__audioNode.buffer = buffer;\n    this.__audioNode.connect(this.__volumeNode);\n    this.__volumeNode.connect(globalVolumeNode);\n    if (Audio.state === \"suspended\") {\n      Audio.resume();\n    }\n\n    this.__soundTransform = soundTransform;\n    this.__soundTransform.__source = this;\n    this.__updateSoundTransform();\n\n    const currentTime = Audio.currentTime;\n    this.__beginTime = currentTime - startTime;\n    this.__duration = buffer.duration;\n\n    this.__audioNode.loop = true;\n    this.__audioNode.loopStart = 0;\n    this.__audioNode.start(currentTime, startTime);\n    this.__audioNode.stop(\n      this.__beginTime + Math.min(Math.max(1, loops) * this.__duration, 1000000)\n    );\n\n    this.__audioNode.onended = () => {\n      this.__volumeNode.disconnect();\n      this.__audioNode.disconnect();\n      channels.delete(this);\n      if (!this.isStopped) {\n        this.dispatchEvent(new Event(Event.SOUND_COMPLETE, false, false));\n      }\n    };\n\n    channels.add(this);\n  }\n\n  get soundTransform() {\n    return this.__soundTransform;\n  }\n\n  set soundTransform(value) {\n    this.__soundTransform.__source = null;\n    this.__soundTransform = value;\n    this.__soundTransform.__source = this;\n    this.__updateSoundTransform();\n  }\n\n  get position(): number {\n    return ((Audio.currentTime - this.__beginTime) % this.__duration) * 1000;\n  }\n\n  stop() {\n    this.isStopped = true;\n    this.__audioNode.stop();\n  }\n\n  __updateSoundTransform() {\n    this.__volumeNode.gain.setValueAtTime(\n      this.__soundTransform.volume,\n      Audio.currentTime\n    );\n  }\n}\n","interface SoundSource {\n  __updateSoundTransform(): void;\n}\n\nexport class SoundTransform {\n  __source: SoundSource | null = null;\n  private __volume: number;\n\n  get volume() {\n    return this.__volume;\n  }\n  set volume(value) {\n    this.__volume = value;\n    this.__source?.__updateSoundTransform();\n  }\n\n  constructor(volume = 1) {\n    this.__volume = volume;\n  }\n}\n","import { EventDispatcher } from \"../events/EventDispatcher\";\nimport { SoundInstance } from \"../../../internal/character/SoundInstance\";\nimport { SoundChannel } from \"./SoundChannel\";\nimport { SoundTransform } from \"./SoundTransform\";\nimport { Audio } from \"../../../internal/audio\";\n\nexport class Sound extends EventDispatcher {\n  static __character?: SoundInstance;\n\n  readonly __character: SoundInstance | null;\n\n  constructor() {\n    super();\n\n    this.__character = (this.constructor as typeof Sound).__character ?? null;\n  }\n\n  get length(): number {\n    return (this.__character?.audio.duration ?? 0) * 1000;\n  }\n\n  play(\n    playTime = 0,\n    loops = 0,\n    transform: SoundTransform | null = null\n  ): SoundChannel {\n    if (!this.__character) {\n      throw new Error(\"Sound character not exist\");\n    }\n\n    return new SoundChannel(\n      this.__character.audio,\n      transform ?? new SoundTransform(),\n      playTime / 1000,\n      loops\n    );\n  }\n}\n","import { SoundTransform } from \"./SoundTransform\";\nimport { channels } from \"./channels\";\nimport { Audio, globalVolumeNode } from \"../../../internal/audio\";\n\nexport class SoundMixer {\n  private static __soundTransform = new SoundTransform();\n\n  static get soundTransform() {\n    return SoundMixer.__soundTransform;\n  }\n\n  static set soundTransform(value) {\n    SoundMixer.__soundTransform.__source = null;\n    SoundMixer.__soundTransform = value;\n    SoundMixer.__soundTransform.__source = SoundMixer;\n    SoundMixer.__updateSoundTransform();\n  }\n\n  static stopAll() {\n    for (const channel of channels) {\n      channel.stop();\n    }\n  }\n\n  static __updateSoundTransform() {\n    globalVolumeNode.gain.setValueAtTime(\n      this.soundTransform.volume,\n      Audio.currentTime\n    );\n  }\n}\n","import { DisplayObject } from \"../display/DisplayObject\";\nimport { StaticTextInstance } from \"../../../internal/character/StaticTextInstance\";\n\nexport class StaticText extends DisplayObject {\n  static __character?: StaticTextInstance;\n\n  declare __character: StaticTextInstance | null;\n\n  constructor() {\n    super();\n\n    this.__character =\n      (this.constructor as typeof StaticText).__character ?? null;\n    this.__character?.applyTo(this);\n  }\n}\n","import { TextFormatAlign } from \"./TextFormatAlign\";\n\nexport class TextFormat {\n  align: TextFormatAlign = TextFormatAlign.LEFT;\n  bold = false;\n  italic = false;\n  color = 0x000000;\n  font = \"Times New Roman\";\n  size = 12;\n  leading = 0;\n\n  __clone() {\n    const format = new TextFormat();\n    format.align = this.align;\n    format.bold = this.bold;\n    format.italic = this.italic;\n    format.color = this.color;\n    format.font = this.font;\n    format.size = this.size;\n    format.leading = this.leading;\n    return format;\n  }\n}\n","export enum TextFormatAlign {\n  CENTER = \"center\",\n  END = \"end\",\n  JUSTIFY = \"justify\",\n  LEFT = \"left\",\n  RIGHT = \"right\",\n  START = \"start\",\n}\n","export enum TextFieldType {\n  DYNAMIC = \"dynamic\",\n  INPUT = \"input\",\n}\n","import { Container } from \"../../__internal/text/Container\";\nimport { InteractiveObject } from \"../display/InteractiveObject\";\nimport { EditTextInstance } from \"../../../internal/character/EditTextInstance\";\nimport { TextFieldType } from \"./TextFieldType\";\n\nexport class TextField extends InteractiveObject {\n  static __character?: EditTextInstance;\n\n  declare __character: EditTextInstance | null;\n\n  constructor() {\n    super();\n\n    this.__character =\n      (this.constructor as typeof TextField).__character ?? null;\n    this.__character?.applyTo(this);\n  }\n\n  readonly __container = new Container(this.__node);\n\n  type: TextFieldType = TextFieldType.DYNAMIC;\n\n  selectable = true;\n\n  get wordWrap() {\n    return this.__container.wordWrap;\n  }\n  set wordWrap(value) {\n    this.__container.wordWrap = value;\n  }\n\n  get multiline() {\n    return this.__container.multiline;\n  }\n  set multiline(value) {\n    this.__container.multiline = value;\n  }\n\n  get defaultTextFormat() {\n    return this.__container.defaultTextFormat;\n  }\n  set defaultTextFormat(value) {\n    this.__container.defaultTextFormat = value;\n  }\n\n  get textColor() {\n    return this.__container.defaultTextFormat.color;\n  }\n  set textColor(value) {\n    this.__container.defaultTextFormat.color = value;\n  }\n\n  get text() {\n    return this.__container.text;\n  }\n  set text(value) {\n    this.__container.text = value;\n  }\n\n  get htmlText() {\n    return this.__container.htmlText;\n  }\n  set htmlText(value) {\n    this.__container.htmlText = value;\n  }\n}\n","export class Keyboard {\n  static NUMBER_0: number = 48;\n  static NUMBER_1: number = 49;\n  static NUMBER_2: number = 50;\n  static NUMBER_3: number = 51;\n  static NUMBER_4: number = 52;\n  static NUMBER_5: number = 53;\n  static NUMBER_6: number = 54;\n  static NUMBER_7: number = 55;\n  static NUMBER_8: number = 56;\n  static NUMBER_9: number = 57;\n  static A: number = 65;\n  static B: number = 66;\n  static C: number = 67;\n  static D: number = 68;\n  static E: number = 69;\n  static F: number = 70;\n  static G: number = 71;\n  static H: number = 72;\n  static I: number = 73;\n  static J: number = 74;\n  static K: number = 75;\n  static L: number = 76;\n  static M: number = 77;\n  static N: number = 78;\n  static O: number = 79;\n  static P: number = 80;\n  static Q: number = 81;\n  static R: number = 82;\n  static S: number = 83;\n  static T: number = 84;\n  static U: number = 85;\n  static V: number = 86;\n  static W: number = 87;\n  static X: number = 88;\n  static Y: number = 89;\n  static Z: number = 90;\n  static SEMICOLON: number = 186;\n  static EQUAL: number = 187;\n  static COMMA: number = 188;\n  static MINUS: number = 189;\n  static PERIOD: number = 190;\n  static SLASH: number = 191;\n  static BACKQUOTE: number = 192;\n  static LEFTBRACKET: number = 219;\n  static BACKSLASH: number = 220;\n  static RIGHTBRACKET: number = 221;\n  static QUOTE: number = 222;\n  static ALTERNATE: number = 18;\n  static BACKSPACE: number = 8;\n  static CAPS_LOCK: number = 20;\n  static COMMAND: number = 15;\n  static CONTROL: number = 17;\n  static DELETE: number = 46;\n  static DOWN: number = 40;\n  static END: number = 35;\n  static ENTER: number = 13;\n  static ESCAPE: number = 27;\n  static F1: number = 112;\n  static F2: number = 113;\n  static F3: number = 114;\n  static F4: number = 115;\n  static F5: number = 116;\n  static F6: number = 117;\n  static F7: number = 118;\n  static F8: number = 119;\n  static F9: number = 120;\n  static F10: number = 121;\n  static F11: number = 122;\n  static F12: number = 123;\n  static F13: number = 124;\n  static F14: number = 125;\n  static F15: number = 126;\n  static HOME: number = 36;\n  static INSERT: number = 45;\n  static LEFT: number = 37;\n  static NUMPAD: number = 21;\n  static NUMPAD_0: number = 96;\n  static NUMPAD_1: number = 97;\n  static NUMPAD_2: number = 98;\n  static NUMPAD_3: number = 99;\n  static NUMPAD_4: number = 100;\n  static NUMPAD_5: number = 101;\n  static NUMPAD_6: number = 102;\n  static NUMPAD_7: number = 103;\n  static NUMPAD_8: number = 104;\n  static NUMPAD_9: number = 105;\n  static NUMPAD_ADD: number = 107;\n  static NUMPAD_DECIMAL: number = 110;\n  static NUMPAD_DIVIDE: number = 111;\n  static NUMPAD_ENTER: number = 108;\n  static NUMPAD_MULTIPLY: number = 106;\n  static NUMPAD_SUBTRACT: number = 109;\n  static PAGE_DOWN: number = 34;\n  static PAGE_UP: number = 33;\n  static RIGHT: number = 39;\n  static SHIFT: number = 16;\n  static SPACE: number = 32;\n  static TAB: number = 9;\n  static UP: number = 38;\n  static RED: number = 16777216;\n  static GREEN: number = 16777217;\n  static YELLOW: number = 16777218;\n  static BLUE: number = 16777219;\n  static CHANNEL_UP: number = 16777220;\n  static CHANNEL_DOWN: number = 16777221;\n  static RECORD: number = 16777222;\n  static PLAY: number = 16777223;\n  static PAUSE: number = 16777224;\n  static STOP: number = 16777225;\n  static FAST_FORWARD: number = 16777226;\n  static REWIND: number = 16777227;\n  static SKIP_FORWARD: number = 16777228;\n  static SKIP_BACKWARD: number = 16777229;\n  static NEXT: number = 16777230;\n  static PREVIOUS: number = 16777231;\n  static LIVE: number = 16777232;\n  static LAST: number = 16777233;\n  static MENU: number = 16777234;\n  static INFO: number = 16777235;\n  static GUIDE: number = 16777236;\n  static EXIT: number = 16777237;\n  static BACK: number = 16777238;\n  static AUDIO: number = 16777239;\n  static SUBTITLE: number = 16777240;\n  static DVR: number = 16777241;\n  static VOD: number = 16777242;\n  static INPUT: number = 16777243;\n  static SETUP: number = 16777244;\n  static HELP: number = 16777245;\n  static MASTER_SHELL: number = 16777246;\n  static SEARCH: number = 16777247;\n\n  static codeMap: Record<string, number> = {\n    Digit0: Keyboard.NUMBER_0,\n    Digit1: Keyboard.NUMBER_1,\n    Digit2: Keyboard.NUMBER_2,\n    Digit3: Keyboard.NUMBER_3,\n    Digit4: Keyboard.NUMBER_4,\n    Digit5: Keyboard.NUMBER_5,\n    Digit6: Keyboard.NUMBER_6,\n    Digit7: Keyboard.NUMBER_7,\n    Digit8: Keyboard.NUMBER_8,\n    Digit9: Keyboard.NUMBER_9,\n\n    KeyA: Keyboard.A,\n    KeyB: Keyboard.B,\n    KeyC: Keyboard.C,\n    KeyD: Keyboard.D,\n    KeyE: Keyboard.E,\n    KeyF: Keyboard.F,\n    KeyG: Keyboard.G,\n    KeyH: Keyboard.H,\n    KeyJ: Keyboard.J,\n    KeyK: Keyboard.K,\n    KeyL: Keyboard.L,\n    KeyM: Keyboard.M,\n    KeyN: Keyboard.N,\n    KeyO: Keyboard.O,\n    KeyP: Keyboard.P,\n    KeyQ: Keyboard.Q,\n    KeyR: Keyboard.R,\n    KeyS: Keyboard.S,\n    KeyT: Keyboard.T,\n    KeyU: Keyboard.U,\n    KeyV: Keyboard.V,\n    KeyW: Keyboard.W,\n    KeyX: Keyboard.X,\n    KeyY: Keyboard.Y,\n    KeyZ: Keyboard.Z,\n\n    Semicolon: Keyboard.SEMICOLON,\n    Equal: Keyboard.EQUAL,\n    Comma: Keyboard.COMMA,\n    Minus: Keyboard.MINUS,\n    Period: Keyboard.PERIOD,\n    Slash: Keyboard.SLASH,\n    Backquote: Keyboard.BACKQUOTE,\n    BracketLeft: Keyboard.LEFTBRACKET,\n    Backslash: Keyboard.BACKSLASH,\n    BracketRight: Keyboard.RIGHTBRACKET,\n    Quote: Keyboard.QUOTE,\n    AltLeft: Keyboard.ALTERNATE,\n    AltRight: Keyboard.ALTERNATE,\n    Backspace: Keyboard.BACKSPACE,\n    CapsLock: Keyboard.CAPS_LOCK,\n    ControlLeft: Keyboard.CONTROL,\n    ControlRight: Keyboard.CONTROL,\n    Delete: Keyboard.DELETE,\n    ArrowDown: Keyboard.DOWN,\n    End: Keyboard.END,\n    Enter: Keyboard.ENTER,\n    Escape: Keyboard.ESCAPE,\n    F1: Keyboard.F1,\n    F2: Keyboard.F2,\n    F3: Keyboard.F3,\n    F4: Keyboard.F4,\n    F5: Keyboard.F5,\n    F6: Keyboard.F6,\n    F7: Keyboard.F7,\n    F8: Keyboard.F8,\n    F9: Keyboard.F9,\n    F10: Keyboard.F10,\n    F11: Keyboard.F11,\n    F12: Keyboard.F12,\n    F13: Keyboard.F13,\n    F14: Keyboard.F14,\n    F15: Keyboard.F15,\n    Home: Keyboard.HOME,\n    Insert: Keyboard.INSERT,\n    ArrowLeft: Keyboard.LEFT,\n    Numpad0: Keyboard.NUMPAD_0,\n    Numpad1: Keyboard.NUMPAD_1,\n    Numpad2: Keyboard.NUMPAD_2,\n    Numpad3: Keyboard.NUMPAD_3,\n    Numpad4: Keyboard.NUMPAD_4,\n    Numpad5: Keyboard.NUMPAD_5,\n    Numpad6: Keyboard.NUMPAD_6,\n    Numpad7: Keyboard.NUMPAD_7,\n    Numpad8: Keyboard.NUMPAD_8,\n    Numpad9: Keyboard.NUMPAD_9,\n    NumpadAdd: Keyboard.NUMPAD_ADD,\n    NumpadDecimal: Keyboard.NUMPAD_DECIMAL,\n    NumpadDivide: Keyboard.NUMPAD_DIVIDE,\n    NumpadEnter: Keyboard.NUMPAD_ENTER,\n    NumpadMultiply: Keyboard.NUMPAD_MULTIPLY,\n    NumpadSubtract: Keyboard.NUMPAD_SUBTRACT,\n    PageDown: Keyboard.PAGE_DOWN,\n    PageUp: Keyboard.PAGE_UP,\n    ArrowRight: Keyboard.RIGHT,\n    ShiftLeft: Keyboard.SHIFT,\n    ShiftRight: Keyboard.SHIFT,\n    Space: Keyboard.SPACE,\n    Tab: Keyboard.TAB,\n    ArrowUp: Keyboard.UP,\n  };\n}\n","import { vec2 } from \"gl-matrix\";\nimport { BitmapFilter } from \"./BitmapFilter\";\nimport {\n  DropShadowFilterInstance,\n  DropShadowFilter as RenderDropShadowFilter,\n} from \"../../../internal/render2/filter/DropShadowFilter\";\n\nexport class GlowFilter extends BitmapFilter {\n  get __filter(): DropShadowFilterInstance {\n    return {\n      filter: RenderDropShadowFilter.instance,\n      paddings: vec2.fromValues(this.blurX, this.blurY),\n      blurX: this.blurX,\n      blurY: this.blurY,\n      passes: this.quality,\n      color: Math.floor(this.alpha * 0xff) * 0x1000000 + this.color,\n      strength: this.strength,\n      angle: 0,\n      distance: 0,\n      knockout: this.knockout,\n    };\n  }\n\n  constructor(\n    public color = 0xff0000,\n    public alpha = 1.0,\n    public blurX = 6.0,\n    public blurY = 6.0,\n    public strength = 2,\n    public quality = 1,\n    public inner = false,\n    public knockout = false\n  ) {\n    super();\n  }\n}\n","export class URLRequest {\n  url: string;\n\n  constructor(url: string) {\n    this.url = url;\n  }\n}\n","import { EventDispatcher } from \"../events/EventDispatcher\";\n\nexport class SharedObject extends EventDispatcher {\n  readonly data: any;\n\n  private constructor(private readonly name: string) {\n    super();\n    try {\n      this.data = JSON.parse(localStorage[name]) || {};\n    } catch {\n      this.data = {};\n    }\n  }\n\n  static getLocal(name: string): SharedObject {\n    return new SharedObject(name);\n  }\n\n  flush() {\n    localStorage[this.name] = JSON.stringify(this.data);\n  }\n}\n","import { URLRequest } from \"./URLRequest\";\n\nexport function navigateToURL(request: URLRequest, target?: string) {\n  window.open(request.url, target);\n}\n","import { EventDispatcher } from \"../events/EventDispatcher\";\n\nexport class Timer extends EventDispatcher {\n  constructor(public delay = 0, repeatCount = 0) {\n    super();\n  }\n\n  start() {}\n  stop() {}\n}\n","import { Class } from \"../../__internal/avm2/Class\";\nimport { ClassRegistry } from \"../../__internal\";\n\nexport function getTimer() {\n  return +new Date();\n}\n\nexport function getDefinitionByName(name: string): Class | null {\n  const classFn = ClassRegistry.instance.classes.get(name);\n  return classFn ?? null;\n}\n","import * as classes from \"./classes\";\n\nexport default classes;\n","export const Audio = new AudioContext();\n\nexport const globalVolumeNode = Audio.createGain();\n\nglobalVolumeNode.connect(Audio.destination);\n","import { SimpleButton } from \"../../classes/flash/display/SimpleButton\";\nimport { Sprite } from \"../../classes/flash/display/Sprite\";\nimport {\n  ButtonCharacter,\n  ButtonRecord,\n  ButtonSound,\n} from \"../../classes/__internal/character/Button\";\nimport { FrameActionKind } from \"../../classes/__internal/character/Sprite\";\nimport type { AssetLibrary } from \"../../classes/__internal\";\nimport { CharacterInstance } from \"./CharacterInstance\";\nimport {\n  executeActionPlaceObject,\n  updateFrameMasks,\n  executeActionStartSound,\n} from \"./frame\";\n\nexport enum ButtonState {\n  Up,\n  Over,\n  Down,\n  HitTest,\n}\n\nexport class ButtonInstance implements CharacterInstance {\n  constructor(\n    readonly id: number,\n    readonly def: ButtonCharacter,\n    readonly library: AssetLibrary\n  ) {}\n\n  applyTo(button: SimpleButton) {\n    this.instantiateState(button, ButtonState.Up);\n    this.instantiateState(button, ButtonState.Over);\n    this.instantiateState(button, ButtonState.Down);\n    this.instantiateState(button, ButtonState.HitTest);\n    button.trackAsMenu = this.def.trackAsMenu;\n  }\n\n  instantiateState(button: SimpleButton, state: ButtonState) {\n    const stateContainer = new Sprite();\n\n    let inState: (record: ButtonRecord) => boolean;\n    switch (state) {\n      case ButtonState.Up:\n        inState = (record) => record.up;\n        break;\n      case ButtonState.Over:\n        inState = (record) => record.over;\n        break;\n      case ButtonState.Down:\n        inState = (record) => record.down;\n        break;\n      case ButtonState.HitTest:\n        inState = (record) => record.hitTest;\n        break;\n    }\n\n    for (const record of this.def.characters) {\n      if (!inState(record)) {\n        continue;\n      }\n      executeActionPlaceObject(this.library, stateContainer, {\n        kind: FrameActionKind.PlaceObject,\n        depth: record.depth,\n        characterId: record.characterId,\n        moveCharacter: false,\n        version: 3,\n\n        matrix: record.matrix,\n        colorTransform: record.colorTransform,\n        filters: record.filters,\n        blendMode: record.blendMode,\n      });\n    }\n    updateFrameMasks(stateContainer);\n\n    switch (state) {\n      case ButtonState.Up:\n        button.upState = stateContainer;\n        break;\n      case ButtonState.Over:\n        button.overState = stateContainer;\n        break;\n      case ButtonState.Down:\n        button.downState = stateContainer;\n        break;\n      case ButtonState.HitTest:\n        button.hitTestState = stateContainer;\n        break;\n    }\n  }\n\n  stateTransition(button: SimpleButton, from: ButtonState, to: ButtonState) {\n    let sound: ButtonSound | undefined;\n    if (from === ButtonState.Over && to === ButtonState.Up) {\n      sound = this.def.overUpToIdle;\n    } else if (from === ButtonState.Up && to === ButtonState.Over) {\n      sound = this.def.idleToOverUp;\n    } else if (from === ButtonState.Over && to === ButtonState.Down) {\n      sound = this.def.overUpToOverDown;\n    } else if (from === ButtonState.Down && to === ButtonState.Over) {\n      sound = this.def.idleToOverUp;\n    }\n    if (!sound) {\n      return;\n    }\n\n    executeActionStartSound(this.library, button.__soundContext, {\n      kind: FrameActionKind.StartSound,\n      characterId: sound.characterId,\n      soundInfo: sound.soundInfo,\n    });\n  }\n}\n","export type Filter = FilterDropShadow | FilterBlur;\n\nexport enum FilterID {\n  DropShadow = 0,\n  Blur = 1,\n}\n\nexport interface FilterDropShadow {\n  id: FilterID.DropShadow;\n  color: number;\n  blurX: number;\n  blurY: number;\n  angle: number;\n  distance: number;\n  strength: number;\n  inner: boolean;\n  knockout: boolean;\n  compositeSource: boolean;\n  passes: number;\n}\n\nexport interface FilterBlur {\n  id: FilterID.Blur;\n  blurX: number;\n  blurY: number;\n  passes: number;\n}\n","import { mat2d, vec4 } from \"gl-matrix\";\nimport { DisplayObject } from \"../../classes/flash/display/DisplayObject\";\nimport { DisplayObjectContainer } from \"../../classes/flash/display/DisplayObjectContainer\";\nimport { MorphShape } from \"../../classes/flash/display/MorphShape\";\nimport { MovieClip } from \"../../classes/flash/display\";\nimport { BitmapFilter } from \"../../classes/flash/filters/BitmapFilter\";\nimport { BlurFilter } from \"../../classes/flash/filters/BlurFilter\";\nimport { DropShadowFilter } from \"../../classes/flash/filters/DropShadowFilter\";\nimport {\n  FrameActionPlaceObject,\n  FrameActionRemoveObject,\n  FrameActionStartSound,\n} from \"../../classes/__internal/character/Sprite\";\nimport { FilterID } from \"../../classes/__internal/character/filter\";\nimport { AssetLibrary } from \"../../classes/__internal/AssetLibrary\";\nimport { SoundContext } from \"../../classes/flash/media/context\";\nimport { Sound } from \"../../classes/flash/media\";\n\n// ref: https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/flash/display/DisplayObject.ts#L1137\n\nexport function executeActionPlaceObject(\n  library: AssetLibrary,\n  container: DisplayObjectContainer,\n  action: FrameActionPlaceObject\n) {\n  const children = container.__children;\n  let character: DisplayObject | undefined;\n  if (action.characterId) {\n    let index = children.findIndex((o) => o.__depth >= action.depth);\n    let oldCharacter: DisplayObject | null = null;\n    if (index === -1) {\n      index = children.length;\n    } else if (children[index].__depth === action.depth) {\n      const char = children[index].__character;\n      if (char?.id === action.characterId) {\n        character = children[index];\n      } else {\n        oldCharacter = children[index];\n        container.removeChildAt(index);\n      }\n    }\n\n    if (character) {\n      setupCharacter(container, character, action, !action.moveCharacter);\n    } else {\n      const { characterId, depth } = action;\n      DisplayObject.__initChar(\n        () => library.instantiateCharacter<DisplayObject>(characterId),\n        (char) => {\n          container.addChildAt(char, index);\n          char.__depth = depth;\n          if (oldCharacter) {\n            // When same depth is re-used for new character,\n            // it seems attributes of old character would carry over to new character.\n            copyCharacter(oldCharacter, char);\n          }\n          setupCharacter(container, char, action, !action.moveCharacter);\n        }\n      );\n    }\n  } else {\n    character = children.find((o) => o.__depth === action.depth);\n    if (character) {\n      setupCharacter(container, character, action, false);\n    }\n  }\n}\n\nexport function executeActionRemoveObject(\n  container: DisplayObjectContainer,\n  action: FrameActionRemoveObject\n) {\n  const index = container.__children.findIndex(\n    (o) => o.__depth === action.depth\n  );\n  if (index < 0) {\n    return;\n  }\n\n  container.removeChildAt(index);\n}\n\nexport function executeActionStartSound(\n  library: AssetLibrary,\n  ctx: SoundContext,\n  action: FrameActionStartSound\n) {\n  ctx.syncSound(library, action.characterId, action.soundInfo);\n}\n\nfunction copyCharacter(from: DisplayObject, to: DisplayObject) {\n  mat2d.copy(to.__node.transformLocal, from.__node.transformLocal);\n  vec4.copy(\n    to.__node.colorTransformLocalMul,\n    from.__node.colorTransformLocalMul\n  );\n  vec4.copy(\n    to.__node.colorTransformLocalAdd,\n    from.__node.colorTransformLocalMul\n  );\n  to.__clipDepth = from.__clipDepth;\n  to.name = from.name;\n  to.filters = from.filters;\n  to.cacheAsBitmap = from.cacheAsBitmap;\n  to.visible = from.visible;\n}\n\nfunction setupCharacter(\n  container: DisplayObjectContainer,\n  character: DisplayObject,\n  action: FrameActionPlaceObject,\n  reset: boolean\n) {\n  if (action.matrix != null) {\n    mat2d.copy(character.__node.transformLocal, action.matrix);\n    character.__node.transformLocal[4] /= 20;\n    character.__node.transformLocal[5] /= 20;\n    character.__node.markLayoutDirty();\n  } else if (reset) {\n    mat2d.identity(character.__node.transformLocal);\n    character.__node.markLayoutDirty();\n  }\n\n  if (action.colorTransform != null) {\n    vec4.copy(\n      character.__node.colorTransformLocalMul,\n      action.colorTransform.slice(0, 4) as vec4\n    );\n    vec4.copy(\n      character.__node.colorTransformLocalAdd,\n      action.colorTransform.slice(4, 8) as vec4\n    );\n  } else if (reset) {\n    vec4.set(character.__node.colorTransformLocalMul, 1, 1, 1, 1);\n    vec4.set(character.__node.colorTransformLocalAdd, 0, 0, 0, 0);\n  }\n\n  if (action.version <= 1) {\n    return;\n  }\n\n  if (action.clipDepth != null) {\n    character.__clipDepth = action.clipDepth;\n  } else if (reset) {\n    character.__clipDepth = -1;\n  }\n\n  if (character instanceof MorphShape) {\n    if (action.ratio != null) {\n      character.__ratio = action.ratio;\n      character.__character?.applyTo(character);\n    } else if (reset) {\n      character.__ratio = 0;\n      character.__character?.applyTo(character);\n    }\n  }\n\n  if (action.name != null) {\n    character.name = action.name;\n    (container as any)[character.name] = character;\n  }\n\n  if (action.version <= 2) {\n    return;\n  }\n\n  if (action.filters != null) {\n    const filters: BitmapFilter[] = [];\n    for (const f of action.filters) {\n      switch (f.id) {\n        case FilterID.Blur: {\n          const filter = new BlurFilter();\n          filter.blurX = f.blurX;\n          filter.blurY = f.blurY;\n          filter.quality = f.passes;\n\n          filters.push(filter);\n          break;\n        }\n        case FilterID.DropShadow: {\n          const filter = new DropShadowFilter();\n          filter.color = f.color;\n          filter.blurX = f.blurX;\n          filter.blurY = f.blurY;\n          filter.angle = (f.angle * 180) / Math.PI;\n          filter.distance = f.distance;\n          filter.strength = f.strength;\n          filter.inner = f.inner;\n          filter.knockout = f.knockout;\n          filter.quality = f.passes;\n\n          filters.push(filter);\n          break;\n        }\n      }\n    }\n    character.filters = filters;\n  } else if (reset) {\n    character.filters = [];\n  }\n\n  if (action.cacheAsBitmap != null) {\n    character.cacheAsBitmap = action.cacheAsBitmap;\n  } else if (reset) {\n    character.cacheAsBitmap = false;\n  }\n\n  if (action.visible != null) {\n    character.visible = action.visible;\n  } else if (reset) {\n    character.visible = true;\n  }\n\n  // TODO: blendMode\n}\n\nexport function updateFrameMasks(container: DisplayObjectContainer) {\n  const clips: DisplayObject[] = [];\n  for (const child of container.__children) {\n    if (child.__clipDepth >= 0) {\n      clips.push(child);\n    }\n  }\n  for (const child of container.__children) {\n    for (const clip of clips) {\n      if (child.__depth > clip.__depth && child.__depth <= clip.__clipDepth) {\n        child.mask = clip;\n      }\n    }\n  }\n}\n","import { vec4 } from \"gl-matrix\";\n\nexport function preMultiplyAlpha(color: number): number {\n  let a = (color >>> 24) & 0xff;\n  let r = (color >>> 16) & 0xff;\n  let g = (color >>> 8) & 0xff;\n  let b = (color >>> 0) & 0xff;\n  const alpha = a / 0xff;\n  r = Math.round(r * alpha) & 0xff;\n  g = Math.round(g * alpha) & 0xff;\n  b = Math.round(b * alpha) & 0xff;\n  return r * 0x1 + g * 0x100 + b * 0x10000 + a * 0x1000000;\n}\n\nexport function decomposeColorVec(out: vec4, color: number): vec4 {\n  out[0] = ((color >>> 0) & 0xff) / 0xff;\n  out[1] = ((color >>> 8) & 0xff) / 0xff;\n  out[2] = ((color >>> 16) & 0xff) / 0xff;\n  out[3] = ((color >>> 24) & 0xff) / 0xff;\n  return out;\n}\n\nexport function multiplyColorTransform(\n  outMul: vec4,\n  outAdd: vec4,\n  parentMul: vec4,\n  parentAdd: vec4,\n  childMul: vec4,\n  childAdd: vec4\n) {\n  vec4.mul(outMul, childMul, parentMul);\n  vec4.mul(outAdd, childAdd, parentMul);\n  vec4.add(outAdd, outAdd, parentAdd);\n}\n","import { mat2d } from \"gl-matrix\";\n\nexport function projection(\n  out: mat2d,\n  width: number,\n  height: number,\n  invertY: boolean\n) {\n  mat2d.identity(out);\n  out[0] = 2 / width;\n  out[3] = (invertY ? -2 : 2) / height;\n  out[4] = -1;\n  out[5] = invertY ? 1 : -1;\n  return out;\n}\n","import { mat2d, vec2 } from \"gl-matrix\";\n\nexport type rect = Float32Array;\n\nconst epsilon = 1e-6;\n\nexport const rect = {\n  create(): rect {\n    return Float32Array.of(0, 0, 0, 0);\n  },\n  fromValues(x: number, y: number, width: number, height: number): rect {\n    return Float32Array.of(x, y, width, height);\n  },\n  copy(out: rect, rect: rect) {\n    out[0] = rect[0];\n    out[1] = rect[1];\n    out[2] = rect[2];\n    out[3] = rect[3];\n    return out;\n  },\n  equals(a: rect, b: rect) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n  },\n  intersects(a: rect, b: rect) {\n    return (\n      a[0] - (b[0] + b[2]) < -epsilon &&\n      b[0] - (a[0] + a[2]) < -epsilon &&\n      a[1] - (b[1] + b[3]) < -epsilon &&\n      b[1] - (a[1] + a[3]) < -epsilon\n    );\n  },\n  contains(rect: rect, x: number, y: number) {\n    return (\n      x >= rect[0] &&\n      x < rect[0] + rect[2] &&\n      y >= rect[1] &&\n      y < rect[1] + rect[3]\n    );\n  },\n  clear(out: rect) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n  },\n  scale(out: rect, rect: rect, factor: number) {\n    out[0] = rect[0] * factor;\n    out[1] = rect[1] * factor;\n    out[2] = rect[2] * factor;\n    out[3] = rect[3] * factor;\n    return out;\n  },\n  translate(out: rect, rect: rect, t: vec2) {\n    out[0] = rect[0] + t[0];\n    out[1] = rect[1] + t[1];\n    out[2] = rect[2];\n    out[3] = rect[3];\n    return out;\n  },\n  union(out: rect, a: rect, b: rect) {\n    if (a[2] === 0 || a[3] === 0) {\n      rect.copy(out, b);\n    } else if (b[2] === 0 || b[3] === 0) {\n      rect.copy(out, a);\n    }\n\n    const minX = Math.min(a[0], b[0]);\n    const minY = Math.min(a[1], b[1]);\n    const maxX = Math.max(a[0] + a[2], b[0] + b[2]);\n    const maxY = Math.max(a[1] + a[3], b[1] + b[3]);\n\n    out[0] = minX;\n    out[1] = minY;\n    out[2] = maxX - minX;\n    out[3] = maxY - minY;\n    return out;\n  },\n  apply(out: rect, rect: rect, mat: mat2d) {\n    const vec: [number, number] = [0, 0];\n    let [x, y] = vec2.transformMat2d(vec, [rect[0], rect[1]], mat);\n    let minX = x,\n      minY = y,\n      maxX = x,\n      maxY = y;\n\n    [x, y] = vec2.transformMat2d(vec, [rect[0] + rect[2], rect[1]], mat);\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n\n    [x, y] = vec2.transformMat2d(vec, [rect[0], rect[1] + rect[3]], mat);\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n\n    [x, y] = vec2.transformMat2d(\n      vec,\n      [rect[0] + rect[2], rect[1] + rect[3]],\n      mat\n    );\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n\n    out[0] = minX;\n    out[1] = minY;\n    out[2] = maxX - minX;\n    out[3] = maxY - minY;\n    return out;\n  },\n};\n","import { rect } from \"../math/rect\";\nimport { mat2d, vec2 } from \"gl-matrix\";\nimport { Texture } from \"./gl/Texture\";\n\ninterface RenderObjectMerge {\n  renderObject: RenderObject;\n  color?: number;\n  transform: mat2d;\n}\n\ninterface RenderObjectRectOptions {\n  invertY?: boolean;\n  texWidth?: number;\n  texHeight?: number;\n}\n\nexport type RenderObjectKind = \"shape\" | \"text\";\n\nexport class RenderObject {\n  constructor(\n    readonly kind: RenderObjectKind,\n    readonly vertices: Float32Array,\n    readonly colors: Uint32Array,\n    readonly indices: Uint16Array,\n    readonly uvMatrix: mat2d,\n    public texture: HTMLImageElement | HTMLCanvasElement | Texture | null,\n    readonly fillMode: number,\n    readonly bounds: rect\n  ) {}\n\n  static rect(\n    bounds: rect,\n    texture: Texture,\n    opts?: RenderObjectRectOptions\n  ): RenderObject {\n    const {\n      invertY = false,\n      texWidth = texture.width,\n      texHeight = texture.height,\n    } = opts ?? {};\n\n    const vertices = new Float32Array(8);\n    vertices[0] = bounds[2];\n    vertices[1] = 0;\n    vertices[2] = 0;\n    vertices[3] = bounds[3];\n    vertices[4] = 0;\n    vertices[5] = 0;\n    vertices[6] = bounds[2];\n    vertices[7] = bounds[3];\n\n    const colors = new Uint32Array(4);\n    colors.fill(0xffffffff);\n\n    const indices = new Uint16Array(6);\n    indices[0] = 0;\n    indices[1] = 1;\n    indices[2] = 2;\n    indices[3] = 1;\n    indices[4] = 0;\n    indices[5] = 3;\n\n    const uvMatrix = mat2d.create();\n    mat2d.scale(uvMatrix, uvMatrix, [1 / texWidth, 1 / texHeight]);\n    if (invertY) {\n      mat2d.scale(uvMatrix, uvMatrix, [1, -1]);\n      mat2d.translate(uvMatrix, uvMatrix, [0, -texHeight]);\n    }\n    mat2d.translate(uvMatrix, uvMatrix, [bounds[0], bounds[1]]);\n\n    return new RenderObject(\n      \"shape\",\n      vertices,\n      colors,\n      indices,\n      uvMatrix,\n      texture,\n      0,\n      bounds\n    );\n  }\n\n  static line(\n    ax: number,\n    ay: number,\n    bx: number,\n    by: number,\n    width: number,\n    color: number\n  ): RenderObject {\n    const norm = normal(ax, ay, bx, by);\n    const radius = width / 2;\n\n    const vertices = new Float32Array(8);\n    vertices[0] = bx - norm[0] * radius;\n    vertices[1] = by - norm[1] * radius;\n    vertices[2] = ax + norm[0] * radius;\n    vertices[3] = ay + norm[1] * radius;\n    vertices[4] = ax - norm[0] * radius;\n    vertices[5] = ay - norm[1] * radius;\n    vertices[6] = bx + norm[0] * radius;\n    vertices[7] = by + norm[1] * radius;\n\n    const colors = new Uint32Array(4);\n    colors.fill(color);\n\n    const indices = new Uint16Array(6);\n    indices[0] = 0;\n    indices[1] = 1;\n    indices[2] = 2;\n    indices[3] = 1;\n    indices[4] = 0;\n    indices[5] = 3;\n\n    const uvMatrix = mat2d.create();\n    const bounds = rect.create();\n    bounds[0] = Math.min(ax, bx);\n    bounds[1] = Math.min(ay, by);\n    bounds[2] = Math.max(ax, bx) - bounds[0];\n    bounds[3] = Math.max(ay, by) - bounds[1];\n\n    return new RenderObject(\n      \"shape\",\n      vertices,\n      colors,\n      indices,\n      uvMatrix,\n      Texture.WHITE,\n      0,\n      bounds\n    );\n  }\n\n  hitTest(x: number, y: number, exact: boolean): boolean {\n    if (!exact) {\n      return rect.contains(this.bounds, x, y);\n    }\n    // https://stackoverflow.com/a/2049593\n    const sign = (ax: number, ay: number, bx: number, by: number) => {\n      return (x - bx) * (ay - by) - (ax - bx) * (y - by);\n    };\n\n    const vertices = this.vertices;\n    const indices = this.indices;\n    const numTriangles = indices.length / 3;\n    for (let i = 0; i < numTriangles; i++) {\n      const ax = vertices[indices[i * 3 + 0] * 2 + 0];\n      const ay = vertices[indices[i * 3 + 0] * 2 + 1];\n      const bx = vertices[indices[i * 3 + 1] * 2 + 0];\n      const by = vertices[indices[i * 3 + 1] * 2 + 1];\n      const cx = vertices[indices[i * 3 + 2] * 2 + 0];\n      const cy = vertices[indices[i * 3 + 2] * 2 + 1];\n\n      const d1 = sign(ax, ay, bx, by);\n      const d2 = sign(bx, by, cx, cy);\n      const d3 = sign(cx, cy, ax, ay);\n\n      const hasNegative = d1 < 0 || d2 < 0 || d3 < 0;\n      const hasPositive = d1 > 0 || d2 > 0 || d3 > 0;\n      if (!hasNegative || !hasPositive) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static merge(\n    kind: RenderObjectKind,\n    input: RenderObjectMerge[]\n  ): RenderObject[] {\n    let numVertex = 0;\n    let numIndex = 0;\n    const subInput: RenderObjectMerge[] = [];\n    const result: RenderObject[] = [];\n\n    for (const i of input) {\n      if (numIndex + i.renderObject.indices.length >= 0x10000) {\n        result.push(doMerge(kind, subInput, numVertex, numIndex));\n        numVertex = 0;\n        numIndex = 0;\n        subInput.length = 0;\n      }\n\n      numVertex += i.renderObject.vertices.length / 2;\n      numIndex += i.renderObject.indices.length;\n      subInput.push(i);\n    }\n\n    if (numIndex > 0) {\n      result.push(doMerge(kind, subInput, numVertex, numIndex));\n    }\n    return result;\n  }\n}\n\nfunction doMerge(\n  kind: RenderObjectKind,\n  input: RenderObjectMerge[],\n  numVertex: number,\n  numIndex: number\n): RenderObject {\n  const vertices = new Float32Array(numVertex * 2);\n  const colors = new Uint32Array(numVertex);\n  const indices = new Uint16Array(numIndex);\n  const bounds = rect.create();\n  let vertexI = 0;\n  let indexI = 0;\n  for (const { renderObject, color, transform } of input) {\n    for (let i = 0; i < renderObject.vertices.length; i += 2) {\n      const outV = vertices.subarray(vertexI * 2 + i, vertexI * 2 + i + 2);\n      const inV = renderObject.vertices.subarray(i, i + 2);\n      vec2.transformMat2d(outV, inV, transform);\n    }\n    if (color == null) {\n      colors.set(renderObject.colors, vertexI);\n    } else {\n      colors.fill(color, vertexI, vertexI + renderObject.colors.length);\n    }\n    indices.set(\n      renderObject.indices.map((i) => i + vertexI),\n      indexI\n    );\n    rect.union(\n      bounds,\n      bounds,\n      rect.apply(rect.create(), renderObject.bounds, transform)\n    );\n\n    vertexI += renderObject.vertices.length / 2;\n    indexI += renderObject.indices.length;\n  }\n\n  return new RenderObject(\n    kind,\n    vertices,\n    colors,\n    indices,\n    mat2d.identity(mat2d.create()),\n    null,\n    0,\n    bounds\n  );\n}\n\nfunction normal(\n  ax: number,\n  ay: number,\n  bx: number,\n  by: number\n): [number, number] {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const l = Math.sqrt(dx * dx + dy * dy);\n  return [-dy / l, dx / l];\n}\n","import { mat2d, vec2, vec4 } from \"gl-matrix\";\nimport { RenderObject } from \"./RenderObject\";\nimport { rect } from \"../math/rect\";\nimport { FilterInstance } from \"./filter/Filter\";\nimport { RenderContext } from \"./RenderContext\";\nimport { Texture } from \"./gl/Texture\";\nimport { CachedRender } from \"./CachedRender\";\n\nexport function roundTwips(value: number) {\n  return Math.round(value * 20) / 20;\n}\n\nconst enum Flags {\n  DirtyBounds = 1,\n  DirtyTransform = 2,\n  DirtyChildTransform = 4,\n  DirtyRender = 8, // FIXME: apply this flag correctly\n\n  DirtyAll = 15,\n\n  IsRoot = 128,\n}\n\nconst tmpRect1 = rect.create();\nconst tmpRect2 = rect.create();\nconst tmpMat2d1 = mat2d.create();\nconst tmpMat2d2 = mat2d.create();\nconst tmpVec2 = vec2.create();\n\nexport class SceneNode {\n  flags: number = Flags.DirtyAll;\n\n  parent: SceneNode | null = null;\n  mask: SceneNode | null = null;\n  children: SceneNode[] = [];\n\n  visible = true;\n  isMask = false;\n  buttonState = -1;\n  renderObjects: RenderObject[] = [];\n  readonly boundsIntrinsic = rect.create();\n\n  cacheAsBitmap = false;\n  cachedRender: CachedRender | null = null;\n  filters: FilterInstance[] = [];\n\n  readonly transformLocal = mat2d.create();\n  readonly colorTransformLocalMul = vec4.fromValues(1, 1, 1, 1);\n  readonly colorTransformLocalAdd = vec4.fromValues(0, 0, 0, 0);\n\n  readonly boundsLocal = rect.create();\n  readonly boundsWorld = rect.create();\n  readonly transformRender = mat2d.create();\n  readonly transformWorld = mat2d.create();\n  readonly transformWorldInvert = mat2d.create();\n\n  constructor(readonly object: unknown) {}\n\n  markRenderDirty() {\n    let node: SceneNode | null = this;\n    while (node) {\n      if ((node.flags & Flags.DirtyRender) !== 0) {\n        break;\n      }\n      node.flags |= Flags.DirtyRender;\n      node = node.parent;\n    }\n  }\n\n  markLayoutDirty(dirtyTransform = true) {\n    // Mark parent bounds dirty.\n    let node: SceneNode | null | undefined = this;\n    while (node) {\n      node.flags |= Flags.DirtyBounds;\n      node = node.parent;\n    }\n\n    if (!dirtyTransform) {\n      return;\n    }\n\n    // Mark parent child transform dirty.\n    node = this;\n    while (node) {\n      node.flags |= Flags.DirtyChildTransform;\n      node = node.parent;\n    }\n\n    // Mark children transform dirty.\n    const nodes: SceneNode[] = [this];\n    while ((node = nodes.pop())) {\n      node.flags |= Flags.DirtyTransform | Flags.DirtyChildTransform;\n      for (const child of node.children) {\n        nodes.push(child);\n      }\n    }\n  }\n\n  ensureLayout() {\n    const queue: SceneNode[] = [this];\n    let node: SceneNode | undefined;\n    while ((node = queue.pop())) {\n      // Ensure parent transform.\n      if (node.parent && (node.parent.flags & Flags.DirtyTransform) !== 0) {\n        queue.push(node.parent);\n        continue;\n      }\n\n      // Enqueue children to traverse.\n      if (node.flags & Flags.DirtyChildTransform) {\n        queue.push(...node.children);\n        node.flags &= ~Flags.DirtyChildTransform;\n      }\n\n      if ((node.flags & Flags.DirtyTransform) === 0) {\n        continue;\n      }\n\n      // Compute world/render transform.\n      if (!node.parent) {\n        mat2d.copy(tmpMat2d1, node.transformLocal);\n        mat2d.copy(tmpMat2d2, node.transformLocal);\n      } else {\n        mat2d.multiply(\n          tmpMat2d1,\n          node.parent.transformWorld,\n          node.transformLocal\n        );\n        mat2d.multiply(\n          tmpMat2d2,\n          node.parent.transformRender,\n          node.transformLocal\n        );\n      }\n      if (node.cacheAsBitmap) {\n        mat2d.identity(tmpMat2d2);\n      }\n      const updated = !mat2d.exactEquals(tmpMat2d1, node.transformWorld);\n      const renderDirty = !mat2d.exactEquals(tmpMat2d2, node.transformRender);\n      node.flags &= ~Flags.DirtyTransform;\n\n      // Propagate computation.\n      if (updated) {\n        mat2d.copy(node.transformWorld, tmpMat2d1);\n        mat2d.invert(node.transformWorldInvert, node.transformWorld);\n        rect.apply(node.boundsWorld, node.boundsLocal, node.transformWorld);\n\n        let dirtyParent = node.parent;\n        while (dirtyParent) {\n          dirtyParent.flags |= Flags.DirtyBounds;\n          dirtyParent = dirtyParent.parent;\n        }\n        for (const child of node.children) {\n          child.flags |= Flags.DirtyTransform;\n        }\n      }\n      if (renderDirty) {\n        mat2d.copy(node.transformRender, tmpMat2d2);\n\n        let dirtyNode: SceneNode | null = node;\n        while (dirtyNode) {\n          dirtyNode.flags |= Flags.DirtyRender;\n          dirtyNode = dirtyNode.parent;\n        }\n      }\n    }\n\n    queue.push(this);\n    while ((node = queue.pop())) {\n      if ((node.flags & Flags.DirtyBounds) === 0) {\n        continue;\n      }\n\n      // Ensure children bounds.\n      let needChildrenBounds = false;\n      for (const child of node.children) {\n        if ((child.flags & Flags.DirtyBounds) === 0) {\n          continue;\n        }\n\n        if (!needChildrenBounds) {\n          needChildrenBounds = true;\n          queue.push(node);\n        }\n        queue.push(child);\n      }\n      if (needChildrenBounds) {\n        continue;\n      }\n\n      // Compute local & world bounds.\n      rect.copy(tmpRect1, node.boundsIntrinsic);\n      for (const child of node.children) {\n        rect.apply(tmpRect2, child.boundsLocal, child.transformLocal);\n        rect.union(tmpRect1, tmpRect1, tmpRect2);\n      }\n      const updated = !rect.equals(tmpRect1, node.boundsLocal);\n      node.flags &= ~Flags.DirtyBounds;\n\n      // Propagate to parent.\n      if (updated) {\n        mat2d.copy(node.boundsLocal, tmpRect1);\n        rect.apply(node.boundsWorld, node.boundsLocal, node.transformWorld);\n\n        if (node.parent) {\n          node.parent.flags |= Flags.DirtyBounds;\n          queue.push(node.parent);\n        }\n      }\n    }\n  }\n\n  setParent(parent: SceneNode | null, index: number) {\n    if (this.parent === parent) {\n      if (parent) {\n        const i = parent.children.indexOf(this);\n        parent.children.splice(i, 1);\n        parent.children.splice(index, 0, this);\n        parent.markRenderDirty();\n      }\n      return;\n    }\n\n    if (this.parent) {\n      const i = this.parent.children.indexOf(this);\n      this.parent.children.splice(i, 1);\n      this.parent.markLayoutDirty(false);\n    }\n\n    this.parent = parent;\n\n    if (this.parent) {\n      this.parent.children.splice(index, 0, this);\n    } else if ((this.flags & Flags.IsRoot) === 0) {\n      this.onRemoveFromStage();\n    }\n\n    this.markLayoutDirty();\n  }\n\n  setRenderObjects(objects: RenderObject[], intrinsicBounds: rect) {\n    this.renderObjects = objects;\n\n    rect.copy(this.boundsIntrinsic, intrinsicBounds);\n    this.markLayoutDirty(false);\n  }\n\n  render(ctx: RenderContext) {\n    this.ensureLayout();\n    this.renderRecursive(ctx);\n  }\n\n  private renderRecursive(ctx: RenderContext) {\n    ctx.pushTransform(this.transformLocal, {\n      colorMul: this.colorTransformLocalMul,\n      colorAdd: this.colorTransformLocalAdd,\n    });\n\n    this.doRender(ctx);\n\n    ctx.popTransform();\n  }\n\n  private doRender(ctx: RenderContext) {\n    if (!this.visible) {\n      return;\n    }\n    if (this.isMask && ctx.transform.renderMask !== this) {\n      return;\n    }\n\n    rect.apply(tmpRect1, this.boundsLocal, ctx.transform.view);\n    if (ctx.viewport && !rect.intersects(tmpRect1, ctx.viewport)) {\n      return;\n    }\n\n    if (\n      this.cacheAsBitmap &&\n      this.cachedRender &&\n      (this.flags & Flags.DirtyRender) === 0\n    ) {\n      ctx.pushTransform(this.cachedRender.view);\n      ctx.renderObject(this.cachedRender.renderObject);\n      ctx.popTransform();\n      return;\n    }\n\n    this.flags &= ~Flags.DirtyRender;\n\n    this.cachedRender?.return();\n    this.cachedRender = null;\n\n    this.doRenderMask(ctx);\n  }\n\n  private doRenderMask(ctx: RenderContext) {\n    const mask = this.mask;\n    if (mask) {\n      mat2d.invert(tmpMat2d1, this.transformWorld);\n      mat2d.multiply(tmpMat2d1, tmpMat2d1, mask.transformWorld);\n\n      ctx.pushTransform(tmpMat2d1, { renderMask: mask });\n      mask.doRender(ctx);\n      ctx.popTransform();\n\n      ctx.transform.useMask.push(mask);\n    }\n\n    this.doRenderFilter(ctx);\n  }\n\n  private doRenderFilter(ctx: RenderContext) {\n    if (this.cacheAsBitmap || this.filters.length > 0) {\n      const paddings = vec2.create();\n      for (const filter of this.filters) {\n        vec2.max(paddings, paddings, filter.paddings);\n      }\n      vec2.ceil(paddings, paddings);\n\n      const viewMat = ctx.transform.view;\n\n      const filters = this.filters.slice();\n      const onRenderTexture = (\n        ctx: RenderContext,\n        tex: Texture,\n        bounds: rect\n      ) => {\n        const nextFilter = filters.shift();\n        if (nextFilter) {\n          ctx.renderFilter(tex, bounds, nextFilter, onRenderTexture);\n          return;\n        }\n\n        if (this.cacheAsBitmap) {\n          ctx.renderCache(tex, bounds, viewMat, (render) => {\n            this.cachedRender = render;\n          });\n          ctx.renderObject(RenderObject.rect(bounds, tex));\n        } else {\n          ctx.renderObject(RenderObject.rect(bounds, tex));\n        }\n      };\n\n      ctx.renderTexture(\n        this.boundsLocal,\n        paddings,\n        (ctx) => this.doRenderContent(ctx),\n        onRenderTexture\n      );\n    } else {\n      this.doRenderContent(ctx);\n    }\n  }\n\n  private doRenderContent(ctx: RenderContext) {\n    for (const o of this.renderObjects) {\n      ctx.renderObject(o);\n    }\n\n    if (this.buttonState >= 0) {\n      this.children[this.buttonState].render(ctx);\n    } else {\n      for (const child of this.children) {\n        child.renderRecursive(ctx);\n      }\n    }\n  }\n\n  onRemoveFromStage() {\n    this.cachedRender?.return();\n    this.cachedRender = null;\n    for (const child of this.children) {\n      child.onRemoveFromStage();\n    }\n  }\n\n  hitTest(worldPt: vec2, exact: boolean): boolean {\n    if (this.buttonState >= 0) {\n      return this.children[3].hitTest(worldPt, true);\n    }\n    if (this.mask && !this.mask.hitTest(worldPt, exact)) {\n      return false;\n    }\n\n    if (!exact) {\n      this.ensureLayout();\n      vec2.transformMat2d(tmpVec2, worldPt, this.transformWorldInvert);\n      return rect.contains(this.boundsLocal, tmpVec2[0], tmpVec2[1]);\n    }\n\n    const nodes: SceneNode[] = [this];\n    let node: SceneNode | undefined;\n    while ((node = nodes.pop())) {\n      if (node.renderObjects.length > 0) {\n        vec2.transformMat2d(tmpVec2, worldPt, node.transformWorldInvert);\n        if (\n          node.renderObjects.some((obj) =>\n            obj.hitTest(tmpVec2[0], tmpVec2[1], exact)\n          )\n        ) {\n          return true;\n        }\n      }\n\n      for (const child of node.children) {\n        nodes.push(child);\n      }\n    }\n    return false;\n  }\n\n  clone() {\n    const nodeMap = new Map<SceneNode, SceneNode>();\n    const clone = (n: SceneNode): SceneNode => {\n      let node = nodeMap.get(n);\n      if (node) {\n        return node;\n      }\n      node = new SceneNode(n.object);\n      nodeMap.set(n, node);\n\n      node.visible = n.visible;\n      node.isMask = n.isMask;\n      node.buttonState = n.buttonState;\n      node.renderObjects = n.renderObjects.slice();\n      node.cacheAsBitmap = n.cacheAsBitmap;\n      node.filters = n.filters.slice();\n      rect.copy(node.boundsIntrinsic, n.boundsIntrinsic);\n      mat2d.copy(node.transformLocal, n.transformLocal);\n      vec4.copy(node.colorTransformLocalMul, n.colorTransformLocalMul);\n      vec4.copy(node.colorTransformLocalAdd, n.colorTransformLocalAdd);\n\n      node.mask = n.mask && clone(n.mask);\n      for (const child of n.children) {\n        const clonedChild = clone(child);\n        node.children.push(clonedChild);\n        clonedChild.parent = node;\n      }\n\n      return node;\n    };\n\n    return clone(this);\n  }\n}\n","import { mat2d, vec2, vec4 } from \"gl-matrix\";\nimport { Filter, FilterInput, FilterInstance } from \"./Filter\";\nimport { Renderer } from \"../Renderer\";\nimport { TextureTarget } from \"../gl/targets\";\nimport { Texture } from \"../gl/Texture\";\nimport {\n  attrs,\n  attrFloat,\n  attrUint,\n  programBlur,\n  vertexArray,\n  programShadow,\n} from \"./programs\";\nimport { projection } from \"../../math/matrix\";\nimport { preMultiplyAlpha, decomposeColorVec } from \"../../math/color\";\n\nexport interface DropShadowFilterInstance extends FilterInstance {\n  blurX: number;\n  blurY: number;\n  passes: number;\n  color: number;\n  strength: number;\n  angle: number;\n  distance: number;\n  knockout: boolean;\n}\n\nconst outProjection = mat2d.create();\nconst inTexScale = vec2.create();\nconst outTexScale = vec2.create();\n\nexport class DropShadowFilter implements Filter<DropShadowFilterInstance> {\n  static readonly instance = new DropShadowFilter();\n\n  isEffective(instance: DropShadowFilterInstance): boolean {\n    return instance.blurX > 0 || instance.blurY > 0 || instance.distance > 0;\n  }\n\n  apply(\n    renderer: Renderer,\n    input: FilterInput<DropShadowFilterInstance>[],\n    out: TextureTarget\n  ): void {\n    const state = renderer.glState;\n    const gl = state.gl;\n\n    const { width, height } = out.texture;\n    projection(outProjection, width, height, false);\n    vec2.set(outTexScale, 1 / width, 1 / height);\n\n    state.setViewport(0, 0, width, height);\n    state.disable(gl.BLEND);\n    state.setClearColor(0, 0, 0, 0);\n\n    const texA = renderer.renderPool.takeTexture(width, height);\n    const texB = renderer.renderPool.takeTexture(width, height);\n    try {\n      const batchInput: FilterInput<DropShadowFilterInstance>[] = [];\n      let radius = 0;\n      let texture: Texture | null = null;\n      let passes: number | null = null;\n      const flush = () => {\n        if (!texture || !passes) {\n          return;\n        }\n\n        const blurProgram = programBlur(radius);\n\n        const numRect = batchInput.length;\n        attrs.update(state, 0, numRect * 4 * 17);\n\n        let front = texA;\n        let back = texB;\n        for (let i = 0; i < passes * 2; i++) {\n          let passFront = front;\n          let passBack = back.texture;\n          let mode = i % 2;\n          if (i === 0) {\n            passBack = texture;\n            mode += 2;\n          }\n\n          passFront.framebuffer.ensure(state);\n          state.bindFramebuffer(\n            gl.FRAMEBUFFER,\n            passFront.framebuffer.framebuffer\n          );\n\n          blurProgram.ensure(state);\n          vertexArray.ensure(state);\n          passBack.ensure(state);\n\n          state.useProgram(blurProgram.program);\n          const texUnit = state.bindTextures([passBack.texture])[0];\n          blurProgram.uniform(state, \"uTexture\", texUnit);\n          blurProgram.uniform(state, \"uMode\", mode);\n          vertexArray.bind(state);\n          gl.drawElements(gl.TRIANGLES, numRect * 6, gl.UNSIGNED_SHORT, 0);\n\n          let tmp = back;\n          back = front;\n          front = tmp;\n        }\n\n        for (let i = 0; i < batchInput.length; i++) {\n          const color = decomposeColorVec(\n            vec4.create(),\n            preMultiplyAlpha(batchInput[i].instance.color)\n          );\n          vec4.scale(color, color, batchInput[i].instance.strength);\n          const delta = vec2.fromValues(batchInput[i].instance.distance, 0);\n          vec2.rotate(delta, delta, [0, 0], batchInput[i].instance.angle);\n          vec2.mul(delta, delta, outTexScale);\n          let mode = 0;\n          if (batchInput[i].instance.knockout) {\n            mode |= 1;\n          }\n          for (let j = 0; j < 4; j++) {\n            const attrI = (i * 4 + j) * 17;\n            attrFloat[attrI + 0] = delta[0];\n            attrFloat[attrI + 1] = delta[1];\n\n            attrFloat[attrI + 8] = color[0];\n            attrFloat[attrI + 9] = color[1];\n            attrFloat[attrI + 10] = color[2];\n            attrFloat[attrI + 11] = color[3];\n\n            attrUint[attrI + 16] = mode;\n          }\n        }\n        attrs.update(state, 0, numRect * 4 * 17);\n\n        out.framebuffer.ensure(state);\n        state.bindFramebuffer(gl.FRAMEBUFFER, out.framebuffer.framebuffer);\n\n        programShadow.ensure(state);\n        state.useProgram(programShadow.program);\n        const texUnits = state.bindTextures([\n          back.texture.texture,\n          texture.texture,\n        ]);\n        programShadow.uniform(state, \"uTextures[0]\", texUnits);\n        gl.drawElements(gl.TRIANGLES, numRect * 6, gl.UNSIGNED_SHORT, 0);\n\n        batchInput.length = 0;\n        passes = null;\n        texture = null;\n      };\n\n      for (const i of input) {\n        if (i.texture !== texture || i.instance.passes !== passes) {\n          flush();\n          texture = i.texture;\n          passes = i.instance.passes;\n          radius = 0;\n          vec2.set(inTexScale, 1 / texture.width, 1 / texture.height);\n        }\n\n        const deltaX = i.instance.blurX / 2;\n        const deltaY = i.instance.blurY / 2;\n        radius = Math.max(radius, deltaX, deltaY);\n\n        let attrI = batchInput.length * 4 * 17;\n        for (let j = 0; j < 4; j++) {\n          attrFloat[attrI + 0] = deltaX;\n          attrFloat[attrI + 1] = deltaY;\n          switch (j) {\n            case 0:\n              attrFloat[attrI + 2] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 3] = i.outBounds[1];\n              attrFloat[attrI + 4] = i.inBounds[0] + i.inBounds[2];\n              attrFloat[attrI + 5] = i.inBounds[1];\n              attrFloat[attrI + 6] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 7] = i.outBounds[1];\n              break;\n            case 1:\n              attrFloat[attrI + 2] = i.outBounds[0];\n              attrFloat[attrI + 3] = i.outBounds[1] + i.outBounds[3];\n              attrFloat[attrI + 4] = i.inBounds[0];\n              attrFloat[attrI + 5] = i.inBounds[1] + i.inBounds[3];\n              attrFloat[attrI + 6] = i.outBounds[0];\n              attrFloat[attrI + 7] = i.outBounds[1] + i.outBounds[3];\n              break;\n            case 2:\n              attrFloat[attrI + 2] = i.outBounds[0];\n              attrFloat[attrI + 3] = i.outBounds[1];\n              attrFloat[attrI + 4] = i.inBounds[0];\n              attrFloat[attrI + 5] = i.inBounds[1];\n              attrFloat[attrI + 6] = i.outBounds[0];\n              attrFloat[attrI + 7] = i.outBounds[1];\n              break;\n            case 3:\n              attrFloat[attrI + 2] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 3] = i.outBounds[1] + i.outBounds[3];\n              attrFloat[attrI + 4] = i.inBounds[0] + i.inBounds[2];\n              attrFloat[attrI + 5] = i.inBounds[1] + i.inBounds[3];\n              attrFloat[attrI + 6] = i.outBounds[0] + i.outBounds[2];\n              attrFloat[attrI + 7] = i.outBounds[1] + i.outBounds[3];\n              break;\n          }\n\n          attrFloat[attrI + 8] = i.inBounds[0] + 0.5;\n          attrFloat[attrI + 9] = i.inBounds[1] + 0.5;\n          attrFloat[attrI + 10] = i.inBounds[0] + i.inBounds[2] - 1.5;\n          attrFloat[attrI + 11] = i.inBounds[1] + i.inBounds[3] - 1.5;\n\n          attrFloat[attrI + 12] = i.outBounds[0] + 0.5;\n          attrFloat[attrI + 13] = i.outBounds[1] + 0.5;\n          attrFloat[attrI + 14] = i.outBounds[0] + i.outBounds[2] - 1.5;\n          attrFloat[attrI + 15] = i.outBounds[1] + i.outBounds[3] - 1.5;\n\n          const delta = attrFloat.subarray(attrI + 0, attrI + 2);\n          const vertex = attrFloat.subarray(attrI + 2, attrI + 4);\n          const inTexCoords = attrFloat.subarray(attrI + 4, attrI + 6);\n          const outTexCoords = attrFloat.subarray(attrI + 6, attrI + 8);\n          const inBoundsMin = attrFloat.subarray(attrI + 8, attrI + 10);\n          const inBoundsMax = attrFloat.subarray(attrI + 10, attrI + 12);\n          const outBoundsMin = attrFloat.subarray(attrI + 12, attrI + 14);\n          const outBoundsMax = attrFloat.subarray(attrI + 14, attrI + 16);\n\n          vec2.mul(delta, delta, inTexScale);\n          vec2.transformMat2d(vertex, vertex, outProjection);\n          vec2.mul(inTexCoords, inTexCoords, inTexScale);\n          vec2.mul(inBoundsMin, inBoundsMin, inTexScale);\n          vec2.mul(inBoundsMax, inBoundsMax, inTexScale);\n          vec2.mul(outTexCoords, outTexCoords, outTexScale);\n          vec2.mul(outBoundsMin, outBoundsMin, outTexScale);\n          vec2.mul(outBoundsMax, outBoundsMax, outTexScale);\n\n          attrI += 17;\n        }\n\n        batchInput.push(i);\n      }\n      flush();\n    } finally {\n      renderer.renderPool.returnTexture(texA);\n      renderer.renderPool.returnTexture(texB);\n    }\n  }\n}\n","import { Program } from \"../gl/Program\";\nimport { blurVertexShader, blurFragmentShader } from \"../programs/blur\";\nimport { shadowVertexShader, shadowFragmentShader } from \"../programs/shadow\";\nimport { Buffer } from \"../gl/Buffer\";\nimport { VertexArray } from \"../gl/VertexArray\";\n\nconst programBlurCache = new Map<number, Program>();\n\nexport const programBlur = (blurRadius: number) => {\n  const kernelWidth = Math.max(1, Math.ceil(blurRadius / 2));\n  let prog = programBlurCache.get(kernelWidth);\n  if (!prog) {\n    prog = new Program(blurVertexShader, blurFragmentShader(kernelWidth));\n    programBlurCache.set(kernelWidth, prog);\n  }\n  return prog;\n};\nexport const programShadow = new Program(\n  shadowVertexShader,\n  shadowFragmentShader\n);\n\nexport const maxRect = 100;\nexport const indices = Buffer.index(\n  new Uint16Array(maxRect * 6),\n  \"STREAM_DRAW\"\n);\n\nconst attrData = new ArrayBuffer(maxRect * 4 * 68);\nexport const attrFloat = new Float32Array(attrData);\nexport const attrUint = new Uint32Array(attrData);\nexport const attrs = Buffer.vertex(attrFloat, \"STREAM_DRAW\");\nexport const vertexArray = new VertexArray(\n  [\n    {\n      index: 0,\n      buffer: attrs,\n      type: \"float\",\n      components: 4,\n      offset: 0,\n      stride: 68,\n    },\n    {\n      index: 1,\n      buffer: attrs,\n      type: \"float\",\n      components: 4,\n      offset: 16,\n      stride: 68,\n    },\n    {\n      index: 2,\n      buffer: attrs,\n      type: \"float\",\n      components: 4,\n      offset: 32,\n      stride: 68,\n    },\n    {\n      index: 3,\n      buffer: attrs,\n      type: \"float\",\n      components: 4,\n      offset: 48,\n      stride: 68,\n    },\n    {\n      index: 4,\n      buffer: attrs,\n      type: \"uint\",\n      components: 1,\n      integer: true,\n      offset: 64,\n      stride: 68,\n    },\n  ],\n  indices\n);\n\nfor (let i = 0; i < maxRect; i++) {\n  indices.data[i * 6 + 0] = i * 4 + 0;\n  indices.data[i * 6 + 1] = i * 4 + 1;\n  indices.data[i * 6 + 2] = i * 4 + 2;\n  indices.data[i * 6 + 3] = i * 4 + 1;\n  indices.data[i * 6 + 4] = i * 4 + 0;\n  indices.data[i * 6 + 5] = i * 4 + 3;\n}\n","export const blurVertexShader = `\n#version 300 es\n\nlayout(location=0) in vec4 aVertex;\nlayout(location=1) in vec4 aTexCoords;\nlayout(location=2) in vec4 aBoundsIn;\nlayout(location=3) in vec4 aBoundsOut;\nlayout(location=4) in uint x;\n\nout vec2 vTextureCoords;\nout vec2 vDelta;\nout vec4 vBounds;\n\nuniform uint uMode;\n\nvoid main(void) {\n    gl_Position = vec4(aVertex.zw, 0.0, 1.0);\n\n    vec2 delta;\n    vec2 texCoords;\n    vec4 bounds;\n    if (int(uMode) % 2 != 0) {\n      delta = aVertex.xy * vec2(1.0, 0.0);\n    } else {\n      delta = aVertex.xy * vec2(0.0, 1.0);\n    }\n    if (int(uMode) / 2 != 0) {\n      texCoords = aTexCoords.xy;\n      bounds = aBoundsIn;\n    } else {\n      texCoords = aTexCoords.zw;\n      bounds = aBoundsOut;\n    }\n\n    vTextureCoords = texCoords;\n    vDelta = delta;\n    vBounds = bounds;\n}\n`;\n\nexport const blurFragmentShader = (kernelWidth: number) => {\n  const samples: number[] = [0];\n  for (let i = 0; i < kernelWidth; i++) {\n    const offset = i + 1;\n    samples.push(offset / kernelWidth);\n    samples.unshift(-offset / kernelWidth);\n  }\n\n  return `\n#version 300 es\nprecision highp float;\n\nin vec2 vTextureCoords;\nin vec2 vDelta;\nin vec4 vBounds;\n\nuniform sampler2D uTexture;\n\nout vec4 fragColor;\n\nvec4 sampleTex(float offset) {\n  vec2 coords = vTextureCoords + vDelta * offset;\n  coords = clamp(coords, vBounds.xy, vBounds.zw);\n  return texture(uTexture, coords);\n}\n\nvoid main(void) {\n  fragColor = vec4(0.0);\n  ${samples\n    .map(\n      (offset) =>\n        `fragColor += sampleTex(${offset.toFixed(20)}) * ${1 / samples.length};`\n    )\n    .join(\"\\n\")}\n}\n`;\n};\n","export const shadowVertexShader = `\n#version 300 es\n\nlayout(location=0) in vec4 aVertex;\nlayout(location=1) in vec4 aTexCoords;\nlayout(location=2) in vec4 aColor;\nlayout(location=3) in vec4 aBounds;\nlayout(location=4) in uint aMode;\n\nout vec2 vInTexCoords;\nout vec2 vOutTexCoords;\nout vec2 vDelta;\nout vec4 vBounds;\nout vec4 vColor;\nflat out uint vMode;\n\nvoid main(void) {\n    gl_Position = vec4(aVertex.zw, 0.0, 1.0);\n\n    vInTexCoords = aTexCoords.xy;\n    vOutTexCoords = aTexCoords.zw;\n    vDelta = aVertex.xy;\n    vBounds = aBounds;\n    vColor = aColor;\n    vMode = aMode;\n}\n`;\n\nexport const shadowFragmentShader = `\n#version 300 es\nprecision highp float;\n\nin vec2 vInTexCoords;\nin vec2 vOutTexCoords;\nin vec2 vDelta;\nin vec4 vBounds;\nin vec4 vColor;\nflat in uint vMode;\n\nuniform sampler2D uTextures[2];\n\nout vec4 fragColor;\n\nvoid main(void) {\n  vec2 shadowCoords = clamp(vOutTexCoords - vDelta, vBounds.xy, vBounds.zw);\n  vec4 shadow = vColor * texture(uTextures[0], shadowCoords).a;\n  vec4 color = texture(uTextures[1], vInTexCoords);\n  if (int(vMode) % 2 != 0) {\n    fragColor = shadow * (1.0 - color.a);\n  } else {\n    fragColor = shadow * (1.0 - color.a) + color;\n  }\n}\n`;\n","import { GLState } from \"./GLState\";\nimport { TypedArray } from \"./typed-array\";\n\nexport class Buffer<T extends TypedArray = TypedArray> {\n  readonly data: T;\n\n  state: GLState | null = null;\n  buffer: WebGLBuffer | null = null;\n\n  get length() {\n    return this.data.length;\n  }\n\n  private constructor(\n    data: T,\n    readonly binding: \"ARRAY_BUFFER\" | \"ELEMENT_ARRAY_BUFFER\",\n    readonly usage: \"STATIC_DRAW\" | \"DYNAMIC_DRAW\" | \"STREAM_DRAW\"\n  ) {\n    this.data = data;\n  }\n\n  static index<T extends TypedArray>(data: T, usage: Buffer<T>[\"usage\"]) {\n    return new Buffer(data, \"ELEMENT_ARRAY_BUFFER\", usage);\n  }\n\n  static vertex<T extends TypedArray>(data: T, usage: Buffer<T>[\"usage\"]) {\n    return new Buffer(data, \"ARRAY_BUFFER\", usage);\n  }\n\n  ensure(state: GLState) {\n    if (this.buffer) {\n      return;\n    }\n    const gl = state.gl;\n\n    const buffer = gl.createBuffer();\n    state.bindBuffer(gl[this.binding], buffer);\n    gl.bufferData(gl[this.binding], this.data, gl[this.usage]);\n\n    this.state = state;\n    this.buffer = buffer;\n\n    state.contextLost.subscribe(this.onContextLost);\n  }\n\n  bind(state: GLState) {\n    this.ensure(state);\n    state.bindBuffer(state.gl[this.binding], this.buffer);\n  }\n\n  update(state: GLState, offset: number, length: number) {\n    this.bind(state);\n    const gl = state.gl;\n    gl.bufferSubData(gl[this.binding], 0, this.data, offset, length);\n    return this;\n  }\n\n  private onContextLost = () => {\n    if (this.state) {\n      this.state.contextLost.unsubscribe(this.onContextLost);\n      this.state = null;\n    }\n    this.buffer = null;\n  };\n}\n","import { GLState } from \"./GLState\";\nimport { TypedArray, TypedArrayConstructor } from \"./typed-array\";\n\ninterface TypeDef {\n  type: \"float\" | \"int\" | \"uint\" | \"bool\" | \"mat\" | \"sampler2D\";\n  components: number;\n  setter: string;\n}\n\nfunction toTypedArray<T extends TypedArray>(\n  value: unknown,\n  cls: TypedArrayConstructor<T>\n): T {\n  if (typeof value === \"number\" || typeof value === \"boolean\") {\n    const array = new cls(1);\n    array[0] = Number(value);\n    return array;\n  } else if (Array.isArray(value)) {\n    return cls.from(value);\n  } else if (value instanceof cls) {\n    return value.slice();\n  } else {\n    throw new Error(\"Invalid typed array value\");\n  }\n}\n\nfunction arrayEquals<T extends ArrayLike<unknown>>(\n  oldArray: T | null,\n  newArray: T\n): boolean {\n  if (!oldArray || oldArray.length !== newArray.length) {\n    return false;\n  }\n  for (let i = 0; i < oldArray.length; i++) {\n    if (newArray[i] !== oldArray[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport class Uniform {\n  readonly state: GLState;\n  readonly name: string;\n  readonly type: GLenum;\n  readonly size: number;\n  readonly location: WebGLUniformLocation;\n  readonly typeDef: TypeDef;\n  value: unknown = null;\n\n  constructor(\n    state: GLState,\n    info: WebGLActiveInfo,\n    location: WebGLUniformLocation\n  ) {\n    this.state = state;\n    this.name = info.name;\n    this.type = info.type;\n    this.size = info.size;\n    this.location = location;\n\n    const gl = this.state.gl;\n    const types: Record<GLenum, TypeDef> = {\n      [gl.FLOAT]: { type: \"float\", components: 1, setter: \"uniform1fv\" },\n      [gl.FLOAT_VEC2]: { type: \"float\", components: 2, setter: \"uniform2fv\" },\n      [gl.FLOAT_VEC3]: { type: \"float\", components: 3, setter: \"uniform3fv\" },\n      [gl.FLOAT_VEC4]: { type: \"float\", components: 4, setter: \"uniform4fv\" },\n      [gl.INT]: { type: \"int\", components: 1, setter: \"uniform1iv\" },\n      [gl.INT_VEC2]: { type: \"int\", components: 2, setter: \"uniform2iv\" },\n      [gl.INT_VEC3]: { type: \"int\", components: 3, setter: \"uniform3iv\" },\n      [gl.INT_VEC4]: { type: \"int\", components: 4, setter: \"uniform4iv\" },\n      [gl.UNSIGNED_INT]: { type: \"uint\", components: 1, setter: \"uniform1uiv\" },\n      [gl.UNSIGNED_INT_VEC2]: {\n        type: \"uint\",\n        components: 2,\n        setter: \"uniform2uiv\",\n      },\n      [gl.UNSIGNED_INT_VEC3]: {\n        type: \"uint\",\n        components: 3,\n        setter: \"uniform3uiv\",\n      },\n      [gl.UNSIGNED_INT_VEC4]: {\n        type: \"uint\",\n        components: 4,\n        setter: \"uniform4uiv\",\n      },\n      [gl.BOOL]: { type: \"bool\", components: 1, setter: \"uniform1iv\" },\n      [gl.BOOL_VEC2]: { type: \"bool\", components: 2, setter: \"uniform2iv\" },\n      [gl.BOOL_VEC3]: { type: \"bool\", components: 3, setter: \"uniform3iv\" },\n      [gl.BOOL_VEC4]: { type: \"bool\", components: 4, setter: \"uniform4iv\" },\n      [gl.FLOAT_MAT2]: {\n        type: \"mat\",\n        components: 4,\n        setter: \"uniformMatrix2fv\",\n      },\n      [gl.FLOAT_MAT3]: {\n        type: \"mat\",\n        components: 9,\n        setter: \"uniformMatrix3fv\",\n      },\n      [gl.FLOAT_MAT4]: {\n        type: \"mat\",\n        components: 16,\n        setter: \"uniformMatrix4fv\",\n      },\n      [gl.SAMPLER_2D]: { type: \"bool\", components: 1, setter: \"uniform1iv\" },\n    };\n    const typeDef = types[info.type];\n    if (!typeDef) {\n      throw new Error(`Unsupported uniform type: ${info.type}`);\n    }\n    this.typeDef = typeDef;\n  }\n\n  set(program: WebGLProgram | null, value: unknown) {\n    this.state.useProgram(program);\n    switch (this.typeDef.type) {\n      case \"float\": {\n        const newValue = toTypedArray(value, Float32Array);\n        const oldValue = (this.value as Float32Array) ?? new Float32Array(0);\n        if (arrayEquals(oldValue, newValue)) {\n          return;\n        }\n        (this.state.gl as any)[this.typeDef.setter](this.location, newValue);\n        this.value = newValue;\n        break;\n      }\n      case \"int\":\n      case \"bool\": {\n        const newValue = toTypedArray(value, Int32Array);\n        const oldValue = (this.value as Int32Array) ?? new Int32Array(0);\n        if (arrayEquals(oldValue, newValue)) {\n          return;\n        }\n        (this.state.gl as any)[this.typeDef.setter](this.location, newValue);\n        this.value = newValue;\n        break;\n      }\n      case \"uint\": {\n        const newValue = toTypedArray(value, Uint32Array);\n        const oldValue = (this.value as Uint32Array) ?? new Uint32Array(0);\n        if (arrayEquals(oldValue, newValue)) {\n          return;\n        }\n        (this.state.gl as any)[this.typeDef.setter](this.location, newValue);\n        this.value = newValue;\n        break;\n      }\n      case \"mat\": {\n        const newValue = toTypedArray(value, Float32Array);\n        const oldValue = (this.value as Float32Array) ?? new Float32Array(0);\n        if (arrayEquals(oldValue, newValue)) {\n          return;\n        }\n        (this.state.gl as any)[this.typeDef.setter](\n          this.location,\n          false,\n          newValue\n        );\n        this.value = newValue;\n        break;\n      }\n      case \"sampler2D\": {\n        const newValue = Array.isArray(value)\n          ? (value.slice() as WebGLTexture[])\n          : [value as WebGLTexture];\n        const oldValue = (this.value as WebGLTexture[]) ?? [];\n        if (arrayEquals(oldValue, newValue)) {\n          return;\n        }\n        (this.state.gl as any)[this.typeDef.setter](\n          this.location,\n          false,\n          newValue\n        );\n        this.value = newValue;\n        break;\n      }\n    }\n  }\n}\n","import { GLState } from \"./GLState\";\nimport { Uniform } from \"./Uniform\";\n\nexport class Program {\n  readonly vertexShader: string;\n  readonly fragmentShader: string;\n\n  state: GLState | null = null;\n  program: WebGLProgram | null = null;\n  private readonly uniforms = new Map<string, Uniform>();\n\n  constructor(vertexShader: string, fragmentShader: string) {\n    this.vertexShader = vertexShader;\n    this.fragmentShader = fragmentShader;\n  }\n\n  ensure(state: GLState) {\n    if (this.program) {\n      return;\n    }\n    const gl = state.gl;\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER)!;\n    gl.shaderSource(vertexShader, this.vertexShader.trim());\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const log = gl.getShaderInfoLog(vertexShader);\n      gl.deleteShader(vertexShader);\n      throw new Error(\"Cannot compile vertex shader: \" + log);\n    }\n\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER)!;\n    gl.shaderSource(fragmentShader, this.fragmentShader.trim());\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const log = gl.getShaderInfoLog(fragmentShader);\n      gl.deleteShader(fragmentShader);\n      throw new Error(\"Cannot compile fragment shader: \" + log);\n    }\n\n    const program = gl.createProgram()!;\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const log = gl.getProgramInfoLog(program);\n      gl.deleteProgram(program);\n      throw new Error(\"Cannot link program: \" + log);\n    }\n\n    this.uniforms.clear();\n    const numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < numUniforms; ++i) {\n      const info = gl.getActiveUniform(program, i)!;\n      const location = gl.getUniformLocation(program, info.name)!;\n      this.uniforms.set(info.name, new Uniform(state, info, location));\n    }\n\n    this.program = program;\n    this.state = state;\n\n    state.contextLost.subscribe(this.onContextLost);\n  }\n\n  uniform(state: GLState, name: string, value: unknown) {\n    this.ensure(state);\n    const uniform = this.uniforms.get(name);\n    if (!uniform) {\n      return;\n    }\n    uniform.set(this.program, value);\n  }\n\n  private onContextLost = () => {\n    if (this.state) {\n      this.state.contextLost.unsubscribe(this.onContextLost);\n      this.state = null;\n    }\n    this.program = null;\n  };\n}\n","import { GLState } from \"./GLState\";\n\nexport class Texture {\n  readonly data:\n    | HTMLImageElement\n    | {\n        width: number;\n        height: number;\n      };\n  readonly width: number;\n  readonly height: number;\n\n  state: GLState | null = null;\n  texture: WebGLTexture | null = null;\n\n  static readonly WHITE: Texture = (() => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = 16;\n    canvas.height = 16;\n\n    const ctx = canvas.getContext(\"2d\")!;\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fillRect(0, 0, 16, 16);\n\n    return new Texture(canvas);\n  })();\n\n  private constructor(data: Texture[\"data\"]) {\n    this.data = data;\n    this.width = data.width;\n    this.height = data.height;\n  }\n\n  static image(image: HTMLImageElement | HTMLCanvasElement) {\n    return new Texture(image);\n  }\n\n  static size(width: number, height: number) {\n    return new Texture({ width, height });\n  }\n\n  ensure(state: GLState) {\n    if (this.texture) {\n      return;\n    }\n    const gl = state.gl;\n\n    const tex = gl.createTexture();\n    state.bindTexture(0, tex);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n    if (this.data instanceof HTMLElement) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.width,\n        this.height,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    this.state = state;\n    this.texture = tex;\n\n    state.contextLost.subscribe(this.onContextLost);\n  }\n\n  delete() {\n    if (!this.state) {\n      return;\n    }\n    this.state.gl.deleteTexture(this.texture);\n    this.state.contextLost.unsubscribe(this.onContextLost);\n    this.state = null;\n    this.texture = null;\n  }\n\n  private onContextLost = () => {\n    if (this.state) {\n      this.state.contextLost.unsubscribe(this.onContextLost);\n      this.state = null;\n    }\n    this.texture = null;\n  };\n}\n","import { GLState } from \"./GLState\";\nimport { Buffer } from \"./Buffer\";\n\ninterface VertexArrayAttribute {\n  index: number;\n  buffer: Buffer;\n  type: \"byte\" | \"ushort\" | \"uint\" | \"float\";\n  components: number;\n  normalized?: boolean;\n  stride?: number;\n  offset?: number;\n  integer?: boolean;\n}\n\nexport class VertexArray {\n  state: GLState | null = null;\n  vertexArray: WebGLVertexArrayObject | null = null;\n\n  attributes: VertexArrayAttribute[];\n  indexBuffer: Buffer | null = null;\n\n  constructor(\n    attributes: VertexArrayAttribute[],\n    indexBuffer: Buffer | null = null\n  ) {\n    this.attributes = attributes;\n    this.indexBuffer = indexBuffer;\n  }\n\n  ensure(state: GLState) {\n    if (this.vertexArray) {\n      return;\n    }\n    const gl = state.gl;\n\n    const vertexArray = gl.createVertexArray();\n    state.bindVertexArray(vertexArray);\n\n    if (this.indexBuffer) {\n      this.indexBuffer.ensure(state);\n      state.bindBuffer(gl[this.indexBuffer.binding], this.indexBuffer.buffer);\n    }\n\n    for (const attr of this.attributes) {\n      const {\n        index,\n        buffer,\n        type,\n        components,\n        normalized = false,\n        stride = 0,\n        offset = 0,\n        integer = false,\n      } = attr;\n\n      let glType: GLenum;\n      switch (type) {\n        case \"byte\":\n          glType = gl.UNSIGNED_BYTE;\n          break;\n        case \"ushort\":\n          glType = gl.UNSIGNED_SHORT;\n          break;\n        case \"uint\":\n          glType = gl.UNSIGNED_INT;\n          break;\n        case \"float\":\n          glType = gl.FLOAT;\n          break;\n      }\n\n      buffer.ensure(state);\n      state.bindBuffer(gl[buffer.binding], buffer.buffer);\n      if (integer) {\n        gl.vertexAttribIPointer(index, components, glType, stride, offset);\n      } else {\n        gl.vertexAttribPointer(\n          index,\n          components,\n          glType,\n          normalized,\n          stride,\n          offset\n        );\n      }\n      gl.enableVertexAttribArray(index);\n    }\n\n    this.vertexArray = vertexArray;\n    this.state = state;\n\n    state.contextLost.subscribe(this.onContextLost);\n  }\n\n  bind(state: GLState) {\n    this.ensure(state);\n    state.bindVertexArray(this.vertexArray);\n    // HACK: Always rebind index buffer due to driver bugs:\n    // ref: https://stackoverflow.com/a/11261922\n    this.indexBuffer?.bind(state);\n  }\n\n  private onContextLost = () => {\n    if (this.state) {\n      this.state.contextLost.unsubscribe(this.onContextLost);\n      this.state = null;\n    }\n    this.vertexArray = null;\n  };\n}\n","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}